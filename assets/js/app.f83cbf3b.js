"use strict";(self.webpackChunkshimon_blog=self.webpackChunkshimon_blog||[]).push([[32143],{80973:(e,t,a)=>{a.d(t,{a:()=>n});const n={category:{"/":{path:"/category/",map:{vuepress:{path:"/category/vuepress/",keys:["v-7ff04f35"]},服务器:{path:"/category/%E6%9C%8D%E5%8A%A1%E5%99%A8/",keys:["v-6eec2164"]},教程:{path:"/category/%E6%95%99%E7%A8%8B/",keys:["v-20955d24","v-5b2dfc66"]},Linux:{path:"/category/linux/",keys:["v-715bd2d7","v-718fb290","v-1752d037","v-5eed4996","v-1c2fcf06","v-78c02211","v-1a4392ec","v-2ee1d1e9","v-aaef1ff8","v-d2a92084","v-4b2d1320","v-4652f6be","v-756dd164","v-0868e40c","v-242f3b18","v-5c07f092","v-3eea04e4","v-4e0b7530","v-dfdf665a","v-ea3dd79e","v-6fa34334","v-5a85e8bd","v-0bb5d56d","v-6ad9dcc9","v-accdabf2","v-789db224","v-c72e08ec","v-e846ec20","v-3738d2c0","v-57c3a6cc","v-82e52c62","v-62d759e8","v-d2bdffd6","v-0452eb91","v-21924c70","v-b20eb394","v-3c6a1e34","v-7197b92f","v-b9f6b2ca","v-0357848e","v-f3161262","v-2e28fb15","v-5b4990f8","v-793fd81a","v-0e1a9384","v-726f7072","v-21c4ee0c","v-605b78f4"]},基础:{path:"/category/%E5%9F%BA%E7%A1%80/",keys:["v-8eb7e91c","v-398bed5a","v-3725077a","v-34e5d755"]},"Node.js":{path:"/category/node.js/",keys:["v-264f3578","v-647e802c","v-285ff93c","v-6352c39e","v-18b1b3ae","v-833997ce","v-19bca984"]},Vue:{path:"/category/vue/",keys:["v-837c88f4","v-ec405424","v-76da7cfe","v-30ddd490","v-ec0e16f6","v-681ba581","v-48fc6d3c","v-b7f95708","v-0def13a4","v-2a972985","v-48a6e254","v-3cccf502","v-461f9463","v-c72e4aea","v-33894aab","v-491f82cc"]},前端:{path:"/category/%E5%89%8D%E7%AB%AF/",keys:["v-ff88ab06"]},JavaScript:{path:"/category/javascript/",keys:["v-245c31a9","v-5244cc12","v-7953f4a6","v-1029f0b9","v-5220625f","v-3ac3b992","v-1b9d0426","v-1cd0e5c2","v-e898ae48","v-e7d0ffd8","v-65d00140","v-01199afd","v-1e32d554","v-2a661765","v-d4970868","v-2fc52e78","v-0ec9be64","v-55b00c46","v-6f7a082a","v-55c5117b","v-0b0d2347","v-32817272","v-d3bec9c2","v-d9eeb42e","v-d486c4a0","v-412da2a2","v-8113af46","v-6bcd6e11","v-189ba04a","v-ba82bc1e","v-3466b36e","v-2c2bed22","v-7af69fbf","v-29563aec","v-3fe5c342","v-4157008c","v-5b96b7fd","v-fb7c1444","v-3c952b96","v-e636c4d4","v-37881894","v-580ce442","v-3ac3fde8","v-71e8640e","v-380d4898","v-50d58ef3","v-5d8cafd7","v-54277b4e","v-280a6107","v-58da95f8","v-341b5c65","v-322a7de5","v-02684b7d","v-88b653b6","v-43034483","v-754a14ed","v-7ba4ff44","v-556bf6ae","v-d323d548","v-797b419c","v-ee259a78","v-4613a302","v-58f135ae","v-417b4ca8","v-4dfa691d","v-dd97b0f8","v-7e4ee549","v-745f48d0","v-091ae3d7","v-c1f11850","v-5d22fd4e","v-2f8d5e13","v-0cfc138c","v-43d08d42","v-eb21e1be","v-f5d15c7c","v-01d2ec0c","v-9c53bea4","v-747e149f","v-058fc208","v-19e36b6e","v-58215d54","v-a92fc154","v-0c0c498f","v-0bfb0a2a","v-293c8be9","v-927cc2ec","v-03b28006","v-7de37888","v-a4a26144","v-fe8f719c","v-c928e2ea","v-068af29a","v-24519f9d","v-c3105dca","v-4c6d1960","v-1d30abd8","v-7321cfda"]},Git:{path:"/category/git/",keys:["v-5978b3ac","v-a0a24d6a","v-efa0f806","v-2fe790c2","v-fe4c8648","v-14d32906","v-46819f1b","v-39a5f5ca","v-1e560a99","v-5b44553c","v-6f810d27","v-6f792996","v-84d4a76c","v-94a3be0a","v-ae5d0daa","v-33492354","v-a0440418"]},GitHub:{path:"/category/github/",keys:["v-2272c6f5","v-d4963e94","v-361c7b7d","v-9b87a6dc","v-87c58234","v-cf9c2128","v-611eec3a","v-c9823a98","v-0a8e930f","v-2f906ca4","v-37389730","v-05524a3c","v-355f6d86","v-7b009eea"]},JSON:{path:"/category/json/",keys:["v-d893d8ce"]},Markdown:{path:"/category/markdown/",keys:["v-2ee7e91c","v-1509315e","v-12412da4","v-6af69b4d","v-32c10f2e","v-134ae2df","v-752bb69b","v-d29981d2","v-51851102","v-6780fa2f","v-333335e6","v-0fb734c6"]},Python:{path:"/category/python/",keys:["v-6730ea78","v-73a24a3a","v-8fa6968a","v-1d5feaa7","v-0b4f55c0","v-4754e3b1","v-0ffcd3e0","v-59a21084","v-5af931fe","v-435cedc8","v-fddb6b2a","v-65a32754","v-f95524f4","v-e7b24e0e","v-63939790","v-7b8e695f","v-f3b0732e","v-4f81c6bb","v-39354ab9","v-4bdde895","v-1aa63c24","v-19bac6b0","v-377c72d8","v-0d6dbef8","v-002015d9","v-578855ad","v-054e96dc","v-5fe8612e","v-1e6d56ce","v-061793ac","v-0416c3b9","v-2ca65e29","v-fc30e528","v-54d1615c","v-dd0a6282","v-13c3cbe8","v-46679928","v-83da8d94","v-53cd951d","v-8278a984","v-efe14460","v-03bbd203","v-159c09db","v-20cff4f2","v-435b5698","v-4a2b6072","v-73327cb6","v-2446fd74","v-271d75d6"]},TypeScript:{path:"/category/typescript/",keys:["v-5bc6221c","v-6863cc9e","v-f0d4733a","v-15dd32d2","v-40c17b28","v-8b0e3c32","v-251c5e07","v-5edb8acc","v-6ed22e89","v-1127c682","v-bdbcba86","v-2a3f152e","v-b5cdbcca","v-0eb38230","v-6193fda3","v-85f3d8a2","v-cc37e3c8","v-697acf65","v-0db2b831","v-54dad760","v-76bd067c","v-552c52ec","v-9d4e28d0","v-73edba1e","v-05c4845f","v-abdb2784","v-7552317a","v-5e699f3b"]},YAML:{path:"/category/yaml/",keys:["v-d6fd848c"]},CSS:{path:"/category/css/",keys:["v-5717d036","v-6383d537","v-0500ab2c","v-20f0ad21","v-168cefd2","v-71dc7f0c","v-5333caa4","v-3fa85cfa","v-3291128b","v-69be0f1d","v-503fc08f","v-085d06ce","v-9555e3d8","v-527c4b9c","v-a2ff4f38","v-38389ece","v-846c5f62","v-6b707689","v-4d66e289","v-6ed03c7c","v-7a51ec1b","v-3e54ab50","v-02dacd5e","v-69b33c5e","v-a1ab80fe","v-e3e99664"]},Emmet:{path:"/category/emmet/",keys:["v-db68b190","v-3db71024","v-8c5b7854"]},HTML:{path:"/category/html/",keys:["v-1737c155","v-fa26e920","v-0bbf52f1","v-fe14c97c","v-f3d7b5c2","v-2f07a0ec","v-77dfa475","v-dfcdc6ac","v-495c4178","v-02c46aa2","v-37a4494f","v-64df0368","v-6a524625","v-aa51ae56","v-2e7dea7f","v-2ef83302","v-613200d5","v-5fbc4987","v-3520260c","v-914cf70e"]},jQuery:{path:"/category/jquery/",keys:["v-93dfe636","v-c7d79daa","v-8487edae","v-59e10c5a","v-5ef6c9b6","v-799c2158","v-546d1486","v-df5d1758","v-3957cd7e"]}}}},tag:{"/":{path:"/tag/",map:{"hello world":{path:"/tag/hello-world/",keys:["v-7ff04f35"]},快速上手:{path:"/tag/%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/",keys:["v-5b2dfc66","v-76da7cfe","v-0def13a4","v-461f9463","v-491f82cc","v-7552317a","v-58215d54","v-a92fc154","v-0c0c498f","v-0bfb0a2a","v-293c8be9","v-927cc2ec","v-03b28006","v-7de37888","v-a4a26144","v-fe8f719c","v-068af29a","v-24519f9d","v-0500ab2c","v-20f0ad21","v-168cefd2","v-6ed03c7c","v-7a51ec1b","v-3e54ab50","v-02dacd5e","v-3520260c","v-914cf70e"]},"Node.js":{path:"/tag/node.js/",keys:["v-264f3578","v-647e802c","v-285ff93c","v-6352c39e","v-18b1b3ae","v-833997ce","v-19bca984"]},软件:{path:"/tag/%E8%BD%AF%E4%BB%B6/",keys:["v-264f3578","v-647e802c","v-285ff93c","v-6352c39e","v-18b1b3ae","v-833997ce","v-5978b3ac","v-a0a24d6a","v-efa0f806","v-2fe790c2","v-fe4c8648","v-14d32906","v-46819f1b","v-39a5f5ca","v-1e560a99","v-5b44553c","v-6f810d27","v-6f792996","v-84d4a76c","v-94a3be0a","v-ae5d0daa","v-33492354","v-a0440418"]},安装:{path:"/tag/%E5%AE%89%E8%A3%85/",keys:["v-285ff93c","v-30ddd490","v-39a5f5ca","v-abdb2784","v-2446fd74"]},介绍:{path:"/tag/%E4%BB%8B%E7%BB%8D/",keys:["v-6352c39e","v-5e699f3b","v-05524a3c","v-271d75d6","v-7b009eea","v-21c4ee0c","v-605b78f4","v-3957cd7e","v-4c6d1960","v-4d66e289","v-37a4494f","v-ff88ab06","v-5fbc4987"]},Vue:{path:"/tag/vue/",keys:["v-837c88f4"]},小程序:{path:"/tag/%E5%B0%8F%E7%A8%8B%E5%BA%8F/",keys:["v-837c88f4"]},对比:{path:"/tag/%E5%AF%B9%E6%AF%94/",keys:["v-837c88f4"]},文档:{path:"/tag/%E6%96%87%E6%A1%A3/",keys:["v-ec405424"]},基础:{path:"/tag/%E5%9F%BA%E7%A1%80/",keys:["v-76da7cfe","v-30ddd490"]},TypeScript:{path:"/tag/typescript/",keys:["v-398bed5a","v-3725077a"]},网页:{path:"/tag/%E7%BD%91%E9%A1%B5/",keys:["v-ff88ab06"]},Git:{path:"/tag/git/",keys:["v-5978b3ac","v-a0a24d6a","v-efa0f806","v-2fe790c2","v-fe4c8648","v-14d32906","v-46819f1b","v-39a5f5ca","v-1e560a99","v-5b44553c","v-6f810d27","v-6f792996","v-84d4a76c","v-94a3be0a","v-ae5d0daa","v-33492354","v-a0440418","v-2272c6f5"]},deploy:{path:"/tag/deploy/",keys:["v-2272c6f5","v-cf9c2128"]},Markdown:{path:"/tag/markdown/",keys:["v-2ee7e91c","v-1509315e","v-12412da4","v-6af69b4d","v-32c10f2e","v-134ae2df","v-752bb69b","v-d29981d2","v-51851102","v-6780fa2f","v-333335e6","v-0fb734c6"]},Bash:{path:"/tag/bash/",keys:["v-715bd2d7","v-718fb290","v-1752d037","v-5eed4996","v-1c2fcf06","v-78c02211","v-1a4392ec","v-2ee1d1e9","v-aaef1ff8","v-d2a92084","v-4b2d1320","v-4652f6be","v-756dd164","v-0868e40c","v-242f3b18","v-5c07f092","v-3eea04e4","v-4e0b7530","v-dfdf665a","v-ea3dd79e","v-6fa34334"]},"Vue Cli":{path:"/tag/vue-cli/",keys:["v-681ba581","v-48fc6d3c","v-b7f95708","v-0def13a4","v-2a972985"]},指令:{path:"/tag/%E6%8C%87%E4%BB%A4/",keys:["v-48fc6d3c"]},"Vue Router":{path:"/tag/vue-router/",keys:["v-48a6e254","v-3cccf502","v-461f9463"]},Demo:{path:"/tag/demo/",keys:["v-3cccf502","v-33894aab"]},Vuex:{path:"/tag/vuex/",keys:["v-c72e4aea","v-33894aab","v-491f82cc"]},快捷键:{path:"/tag/%E5%BF%AB%E6%8D%B7%E9%94%AE/",keys:["v-db68b190","v-3db71024","v-8c5b7854"]},HTML:{path:"/tag/html/",keys:["v-3db71024","v-8c5b7854","v-77dfa475"]},action:{path:"/tag/action/",keys:["v-87c58234","v-cf9c2128","v-0a8e930f","v-2f906ca4","v-37389730","v-05524a3c"]},workflow:{path:"/tag/workflow/",keys:["v-87c58234","v-cf9c2128","v-0a8e930f","v-2f906ca4","v-37389730"]},Emoji:{path:"/tag/emoji/",keys:["v-752bb69b","v-d29981d2","v-51851102","v-6780fa2f","v-333335e6","v-0fb734c6"]},CSS:{path:"/tag/css/",keys:["v-a1ab80fe","v-e3e99664"]}}}}}},85970:(e,t,a)=>{a.d(t,{Y:()=>n});const n={article:{"/":{path:"/article/",keys:["v-20955d24","v-5b2dfc66","v-264f3578","v-647e802c","v-285ff93c","v-6352c39e","v-18b1b3ae","v-833997ce","v-8eb7e91c","v-837c88f4","v-ec405424","v-76da7cfe","v-30ddd490","v-398bed5a","v-3725077a","v-ec0e16f6","v-5978b3ac","v-a0a24d6a","v-efa0f806","v-2fe790c2","v-fe4c8648","v-14d32906","v-46819f1b","v-39a5f5ca","v-1e560a99","v-5b44553c","v-6f810d27","v-6f792996","v-84d4a76c","v-94a3be0a","v-ae5d0daa","v-33492354","v-a0440418","v-2272c6f5","v-d4963e94","v-361c7b7d","v-2d8cd5c8","v-38d41630","v-233fe009","v-245c31a9","v-2ee7e91c","v-1509315e","v-12412da4","v-6af69b4d","v-32c10f2e","v-134ae2df","v-5bc6221c","v-715bd2d7","v-718fb290","v-1752d037","v-5eed4996","v-1c2fcf06","v-78c02211","v-1a4392ec","v-2ee1d1e9","v-aaef1ff8","v-d2a92084","v-4b2d1320","v-4652f6be","v-756dd164","v-0868e40c","v-242f3b18","v-5c07f092","v-3eea04e4","v-4e0b7530","v-dfdf665a","v-ea3dd79e","v-6fa34334","v-5a85e8bd","v-1d44d9c3","v-19bca984","v-681ba581","v-48fc6d3c","v-b7f95708","v-0def13a4","v-2a972985","v-48a6e254","v-3cccf502","v-461f9463","v-c72e4aea","v-33894aab","v-491f82cc","v-5244cc12","v-7953f4a6","v-1029f0b9","v-752bb69b","v-d29981d2","v-51851102","v-6780fa2f","v-333335e6","v-0fb734c6","v-6863cc9e","v-f0d4733a","v-15dd32d2","v-40c17b28","v-8b0e3c32","v-251c5e07","v-5edb8acc","v-6ed22e89","v-1127c682","v-bdbcba86","v-2a3f152e","v-b5cdbcca","v-0eb38230","v-6193fda3","v-85f3d8a2","v-cc37e3c8","v-697acf65","v-0db2b831","v-54dad760","v-76bd067c","v-552c52ec","v-9d4e28d0","v-73edba1e","v-05c4845f","v-abdb2784","v-7552317a","v-5e699f3b","v-d9322f3e","v-3f4e4c84","v-8fb6e956","v-736c2f7c","v-ca4d7154","v-dc56542c","v-82e4faac","v-4fb5d210","v-8b49ba9e","v-12795dd8","v-56594599","v-b7e7ef7a","v-a913c376","v-2904d6b6","v-04ea2b32","v-294a69a9","v-9c3d27b8","v-10e0f22a","v-05364be3","v-70a3bfcc","v-057fb76c","v-2732ecf7","v-df09066a","v-25ebcb39","v-29557c77","v-42ee2dc8","v-eb020bc4","v-7ae696f6","v-50dbe7bd","v-8e18f4c0","v-90b6cce8","v-2c849aa3","v-7ab25e78","v-dda22454","v-3f26ee9f","v-4223ff1b","v-4f4a2656","v-17516ae3","v-7f0062a8","v-7b96b16a","v-329352dc","v-4490e0bb","v-8b6178d4","v-337ba44e","v-3b947ce7","v-c2caa64a","v-e799500a","v-e924b50e","v-7e0bbed8","v-2e3f2cd1","v-1ec6cfe2","v-114d586d","v-21d4b770","v-2d8f8dfc","v-e6dd9e0a","v-7cb1314d","v-7ff04f35","v-6730ea78","v-73a24a3a","v-8fa6968a","v-1d5feaa7","v-0b4f55c0","v-4754e3b1","v-0ffcd3e0","v-59a21084","v-5af931fe","v-435cedc8","v-fddb6b2a","v-65a32754","v-f95524f4","v-e7b24e0e","v-63939790","v-9b87a6dc","v-87c58234","v-cf9c2128","v-611eec3a","v-c9823a98","v-0a8e930f","v-2f906ca4","v-37389730","v-05524a3c","v-5717d036","v-6383d537","v-d6fd848c","v-d893d8ce","v-7b8e695f","v-f3b0732e","v-4f81c6bb","v-39354ab9","v-4bdde895","v-1aa63c24","v-19bac6b0","v-377c72d8","v-0d6dbef8","v-002015d9","v-578855ad","v-054e96dc","v-5fe8612e","v-1e6d56ce","v-061793ac","v-0416c3b9","v-2ca65e29","v-fc30e528","v-54d1615c","v-dd0a6282","v-13c3cbe8","v-46679928","v-83da8d94","v-53cd951d","v-8278a984","v-efe14460","v-03bbd203","v-159c09db","v-20cff4f2","v-435b5698","v-4a2b6072","v-73327cb6","v-2446fd74","v-271d75d6","v-6eec2164","v-0bb5d56d","v-6ad9dcc9","v-34e5d755","v-accdabf2","v-a3144274","v-789db224","v-c72e08ec","v-e846ec20","v-355f6d86","v-7b009eea","v-3738d2c0","v-57c3a6cc","v-82e52c62","v-62d759e8","v-d2bdffd6","v-0452eb91","v-21924c70","v-b20eb394","v-3c6a1e34","v-7197b92f","v-b9f6b2ca","v-0357848e","v-f3161262","v-2e28fb15","v-5b4990f8","v-793fd81a","v-0e1a9384","v-726f7072","v-21c4ee0c","v-605b78f4","v-93dfe636","v-c7d79daa","v-8487edae","v-59e10c5a","v-a128f5ea","v-5ef6c9b6","v-799c2158","v-546d1486","v-df5d1758","v-3957cd7e","v-5220625f","v-3ac3b992","v-1b9d0426","v-1cd0e5c2","v-e898ae48","v-e7d0ffd8","v-65d00140","v-01199afd","v-1e32d554","v-2a661765","v-d4970868","v-2fc52e78","v-0ec9be64","v-55b00c46","v-6f7a082a","v-55c5117b","v-0b0d2347","v-32817272","v-d3bec9c2","v-d9eeb42e","v-d486c4a0","v-412da2a2","v-8113af46","v-6bcd6e11","v-189ba04a","v-ba82bc1e","v-3466b36e","v-2c2bed22","v-7af69fbf","v-29563aec","v-3fe5c342","v-4157008c","v-5b96b7fd","v-fb7c1444","v-3c952b96","v-e636c4d4","v-37881894","v-580ce442","v-3ac3fde8","v-71e8640e","v-380d4898","v-50d58ef3","v-5d8cafd7","v-54277b4e","v-280a6107","v-58da95f8","v-341b5c65","v-322a7de5","v-02684b7d","v-88b653b6","v-43034483","v-754a14ed","v-7ba4ff44","v-556bf6ae","v-d323d548","v-797b419c","v-ee259a78","v-4613a302","v-58f135ae","v-417b4ca8","v-4dfa691d","v-dd97b0f8","v-7e4ee549","v-745f48d0","v-091ae3d7","v-c1f11850","v-5d22fd4e","v-2f8d5e13","v-0cfc138c","v-43d08d42","v-eb21e1be","v-f5d15c7c","v-01d2ec0c","v-9c53bea4","v-747e149f","v-058fc208","v-19e36b6e","v-58215d54","v-a92fc154","v-0c0c498f","v-0bfb0a2a","v-293c8be9","v-927cc2ec","v-03b28006","v-7de37888","v-a4a26144","v-fe8f719c","v-c928e2ea","v-068af29a","v-24519f9d","v-c3105dca","v-4c6d1960","v-1d30abd8","v-0500ab2c","v-20f0ad21","v-168cefd2","v-71dc7f0c","v-5333caa4","v-3fa85cfa","v-3291128b","v-69be0f1d","v-503fc08f","v-085d06ce","v-9555e3d8","v-527c4b9c","v-a2ff4f38","v-38389ece","v-846c5f62","v-6b707689","v-4d66e289","v-6ed03c7c","v-7a51ec1b","v-3e54ab50","v-02dacd5e","v-69b33c5e","v-a1ab80fe","v-e3e99664","v-db68b190","v-3db71024","v-8c5b7854","v-1737c155","v-fa26e920","v-0bbf52f1","v-fe14c97c","v-f3d7b5c2","v-2f07a0ec","v-77dfa475","v-dfcdc6ac","v-495c4178","v-02c46aa2","v-37a4494f","v-64df0368","v-6a524625","v-aa51ae56","v-2e7dea7f","v-2ef83302","v-613200d5","v-ff88ab06","v-7321cfda","v-5fbc4987","v-3520260c","v-914cf70e"]}},encrypted:{"/":{path:"/encrypted/",keys:[]}},slide:{"/":{path:"/slides/",keys:[]}},star:{"/":{path:"/star/",keys:["v-20955d24","v-5bc6221c","v-0e1a9384","v-1d30abd8","v-4d66e289","v-ff88ab06","v-5fbc4987"]}},timeline:{"/":{path:"/timeline/",keys:["v-20955d24","v-5b2dfc66","v-264f3578","v-647e802c","v-285ff93c","v-6352c39e","v-18b1b3ae","v-833997ce","v-8eb7e91c","v-837c88f4","v-ec405424","v-76da7cfe","v-30ddd490","v-398bed5a","v-3725077a","v-ec0e16f6","v-5978b3ac","v-a0a24d6a","v-efa0f806","v-2fe790c2","v-fe4c8648","v-14d32906","v-46819f1b","v-39a5f5ca","v-1e560a99","v-5b44553c","v-6f810d27","v-6f792996","v-84d4a76c","v-94a3be0a","v-ae5d0daa","v-33492354","v-a0440418","v-2272c6f5","v-d4963e94","v-361c7b7d","v-2d8cd5c8","v-38d41630","v-233fe009","v-245c31a9","v-2ee7e91c","v-1509315e","v-12412da4","v-6af69b4d","v-32c10f2e","v-134ae2df","v-5bc6221c","v-715bd2d7","v-718fb290","v-1752d037","v-5eed4996","v-1c2fcf06","v-78c02211","v-1a4392ec","v-2ee1d1e9","v-aaef1ff8","v-d2a92084","v-4b2d1320","v-4652f6be","v-756dd164","v-0868e40c","v-242f3b18","v-5c07f092","v-3eea04e4","v-4e0b7530","v-dfdf665a","v-ea3dd79e","v-6fa34334","v-5a85e8bd","v-1d44d9c3","v-19bca984","v-681ba581","v-48fc6d3c","v-b7f95708","v-0def13a4","v-2a972985","v-48a6e254","v-3cccf502","v-461f9463","v-c72e4aea","v-33894aab","v-491f82cc","v-5244cc12","v-7953f4a6","v-1029f0b9","v-752bb69b","v-d29981d2","v-51851102","v-6780fa2f","v-333335e6","v-0fb734c6","v-f0d4733a","v-15dd32d2","v-40c17b28","v-8b0e3c32","v-251c5e07","v-5edb8acc","v-6ed22e89","v-1127c682","v-bdbcba86","v-b5cdbcca","v-0eb38230","v-6193fda3","v-85f3d8a2","v-cc37e3c8","v-697acf65","v-0db2b831","v-54dad760","v-76bd067c","v-552c52ec","v-73edba1e","v-abdb2784","v-7552317a","v-5e699f3b","v-d9322f3e","v-3f4e4c84","v-8fb6e956","v-736c2f7c","v-ca4d7154","v-dc56542c","v-82e4faac","v-4fb5d210","v-8b49ba9e","v-12795dd8","v-56594599","v-b7e7ef7a","v-a913c376","v-2904d6b6","v-04ea2b32","v-294a69a9","v-9c3d27b8","v-10e0f22a","v-05364be3","v-70a3bfcc","v-057fb76c","v-2732ecf7","v-df09066a","v-25ebcb39","v-29557c77","v-42ee2dc8","v-eb020bc4","v-7ae696f6","v-50dbe7bd","v-8e18f4c0","v-90b6cce8","v-2c849aa3","v-7ab25e78","v-dda22454","v-3f26ee9f","v-4223ff1b","v-4f4a2656","v-17516ae3","v-7f0062a8","v-7b96b16a","v-329352dc","v-4490e0bb","v-8b6178d4","v-337ba44e","v-3b947ce7","v-c2caa64a","v-e799500a","v-e924b50e","v-7e0bbed8","v-2e3f2cd1","v-1ec6cfe2","v-114d586d","v-21d4b770","v-2d8f8dfc","v-e6dd9e0a","v-7cb1314d","v-7ff04f35","v-73a24a3a","v-8fa6968a","v-1d5feaa7","v-0b4f55c0","v-4754e3b1","v-0ffcd3e0","v-59a21084","v-435cedc8","v-fddb6b2a","v-65a32754","v-f95524f4","v-e7b24e0e","v-63939790","v-9b87a6dc","v-87c58234","v-cf9c2128","v-611eec3a","v-c9823a98","v-0a8e930f","v-2f906ca4","v-37389730","v-05524a3c","v-5717d036","v-6383d537","v-d6fd848c","v-d893d8ce","v-7b8e695f","v-f3b0732e","v-4f81c6bb","v-39354ab9","v-4bdde895","v-1aa63c24","v-377c72d8","v-0d6dbef8","v-002015d9","v-578855ad","v-5fe8612e","v-1e6d56ce","v-061793ac","v-0416c3b9","v-2ca65e29","v-fc30e528","v-dd0a6282","v-13c3cbe8","v-83da8d94","v-53cd951d","v-8278a984","v-efe14460","v-03bbd203","v-159c09db","v-20cff4f2","v-4a2b6072","v-73327cb6","v-2446fd74","v-271d75d6","v-6eec2164","v-0bb5d56d","v-6ad9dcc9","v-34e5d755","v-accdabf2","v-a3144274","v-789db224","v-c72e08ec","v-e846ec20","v-355f6d86","v-7b009eea","v-3738d2c0","v-57c3a6cc","v-82e52c62","v-62d759e8","v-d2bdffd6","v-0452eb91","v-21924c70","v-b20eb394","v-3c6a1e34","v-7197b92f","v-b9f6b2ca","v-0357848e","v-f3161262","v-2e28fb15","v-5b4990f8","v-793fd81a","v-0e1a9384","v-726f7072","v-21c4ee0c","v-605b78f4","v-93dfe636","v-c7d79daa","v-8487edae","v-59e10c5a","v-a128f5ea","v-5ef6c9b6","v-799c2158","v-546d1486","v-df5d1758","v-3957cd7e","v-5220625f","v-3ac3b992","v-1b9d0426","v-1cd0e5c2","v-e898ae48","v-e7d0ffd8","v-65d00140","v-01199afd","v-1e32d554","v-2a661765","v-d4970868","v-2fc52e78","v-0ec9be64","v-55b00c46","v-6f7a082a","v-55c5117b","v-0b0d2347","v-32817272","v-d3bec9c2","v-d9eeb42e","v-d486c4a0","v-412da2a2","v-8113af46","v-6bcd6e11","v-189ba04a","v-ba82bc1e","v-3466b36e","v-2c2bed22","v-7af69fbf","v-29563aec","v-3fe5c342","v-4157008c","v-5b96b7fd","v-fb7c1444","v-3c952b96","v-e636c4d4","v-37881894","v-580ce442","v-3ac3fde8","v-71e8640e","v-380d4898","v-50d58ef3","v-5d8cafd7","v-54277b4e","v-280a6107","v-58da95f8","v-341b5c65","v-322a7de5","v-02684b7d","v-88b653b6","v-43034483","v-754a14ed","v-7ba4ff44","v-556bf6ae","v-d323d548","v-797b419c","v-ee259a78","v-4613a302","v-58f135ae","v-417b4ca8","v-4dfa691d","v-dd97b0f8","v-7e4ee549","v-745f48d0","v-091ae3d7","v-c1f11850","v-5d22fd4e","v-2f8d5e13","v-0cfc138c","v-43d08d42","v-eb21e1be","v-f5d15c7c","v-01d2ec0c","v-9c53bea4","v-747e149f","v-058fc208","v-19e36b6e","v-58215d54","v-a92fc154","v-0c0c498f","v-0bfb0a2a","v-293c8be9","v-927cc2ec","v-03b28006","v-7de37888","v-a4a26144","v-fe8f719c","v-c928e2ea","v-068af29a","v-24519f9d","v-c3105dca","v-4c6d1960","v-1d30abd8","v-0500ab2c","v-20f0ad21","v-168cefd2","v-71dc7f0c","v-5333caa4","v-3fa85cfa","v-3291128b","v-69be0f1d","v-503fc08f","v-085d06ce","v-9555e3d8","v-527c4b9c","v-a2ff4f38","v-38389ece","v-846c5f62","v-6b707689","v-4d66e289","v-6ed03c7c","v-7a51ec1b","v-3e54ab50","v-02dacd5e","v-69b33c5e","v-a1ab80fe","v-e3e99664","v-db68b190","v-3db71024","v-8c5b7854","v-1737c155","v-fa26e920","v-0bbf52f1","v-fe14c97c","v-f3d7b5c2","v-2f07a0ec","v-77dfa475","v-dfcdc6ac","v-495c4178","v-02c46aa2","v-37a4494f","v-64df0368","v-6a524625","v-aa51ae56","v-2e7dea7f","v-2ef83302","v-613200d5","v-ff88ab06","v-7321cfda","v-5fbc4987","v-3520260c","v-914cf70e"]}}}},11490:(e,t,a)=>{a.d(t,{W:()=>I});var n=a(74393),d=a(33413),i=a(34076);const c=(0,n.r$)({enhance:({app:e})=>{e.component("Badge",d.Z)},rootComponents:[i.Z]});var o=a(12598),r=a(7182),s=a(45403),l=a(45472),v=a(33701),p=a(67178),m=a(42321),h=a(2565),g=a(19190),b=a(23138),u=a(24227),f=a(26570),y=a(64894);const x=(0,n.r$)({enhance:({app:e})=>{e.component("ChartJS",m.Z),e.component("CodeDemo",h.Z),e.component("CodeGroup",g.Z),e.component("CodeGroupItem",b.Z),e.component("FlowChart",u.Z),e.component("Mermaid",f.Z),e.component("Presentation",y.Z)}});var w=a(82918),T=a(54783),S=a(45551);const C=(0,n.r$)({setup:()=>{(0,T.u)()},rootComponents:[S.Z]});var R=a(77366),j=a(72573),E=a(82191),Z=a(61037),k=a(39e3),M=a(78497),L=a(99779),A=a(8264),J=a(32289),P=a(68146),D=a(13127),H=a(52270),G=a(95568),B=a(93715);const N=(0,n.r$)({enhance:({app:e,router:t})=>{const{scrollBehavior:a}=t.options;t.options.scrollBehavior=async(...e)=>(await(0,M.P$)().wait(),a(...e)),e.component("CommonWrapper",R.Z),e.component("HomePage",j.Z),e.component("NormalPage",E.Z),e.component("Navbar",Z.Z),e.component("Sidebar",k.Z),e.component("BloggerInfo",J.Z),e.component("BlogHome",P.Z),e.component("BlogPage",D.Z),e.component("GloablEncrypt",G.Z),e.component("LocalEncrypt",B.Z)},setup:()=>{(0,L.OX)(),(0,A.fR)(),(0,H.kK)()}});var V=a(38882);const I=[{},c,o.Z,r.Z,s.Z,l.Z,v.Z,p.Z,x,w.Z,C,N,V.Z]},94150:(e,t,a)=>{a.d(t,{Z:()=>d});var n=a(66252);const d={404:(0,n.RC)((()=>Promise.all([a.e(59479),a.e(25919),a.e(66560)]).then(a.bind(a,66560)))),Layout:(0,n.RC)((()=>Promise.all([a.e(59479),a.e(68084),a.e(40266)]).then(a.bind(a,40266)))),Slide:(0,n.RC)((()=>Promise.all([a.e(67145),a.e(74213)]).then(a.bind(a,74213)))),Blog:(0,n.RC)((()=>Promise.all([a.e(59479),a.e(39079)]).then(a.bind(a,39079))))}},6056:(e,t,a)=>{a.d(t,{b:()=>d});var n=a(66252);const d={"v-8daa1a0e":(0,n.RC)((()=>a.e(52509).then(a.bind(a,31829)))),"v-146a1089":(0,n.RC)((()=>a.e(31434).then(a.bind(a,41255)))),"v-15054f24":(0,n.RC)((()=>a.e(22306).then(a.bind(a,46889)))),"v-7ff04f35":(0,n.RC)((()=>a.e(68163).then(a.bind(a,87096)))),"v-f785aee2":(0,n.RC)((()=>a.e(27242).then(a.bind(a,38750)))),"v-6eec2164":(0,n.RC)((()=>a.e(14779).then(a.bind(a,32705)))),"v-20955d24":(0,n.RC)((()=>a.e(92531).then(a.bind(a,91796)))),"v-5b2dfc66":(0,n.RC)((()=>a.e(90599).then(a.bind(a,57079)))),"v-0e1a9384":(0,n.RC)((()=>a.e(27979).then(a.bind(a,27003)))),"v-0bb5d56d":(0,n.RC)((()=>a.e(33995).then(a.bind(a,9371)))),"v-6ad9dcc9":(0,n.RC)((()=>a.e(433).then(a.bind(a,52155)))),"v-34e5d755":(0,n.RC)((()=>a.e(20815).then(a.bind(a,7421)))),"v-264f3578":(0,n.RC)((()=>a.e(37390).then(a.bind(a,52119)))),"v-647e802c":(0,n.RC)((()=>a.e(9807).then(a.bind(a,36334)))),"v-285ff93c":(0,n.RC)((()=>a.e(15260).then(a.bind(a,77435)))),"v-6352c39e":(0,n.RC)((()=>a.e(564).then(a.bind(a,97642)))),"v-18b1b3ae":(0,n.RC)((()=>a.e(61303).then(a.bind(a,40340)))),"v-833997ce":(0,n.RC)((()=>a.e(914).then(a.bind(a,26939)))),"v-8eb7e91c":(0,n.RC)((()=>a.e(46332).then(a.bind(a,20768)))),"v-837c88f4":(0,n.RC)((()=>a.e(29386).then(a.bind(a,81961)))),"v-ec405424":(0,n.RC)((()=>a.e(24796).then(a.bind(a,30236)))),"v-76da7cfe":(0,n.RC)((()=>a.e(82380).then(a.bind(a,49127)))),"v-30ddd490":(0,n.RC)((()=>a.e(3157).then(a.bind(a,70137)))),"v-398bed5a":(0,n.RC)((()=>a.e(15012).then(a.bind(a,94908)))),"v-3725077a":(0,n.RC)((()=>a.e(15651).then(a.bind(a,87312)))),"v-ec0e16f6":(0,n.RC)((()=>a.e(98872).then(a.bind(a,96984)))),"v-ff88ab06":(0,n.RC)((()=>a.e(92050).then(a.bind(a,97387)))),"v-a128f5ea":(0,n.RC)((()=>a.e(74501).then(a.bind(a,82849)))),"v-7321cfda":(0,n.RC)((()=>a.e(73332).then(a.bind(a,65030)))),"v-5978b3ac":(0,n.RC)((()=>a.e(60907).then(a.bind(a,37091)))),"v-a0a24d6a":(0,n.RC)((()=>a.e(63763).then(a.bind(a,36344)))),"v-efa0f806":(0,n.RC)((()=>a.e(41536).then(a.bind(a,98436)))),"v-2fe790c2":(0,n.RC)((()=>a.e(46320).then(a.bind(a,80518)))),"v-fe4c8648":(0,n.RC)((()=>a.e(10332).then(a.bind(a,5941)))),"v-14d32906":(0,n.RC)((()=>a.e(96202).then(a.bind(a,13270)))),"v-46819f1b":(0,n.RC)((()=>a.e(29093).then(a.bind(a,72097)))),"v-39a5f5ca":(0,n.RC)((()=>a.e(24811).then(a.bind(a,16630)))),"v-1e560a99":(0,n.RC)((()=>a.e(16077).then(a.bind(a,22137)))),"v-5b44553c":(0,n.RC)((()=>a.e(33892).then(a.bind(a,86980)))),"v-6f810d27":(0,n.RC)((()=>a.e(30488).then(a.bind(a,48403)))),"v-6f792996":(0,n.RC)((()=>a.e(9465).then(a.bind(a,34541)))),"v-84d4a76c":(0,n.RC)((()=>a.e(72466).then(a.bind(a,49130)))),"v-94a3be0a":(0,n.RC)((()=>a.e(56356).then(a.bind(a,20324)))),"v-ae5d0daa":(0,n.RC)((()=>a.e(80014).then(a.bind(a,87159)))),"v-33492354":(0,n.RC)((()=>a.e(90765).then(a.bind(a,97174)))),"v-a0440418":(0,n.RC)((()=>a.e(95249).then(a.bind(a,76243)))),"v-355f6d86":(0,n.RC)((()=>a.e(40256).then(a.bind(a,72214)))),"v-2272c6f5":(0,n.RC)((()=>a.e(75607).then(a.bind(a,24533)))),"v-7b009eea":(0,n.RC)((()=>a.e(54460).then(a.bind(a,38173)))),"v-9b87a6dc":(0,n.RC)((()=>a.e(3959).then(a.bind(a,29362)))),"v-611eec3a":(0,n.RC)((()=>a.e(33671).then(a.bind(a,35902)))),"v-d4963e94":(0,n.RC)((()=>a.e(10351).then(a.bind(a,33825)))),"v-c9823a98":(0,n.RC)((()=>a.e(88134).then(a.bind(a,53866)))),"v-361c7b7d":(0,n.RC)((()=>a.e(82479).then(a.bind(a,69377)))),"v-2d8cd5c8":(0,n.RC)((()=>a.e(87523).then(a.bind(a,20117)))),"v-38d41630":(0,n.RC)((()=>a.e(49740).then(a.bind(a,22637)))),"v-233fe009":(0,n.RC)((()=>a.e(15731).then(a.bind(a,96358)))),"v-1d30abd8":(0,n.RC)((()=>a.e(81507).then(a.bind(a,16280)))),"v-245c31a9":(0,n.RC)((()=>a.e(14784).then(a.bind(a,18584)))),"v-d893d8ce":(0,n.RC)((()=>a.e(95331).then(a.bind(a,91193)))),"v-2ee7e91c":(0,n.RC)((()=>a.e(83042).then(a.bind(a,3979)))),"v-1509315e":(0,n.RC)((()=>a.e(39656).then(a.bind(a,20318)))),"v-12412da4":(0,n.RC)((()=>a.e(38969).then(a.bind(a,24628)))),"v-6af69b4d":(0,n.RC)((()=>a.e(48493).then(a.bind(a,76425)))),"v-32c10f2e":(0,n.RC)((()=>a.e(22872).then(a.bind(a,33788)))),"v-134ae2df":(0,n.RC)((()=>a.e(29272).then(a.bind(a,55540)))),"v-73327cb6":(0,n.RC)((()=>a.e(14562).then(a.bind(a,95427)))),"v-5bc6221c":(0,n.RC)((()=>a.e(69173).then(a.bind(a,94600)))),"v-d6fd848c":(0,n.RC)((()=>a.e(3612).then(a.bind(a,53478)))),"v-715bd2d7":(0,n.RC)((()=>a.e(51602).then(a.bind(a,61300)))),"v-718fb290":(0,n.RC)((()=>a.e(14759).then(a.bind(a,30725)))),"v-1752d037":(0,n.RC)((()=>a.e(45254).then(a.bind(a,80824)))),"v-5eed4996":(0,n.RC)((()=>a.e(12324).then(a.bind(a,51500)))),"v-1c2fcf06":(0,n.RC)((()=>a.e(38482).then(a.bind(a,51931)))),"v-78c02211":(0,n.RC)((()=>a.e(64654).then(a.bind(a,1196)))),"v-1a4392ec":(0,n.RC)((()=>a.e(3724).then(a.bind(a,98269)))),"v-2ee1d1e9":(0,n.RC)((()=>a.e(34042).then(a.bind(a,4819)))),"v-aaef1ff8":(0,n.RC)((()=>a.e(94774).then(a.bind(a,5179)))),"v-d2a92084":(0,n.RC)((()=>a.e(10119).then(a.bind(a,70987)))),"v-4b2d1320":(0,n.RC)((()=>a.e(64571).then(a.bind(a,91969)))),"v-4652f6be":(0,n.RC)((()=>a.e(56178).then(a.bind(a,75941)))),"v-756dd164":(0,n.RC)((()=>a.e(32959).then(a.bind(a,55690)))),"v-0868e40c":(0,n.RC)((()=>a.e(30050).then(a.bind(a,84316)))),"v-242f3b18":(0,n.RC)((()=>a.e(113).then(a.bind(a,10489)))),"v-5c07f092":(0,n.RC)((()=>a.e(85816).then(a.bind(a,14406)))),"v-3eea04e4":(0,n.RC)((()=>a.e(69363).then(a.bind(a,29281)))),"v-4e0b7530":(0,n.RC)((()=>a.e(44627).then(a.bind(a,50123)))),"v-dfdf665a":(0,n.RC)((()=>a.e(79068).then(a.bind(a,45650)))),"v-ea3dd79e":(0,n.RC)((()=>a.e(91521).then(a.bind(a,30001)))),"v-6fa34334":(0,n.RC)((()=>a.e(9687).then(a.bind(a,11785)))),"v-21924c70":(0,n.RC)((()=>a.e(56077).then(a.bind(a,56251)))),"v-3738d2c0":(0,n.RC)((()=>a.e(92616).then(a.bind(a,48919)))),"v-b20eb394":(0,n.RC)((()=>a.e(48175).then(a.bind(a,64950)))),"v-3c6a1e34":(0,n.RC)((()=>a.e(89275).then(a.bind(a,12584)))),"v-57c3a6cc":(0,n.RC)((()=>a.e(48498).then(a.bind(a,22294)))),"v-d2bdffd6":(0,n.RC)((()=>a.e(30675).then(a.bind(a,20249)))),"v-82e52c62":(0,n.RC)((()=>a.e(5894).then(a.bind(a,80662)))),"v-0452eb91":(0,n.RC)((()=>a.e(51570).then(a.bind(a,64548)))),"v-62d759e8":(0,n.RC)((()=>a.e(18519).then(a.bind(a,98590)))),"v-5a85e8bd":(0,n.RC)((()=>a.e(15006).then(a.bind(a,8030)))),"v-7197b92f":(0,n.RC)((()=>a.e(67296).then(a.bind(a,88526)))),"v-b9f6b2ca":(0,n.RC)((()=>a.e(73237).then(a.bind(a,3322)))),"v-0357848e":(0,n.RC)((()=>a.e(9238).then(a.bind(a,18422)))),"v-f3161262":(0,n.RC)((()=>a.e(56259).then(a.bind(a,4778)))),"v-726f7072":(0,n.RC)((()=>a.e(12179).then(a.bind(a,46092)))),"v-2e28fb15":(0,n.RC)((()=>a.e(14862).then(a.bind(a,49043)))),"v-5b4990f8":(0,n.RC)((()=>a.e(91711).then(a.bind(a,62920)))),"v-21c4ee0c":(0,n.RC)((()=>a.e(75990).then(a.bind(a,98001)))),"v-605b78f4":(0,n.RC)((()=>a.e(26131).then(a.bind(a,96216)))),"v-793fd81a":(0,n.RC)((()=>a.e(45751).then(a.bind(a,51477)))),"v-1d44d9c3":(0,n.RC)((()=>a.e(65677).then(a.bind(a,86683)))),"v-789db224":(0,n.RC)((()=>a.e(46721).then(a.bind(a,18929)))),"v-c72e08ec":(0,n.RC)((()=>a.e(47598).then(a.bind(a,95432)))),"v-accdabf2":(0,n.RC)((()=>a.e(98873).then(a.bind(a,52719)))),"v-e846ec20":(0,n.RC)((()=>a.e(66200).then(a.bind(a,52871)))),"v-a3144274":(0,n.RC)((()=>a.e(5593).then(a.bind(a,70333)))),"v-239235ed":(0,n.RC)((()=>a.e(3597).then(a.bind(a,25778)))),"v-19bca984":(0,n.RC)((()=>a.e(35399).then(a.bind(a,5039)))),"v-681ba581":(0,n.RC)((()=>a.e(65856).then(a.bind(a,34071)))),"v-48fc6d3c":(0,n.RC)((()=>a.e(71498).then(a.bind(a,53235)))),"v-b7f95708":(0,n.RC)((()=>a.e(26161).then(a.bind(a,27369)))),"v-0def13a4":(0,n.RC)((()=>a.e(46561).then(a.bind(a,86925)))),"v-2a972985":(0,n.RC)((()=>a.e(70015).then(a.bind(a,66344)))),"v-48a6e254":(0,n.RC)((()=>a.e(55650).then(a.bind(a,11405)))),"v-3cccf502":(0,n.RC)((()=>a.e(31154).then(a.bind(a,60070)))),"v-461f9463":(0,n.RC)((()=>a.e(6288).then(a.bind(a,72064)))),"v-c72e4aea":(0,n.RC)((()=>a.e(20345).then(a.bind(a,64282)))),"v-33894aab":(0,n.RC)((()=>a.e(35201).then(a.bind(a,24312)))),"v-491f82cc":(0,n.RC)((()=>a.e(14457).then(a.bind(a,51283)))),"v-4d66e289":(0,n.RC)((()=>a.e(33239).then(a.bind(a,26268)))),"v-db68b190":(0,n.RC)((()=>a.e(32753).then(a.bind(a,90280)))),"v-3db71024":(0,n.RC)((()=>a.e(76244).then(a.bind(a,92719)))),"v-8c5b7854":(0,n.RC)((()=>a.e(41622).then(a.bind(a,81445)))),"v-5fbc4987":(0,n.RC)((()=>a.e(57029).then(a.bind(a,2251)))),"v-df5d1758":(0,n.RC)((()=>a.e(39679).then(a.bind(a,88080)))),"v-93dfe636":(0,n.RC)((()=>a.e(65609).then(a.bind(a,80704)))),"v-8487edae":(0,n.RC)((()=>a.e(82986).then(a.bind(a,70189)))),"v-59e10c5a":(0,n.RC)((()=>a.e(91900).then(a.bind(a,99634)))),"v-c7d79daa":(0,n.RC)((()=>a.e(93076).then(a.bind(a,79962)))),"v-3957cd7e":(0,n.RC)((()=>a.e(56927).then(a.bind(a,10051)))),"v-5ef6c9b6":(0,n.RC)((()=>a.e(91264).then(a.bind(a,89786)))),"v-799c2158":(0,n.RC)((()=>a.e(95533).then(a.bind(a,34591)))),"v-546d1486":(0,n.RC)((()=>a.e(1531).then(a.bind(a,25040)))),"v-0a8e930f":(0,n.RC)((()=>a.e(58520).then(a.bind(a,3221)))),"v-87c58234":(0,n.RC)((()=>a.e(25650).then(a.bind(a,86949)))),"v-2f906ca4":(0,n.RC)((()=>a.e(46818).then(a.bind(a,13847)))),"v-37389730":(0,n.RC)((()=>a.e(43988).then(a.bind(a,49813)))),"v-cf9c2128":(0,n.RC)((()=>a.e(63080).then(a.bind(a,96480)))),"v-05524a3c":(0,n.RC)((()=>a.e(35966).then(a.bind(a,51634)))),"v-580ce442":(0,n.RC)((()=>a.e(33567).then(a.bind(a,29647)))),"v-4157008c":(0,n.RC)((()=>a.e(31289).then(a.bind(a,47088)))),"v-e636c4d4":(0,n.RC)((()=>a.e(8628).then(a.bind(a,30783)))),"v-3fe5c342":(0,n.RC)((()=>a.e(38886).then(a.bind(a,67013)))),"v-37881894":(0,n.RC)((()=>a.e(82550).then(a.bind(a,43899)))),"v-fb7c1444":(0,n.RC)((()=>a.e(84188).then(a.bind(a,91947)))),"v-3c952b96":(0,n.RC)((()=>a.e(90014).then(a.bind(a,23396)))),"v-3ac3fde8":(0,n.RC)((()=>a.e(46119).then(a.bind(a,75875)))),"v-5b96b7fd":(0,n.RC)((()=>a.e(46743).then(a.bind(a,18602)))),"v-7af69fbf":(0,n.RC)((()=>a.e(98789).then(a.bind(a,24510)))),"v-d3bec9c2":(0,n.RC)((()=>a.e(52444).then(a.bind(a,95524)))),"v-5220625f":(0,n.RC)((()=>a.e(58599).then(a.bind(a,6113)))),"v-e898ae48":(0,n.RC)((()=>a.e(39156).then(a.bind(a,80610)))),"v-e7d0ffd8":(0,n.RC)((()=>a.e(9016).then(a.bind(a,78598)))),"v-65d00140":(0,n.RC)((()=>a.e(50221).then(a.bind(a,38437)))),"v-01199afd":(0,n.RC)((()=>a.e(31761).then(a.bind(a,11849)))),"v-d9eeb42e":(0,n.RC)((()=>a.e(14084).then(a.bind(a,20328)))),"v-d486c4a0":(0,n.RC)((()=>a.e(70503).then(a.bind(a,96210)))),"v-412da2a2":(0,n.RC)((()=>a.e(30985).then(a.bind(a,25260)))),"v-1e32d554":(0,n.RC)((()=>a.e(60809).then(a.bind(a,33980)))),"v-2a661765":(0,n.RC)((()=>a.e(54285).then(a.bind(a,44794)))),"v-29563aec":(0,n.RC)((()=>a.e(6722).then(a.bind(a,7425)))),"v-d4970868":(0,n.RC)((()=>a.e(59912).then(a.bind(a,11485)))),"v-8113af46":(0,n.RC)((()=>a.e(9840).then(a.bind(a,34950)))),"v-5244cc12":(0,n.RC)((()=>a.e(554).then(a.bind(a,24405)))),"v-2fc52e78":(0,n.RC)((()=>a.e(86167).then(a.bind(a,29926)))),"v-0ec9be64":(0,n.RC)((()=>a.e(58198).then(a.bind(a,56862)))),"v-6bcd6e11":(0,n.RC)((()=>a.e(27709).then(a.bind(a,61446)))),"v-189ba04a":(0,n.RC)((()=>a.e(63987).then(a.bind(a,75726)))),"v-55b00c46":(0,n.RC)((()=>a.e(99347).then(a.bind(a,89794)))),"v-3ac3b992":(0,n.RC)((()=>a.e(62529).then(a.bind(a,18900)))),"v-6f7a082a":(0,n.RC)((()=>a.e(65771).then(a.bind(a,13609)))),"v-1b9d0426":(0,n.RC)((()=>a.e(77472).then(a.bind(a,83666)))),"v-55c5117b":(0,n.RC)((()=>a.e(39520).then(a.bind(a,2798)))),"v-ba82bc1e":(0,n.RC)((()=>a.e(16137).then(a.bind(a,60241)))),"v-0b0d2347":(0,n.RC)((()=>a.e(35430).then(a.bind(a,32371)))),"v-7953f4a6":(0,n.RC)((()=>a.e(18743).then(a.bind(a,22156)))),"v-1cd0e5c2":(0,n.RC)((()=>a.e(29179).then(a.bind(a,79490)))),"v-3466b36e":(0,n.RC)((()=>a.e(63906).then(a.bind(a,49221)))),"v-32817272":(0,n.RC)((()=>a.e(22468).then(a.bind(a,55974)))),"v-2c2bed22":(0,n.RC)((()=>a.e(30722).then(a.bind(a,45973)))),"v-4613a302":(0,n.RC)((()=>a.e(6981).then(a.bind(a,98393)))),"v-7ba4ff44":(0,n.RC)((()=>a.e(91791).then(a.bind(a,23154)))),"v-797b419c":(0,n.RC)((()=>a.e(5079).then(a.bind(a,95543)))),"v-02684b7d":(0,n.RC)((()=>a.e(76764).then(a.bind(a,13848)))),"v-58f135ae":(0,n.RC)((()=>a.e(49033).then(a.bind(a,98489)))),"v-556bf6ae":(0,n.RC)((()=>a.e(82415).then(a.bind(a,26193)))),"v-88b653b6":(0,n.RC)((()=>a.e(47862).then(a.bind(a,55869)))),"v-43034483":(0,n.RC)((()=>a.e(43919).then(a.bind(a,60226)))),"v-417b4ca8":(0,n.RC)((()=>a.e(73353).then(a.bind(a,41394)))),"v-754a14ed":(0,n.RC)((()=>a.e(50337).then(a.bind(a,16)))),"v-1029f0b9":(0,n.RC)((()=>a.e(53308).then(a.bind(a,85070)))),"v-ee259a78":(0,n.RC)((()=>a.e(4408).then(a.bind(a,7997)))),"v-d323d548":(0,n.RC)((()=>a.e(77233).then(a.bind(a,67303)))),"v-c928e2ea":(0,n.RC)((()=>a.e(99695).then(a.bind(a,37417)))),"v-0bfb0a2a":(0,n.RC)((()=>a.e(69738).then(a.bind(a,51179)))),"v-7de37888":(0,n.RC)((()=>a.e(35022).then(a.bind(a,91161)))),"v-293c8be9":(0,n.RC)((()=>a.e(56024).then(a.bind(a,91380)))),"v-a4a26144":(0,n.RC)((()=>a.e(46504).then(a.bind(a,77086)))),"v-58215d54":(0,n.RC)((()=>a.e(82428).then(a.bind(a,36864)))),"v-a92fc154":(0,n.RC)((()=>a.e(65625).then(a.bind(a,75024)))),"v-068af29a":(0,n.RC)((()=>a.e(93656).then(a.bind(a,35165)))),"v-24519f9d":(0,n.RC)((()=>a.e(10916).then(a.bind(a,4857)))),"v-058fc208":(0,n.RC)((()=>a.e(79296).then(a.bind(a,71771)))),"v-927cc2ec":(0,n.RC)((()=>a.e(76217).then(a.bind(a,95875)))),"v-19e36b6e":(0,n.RC)((()=>a.e(80023).then(a.bind(a,92830)))),"v-0c0c498f":(0,n.RC)((()=>a.e(75813).then(a.bind(a,85018)))),"v-03b28006":(0,n.RC)((()=>a.e(65541).then(a.bind(a,33121)))),"v-fe8f719c":(0,n.RC)((()=>a.e(25736).then(a.bind(a,63736)))),"v-c3105dca":(0,n.RC)((()=>a.e(67241).then(a.bind(a,88551)))),"v-4c6d1960":(0,n.RC)((()=>a.e(33183).then(a.bind(a,22412)))),"v-71e8640e":(0,n.RC)((()=>a.e(87914).then(a.bind(a,95316)))),"v-58da95f8":(0,n.RC)((()=>a.e(87219).then(a.bind(a,43977)))),"v-54277b4e":(0,n.RC)((()=>a.e(32343).then(a.bind(a,50149)))),"v-341b5c65":(0,n.RC)((()=>a.e(58070).then(a.bind(a,51297)))),"v-50d58ef3":(0,n.RC)((()=>a.e(1857).then(a.bind(a,43758)))),"v-280a6107":(0,n.RC)((()=>a.e(6332).then(a.bind(a,65087)))),"v-322a7de5":(0,n.RC)((()=>a.e(22767).then(a.bind(a,96727)))),"v-380d4898":(0,n.RC)((()=>a.e(76717).then(a.bind(a,52398)))),"v-5d8cafd7":(0,n.RC)((()=>a.e(66707).then(a.bind(a,3723)))),"v-745f48d0":(0,n.RC)((()=>a.e(29940).then(a.bind(a,89933)))),"v-091ae3d7":(0,n.RC)((()=>a.e(26801).then(a.bind(a,23347)))),"v-dd97b0f8":(0,n.RC)((()=>a.e(78287).then(a.bind(a,8810)))),"v-7e4ee549":(0,n.RC)((()=>a.e(71455).then(a.bind(a,93481)))),"v-c1f11850":(0,n.RC)((()=>a.e(22345).then(a.bind(a,27819)))),"v-4dfa691d":(0,n.RC)((()=>a.e(49956).then(a.bind(a,80967)))),"v-9c53bea4":(0,n.RC)((()=>a.e(62012).then(a.bind(a,66798)))),"v-5d22fd4e":(0,n.RC)((()=>a.e(33115).then(a.bind(a,99077)))),"v-43d08d42":(0,n.RC)((()=>a.e(65111).then(a.bind(a,52386)))),"v-2f8d5e13":(0,n.RC)((()=>a.e(13911).then(a.bind(a,35308)))),"v-747e149f":(0,n.RC)((()=>a.e(24657).then(a.bind(a,15894)))),"v-eb21e1be":(0,n.RC)((()=>a.e(83562).then(a.bind(a,65466)))),"v-f5d15c7c":(0,n.RC)((()=>a.e(50801).then(a.bind(a,71176)))),"v-0cfc138c":(0,n.RC)((()=>a.e(12857).then(a.bind(a,3315)))),"v-01d2ec0c":(0,n.RC)((()=>a.e(80577).then(a.bind(a,30252)))),"v-752bb69b":(0,n.RC)((()=>a.e(34294).then(a.bind(a,33805)))),"v-d29981d2":(0,n.RC)((()=>a.e(18866).then(a.bind(a,82303)))),"v-51851102":(0,n.RC)((()=>a.e(98266).then(a.bind(a,72480)))),"v-6780fa2f":(0,n.RC)((()=>a.e(9196).then(a.bind(a,89381)))),"v-333335e6":(0,n.RC)((()=>a.e(75056).then(a.bind(a,64280)))),"v-0fb734c6":(0,n.RC)((()=>a.e(3529).then(a.bind(a,71742)))),"v-054e96dc":(0,n.RC)((()=>a.e(9126).then(a.bind(a,55604)))),"v-0d6dbef8":(0,n.RC)((()=>a.e(587).then(a.bind(a,25140)))),"v-5fe8612e":(0,n.RC)((()=>a.e(22507).then(a.bind(a,37287)))),"v-002015d9":(0,n.RC)((()=>a.e(49753).then(a.bind(a,36705)))),"v-578855ad":(0,n.RC)((()=>a.e(5591).then(a.bind(a,90232)))),"v-1e6d56ce":(0,n.RC)((()=>a.e(61859).then(a.bind(a,55007)))),"v-54d1615c":(0,n.RC)((()=>a.e(13121).then(a.bind(a,94326)))),"v-061793ac":(0,n.RC)((()=>a.e(94798).then(a.bind(a,29102)))),"v-2ca65e29":(0,n.RC)((()=>a.e(41146).then(a.bind(a,23771)))),"v-fc30e528":(0,n.RC)((()=>a.e(86623).then(a.bind(a,16099)))),"v-dd0a6282":(0,n.RC)((()=>a.e(99798).then(a.bind(a,97953)))),"v-0416c3b9":(0,n.RC)((()=>a.e(26790).then(a.bind(a,15625)))),"v-4f81c6bb":(0,n.RC)((()=>a.e(20640).then(a.bind(a,24050)))),"v-f95524f4":(0,n.RC)((()=>a.e(34782).then(a.bind(a,84904)))),"v-e7b24e0e":(0,n.RC)((()=>a.e(95382).then(a.bind(a,40520)))),"v-63939790":(0,n.RC)((()=>a.e(88729).then(a.bind(a,2613)))),"v-7b8e695f":(0,n.RC)((()=>a.e(84945).then(a.bind(a,68722)))),"v-435b5698":(0,n.RC)((()=>a.e(10334).then(a.bind(a,69174)))),"v-03bbd203":(0,n.RC)((()=>a.e(44811).then(a.bind(a,82506)))),"v-83da8d94":(0,n.RC)((()=>a.e(58333).then(a.bind(a,17944)))),"v-13c3cbe8":(0,n.RC)((()=>a.e(21402).then(a.bind(a,6503)))),"v-f3b0732e":(0,n.RC)((()=>a.e(35986).then(a.bind(a,33982)))),"v-159c09db":(0,n.RC)((()=>a.e(93092).then(a.bind(a,33639)))),"v-8278a984":(0,n.RC)((()=>a.e(32031).then(a.bind(a,40394)))),"v-53cd951d":(0,n.RC)((()=>a.e(3851).then(a.bind(a,11472)))),"v-efe14460":(0,n.RC)((()=>a.e(6013).then(a.bind(a,32718)))),"v-20cff4f2":(0,n.RC)((()=>a.e(80839).then(a.bind(a,27708)))),"v-46679928":(0,n.RC)((()=>a.e(7700).then(a.bind(a,62926)))),"v-2446fd74":(0,n.RC)((()=>a.e(92184).then(a.bind(a,78722)))),"v-4a2b6072":(0,n.RC)((()=>a.e(28712).then(a.bind(a,21501)))),"v-271d75d6":(0,n.RC)((()=>a.e(6462).then(a.bind(a,30321)))),"v-5af931fe":(0,n.RC)((()=>a.e(68981).then(a.bind(a,16113)))),"v-435cedc8":(0,n.RC)((()=>a.e(2412).then(a.bind(a,81598)))),"v-fddb6b2a":(0,n.RC)((()=>a.e(24961).then(a.bind(a,44770)))),"v-65a32754":(0,n.RC)((()=>a.e(98539).then(a.bind(a,99262)))),"v-6730ea78":(0,n.RC)((()=>a.e(11833).then(a.bind(a,92338)))),"v-73a24a3a":(0,n.RC)((()=>a.e(93882).then(a.bind(a,57351)))),"v-8fa6968a":(0,n.RC)((()=>a.e(87428).then(a.bind(a,57038)))),"v-1d5feaa7":(0,n.RC)((()=>a.e(49435).then(a.bind(a,55102)))),"v-0b4f55c0":(0,n.RC)((()=>a.e(74311).then(a.bind(a,59502)))),"v-4754e3b1":(0,n.RC)((()=>a.e(1053).then(a.bind(a,99595)))),"v-0ffcd3e0":(0,n.RC)((()=>a.e(59107).then(a.bind(a,46930)))),"v-59a21084":(0,n.RC)((()=>a.e(19588).then(a.bind(a,74137)))),"v-6863cc9e":(0,n.RC)((()=>a.e(53563).then(a.bind(a,92774)))),"v-f0d4733a":(0,n.RC)((()=>a.e(75828).then(a.bind(a,1387)))),"v-15dd32d2":(0,n.RC)((()=>a.e(75565).then(a.bind(a,74865)))),"v-40c17b28":(0,n.RC)((()=>a.e(81562).then(a.bind(a,60229)))),"v-8b0e3c32":(0,n.RC)((()=>a.e(33585).then(a.bind(a,38414)))),"v-251c5e07":(0,n.RC)((()=>a.e(19343).then(a.bind(a,79495)))),"v-5edb8acc":(0,n.RC)((()=>a.e(35267).then(a.bind(a,24034)))),"v-6ed22e89":(0,n.RC)((()=>a.e(36644).then(a.bind(a,76727)))),"v-1127c682":(0,n.RC)((()=>a.e(7216).then(a.bind(a,49438)))),"v-bdbcba86":(0,n.RC)((()=>a.e(15392).then(a.bind(a,67276)))),"v-2a3f152e":(0,n.RC)((()=>a.e(77407).then(a.bind(a,47724)))),"v-b5cdbcca":(0,n.RC)((()=>a.e(18202).then(a.bind(a,5499)))),"v-0eb38230":(0,n.RC)((()=>a.e(60581).then(a.bind(a,60168)))),"v-6193fda3":(0,n.RC)((()=>a.e(38087).then(a.bind(a,1303)))),"v-85f3d8a2":(0,n.RC)((()=>a.e(65838).then(a.bind(a,68237)))),"v-cc37e3c8":(0,n.RC)((()=>a.e(66619).then(a.bind(a,4224)))),"v-697acf65":(0,n.RC)((()=>a.e(41255).then(a.bind(a,20640)))),"v-0db2b831":(0,n.RC)((()=>a.e(30300).then(a.bind(a,99230)))),"v-54dad760":(0,n.RC)((()=>a.e(50003).then(a.bind(a,672)))),"v-76bd067c":(0,n.RC)((()=>a.e(96746).then(a.bind(a,51068)))),"v-552c52ec":(0,n.RC)((()=>a.e(55028).then(a.bind(a,51656)))),"v-9d4e28d0":(0,n.RC)((()=>a.e(24129).then(a.bind(a,98788)))),"v-73edba1e":(0,n.RC)((()=>a.e(33294).then(a.bind(a,21177)))),"v-05c4845f":(0,n.RC)((()=>a.e(98763).then(a.bind(a,13600)))),"v-abdb2784":(0,n.RC)((()=>a.e(8758).then(a.bind(a,82814)))),"v-7552317a":(0,n.RC)((()=>a.e(63423).then(a.bind(a,36694)))),"v-5e699f3b":(0,n.RC)((()=>a.e(41608).then(a.bind(a,78055)))),"v-d9322f3e":(0,n.RC)((()=>a.e(66776).then(a.bind(a,48598)))),"v-3f4e4c84":(0,n.RC)((()=>a.e(96194).then(a.bind(a,94469)))),"v-8fb6e956":(0,n.RC)((()=>a.e(39815).then(a.bind(a,25069)))),"v-736c2f7c":(0,n.RC)((()=>a.e(43740).then(a.bind(a,2034)))),"v-ca4d7154":(0,n.RC)((()=>a.e(40819).then(a.bind(a,23458)))),"v-dc56542c":(0,n.RC)((()=>a.e(81080).then(a.bind(a,66020)))),"v-82e4faac":(0,n.RC)((()=>a.e(73272).then(a.bind(a,28545)))),"v-4fb5d210":(0,n.RC)((()=>a.e(8034).then(a.bind(a,37647)))),"v-8b49ba9e":(0,n.RC)((()=>a.e(33867).then(a.bind(a,57097)))),"v-12795dd8":(0,n.RC)((()=>a.e(70794).then(a.bind(a,99221)))),"v-56594599":(0,n.RC)((()=>a.e(93620).then(a.bind(a,73105)))),"v-b7e7ef7a":(0,n.RC)((()=>a.e(33964).then(a.bind(a,85943)))),"v-a913c376":(0,n.RC)((()=>a.e(28576).then(a.bind(a,34644)))),"v-2904d6b6":(0,n.RC)((()=>a.e(51990).then(a.bind(a,30027)))),"v-04ea2b32":(0,n.RC)((()=>a.e(33210).then(a.bind(a,91328)))),"v-6ed03c7c":(0,n.RC)((()=>a.e(49330).then(a.bind(a,35243)))),"v-0500ab2c":(0,n.RC)((()=>a.e(76992).then(a.bind(a,4083)))),"v-20f0ad21":(0,n.RC)((()=>a.e(20011).then(a.bind(a,43302)))),"v-168cefd2":(0,n.RC)((()=>a.e(95875).then(a.bind(a,6494)))),"v-7a51ec1b":(0,n.RC)((()=>a.e(45631).then(a.bind(a,83219)))),"v-3e54ab50":(0,n.RC)((()=>a.e(67441).then(a.bind(a,92828)))),"v-02dacd5e":(0,n.RC)((()=>a.e(22273).then(a.bind(a,65602)))),"v-71dc7f0c":(0,n.RC)((()=>a.e(31908).then(a.bind(a,49694)))),"v-5333caa4":(0,n.RC)((()=>a.e(69293).then(a.bind(a,29568)))),"v-3fa85cfa":(0,n.RC)((()=>a.e(58380).then(a.bind(a,55464)))),"v-69b33c5e":(0,n.RC)((()=>a.e(46583).then(a.bind(a,47772)))),"v-a1ab80fe":(0,n.RC)((()=>a.e(40070).then(a.bind(a,71934)))),"v-3291128b":(0,n.RC)((()=>a.e(59345).then(a.bind(a,39041)))),"v-69be0f1d":(0,n.RC)((()=>a.e(48359).then(a.bind(a,51300)))),"v-e3e99664":(0,n.RC)((()=>a.e(99973).then(a.bind(a,54306)))),"v-503fc08f":(0,n.RC)((()=>a.e(75612).then(a.bind(a,7509)))),"v-085d06ce":(0,n.RC)((()=>a.e(84996).then(a.bind(a,74612)))),"v-9555e3d8":(0,n.RC)((()=>a.e(63251).then(a.bind(a,7183)))),"v-527c4b9c":(0,n.RC)((()=>a.e(84023).then(a.bind(a,77132)))),"v-5717d036":(0,n.RC)((()=>a.e(10045).then(a.bind(a,5744)))),"v-a2ff4f38":(0,n.RC)((()=>a.e(70005).then(a.bind(a,56165)))),"v-38389ece":(0,n.RC)((()=>a.e(20397).then(a.bind(a,3166)))),"v-846c5f62":(0,n.RC)((()=>a.e(28903).then(a.bind(a,11395)))),"v-6383d537":(0,n.RC)((()=>a.e(23404).then(a.bind(a,35179)))),"v-6b707689":(0,n.RC)((()=>a.e(74842).then(a.bind(a,88420)))),"v-1737c155":(0,n.RC)((()=>a.e(16213).then(a.bind(a,19065)))),"v-fa26e920":(0,n.RC)((()=>a.e(71508).then(a.bind(a,80931)))),"v-0bbf52f1":(0,n.RC)((()=>a.e(82371).then(a.bind(a,53175)))),"v-fe14c97c":(0,n.RC)((()=>a.e(90859).then(a.bind(a,69206)))),"v-f3d7b5c2":(0,n.RC)((()=>a.e(29810).then(a.bind(a,65134)))),"v-3520260c":(0,n.RC)((()=>a.e(6889).then(a.bind(a,1623)))),"v-914cf70e":(0,n.RC)((()=>a.e(71165).then(a.bind(a,91873)))),"v-2f07a0ec":(0,n.RC)((()=>a.e(15194).then(a.bind(a,76714)))),"v-77dfa475":(0,n.RC)((()=>a.e(1618).then(a.bind(a,32601)))),"v-dfcdc6ac":(0,n.RC)((()=>a.e(29202).then(a.bind(a,54486)))),"v-495c4178":(0,n.RC)((()=>a.e(64725).then(a.bind(a,65660)))),"v-02c46aa2":(0,n.RC)((()=>a.e(87461).then(a.bind(a,64164)))),"v-37a4494f":(0,n.RC)((()=>a.e(64330).then(a.bind(a,30429)))),"v-64df0368":(0,n.RC)((()=>a.e(96015).then(a.bind(a,56302)))),"v-6a524625":(0,n.RC)((()=>a.e(95282).then(a.bind(a,57111)))),"v-aa51ae56":(0,n.RC)((()=>a.e(85940).then(a.bind(a,38734)))),"v-2e7dea7f":(0,n.RC)((()=>a.e(51033).then(a.bind(a,58462)))),"v-2ef83302":(0,n.RC)((()=>a.e(77716).then(a.bind(a,29948)))),"v-613200d5":(0,n.RC)((()=>a.e(6767).then(a.bind(a,58887)))),"v-39354ab9":(0,n.RC)((()=>a.e(9319).then(a.bind(a,20516)))),"v-4bdde895":(0,n.RC)((()=>a.e(51715).then(a.bind(a,88423)))),"v-1aa63c24":(0,n.RC)((()=>a.e(75088).then(a.bind(a,66751)))),"v-19bac6b0":(0,n.RC)((()=>a.e(80580).then(a.bind(a,55243)))),"v-377c72d8":(0,n.RC)((()=>a.e(56904).then(a.bind(a,48932)))),"v-294a69a9":(0,n.RC)((()=>a.e(70917).then(a.bind(a,83042)))),"v-9c3d27b8":(0,n.RC)((()=>a.e(244).then(a.bind(a,90483)))),"v-10e0f22a":(0,n.RC)((()=>a.e(16692).then(a.bind(a,83522)))),"v-05364be3":(0,n.RC)((()=>a.e(53445).then(a.bind(a,4756)))),"v-70a3bfcc":(0,n.RC)((()=>a.e(64462).then(a.bind(a,85463)))),"v-057fb76c":(0,n.RC)((()=>a.e(77635).then(a.bind(a,59653)))),"v-2732ecf7":(0,n.RC)((()=>a.e(45166).then(a.bind(a,16871)))),"v-df09066a":(0,n.RC)((()=>a.e(62154).then(a.bind(a,2542)))),"v-25ebcb39":(0,n.RC)((()=>a.e(41865).then(a.bind(a,42909)))),"v-29557c77":(0,n.RC)((()=>a.e(78825).then(a.bind(a,31326)))),"v-42ee2dc8":(0,n.RC)((()=>a.e(46326).then(a.bind(a,17677)))),"v-eb020bc4":(0,n.RC)((()=>a.e(19273).then(a.bind(a,80383)))),"v-7ae696f6":(0,n.RC)((()=>a.e(99494).then(a.bind(a,47937)))),"v-50dbe7bd":(0,n.RC)((()=>a.e(60561).then(a.bind(a,10379)))),"v-8e18f4c0":(0,n.RC)((()=>a.e(52530).then(a.bind(a,35779)))),"v-90b6cce8":(0,n.RC)((()=>a.e(28074).then(a.bind(a,62986)))),"v-2c849aa3":(0,n.RC)((()=>a.e(44945).then(a.bind(a,32415)))),"v-7ab25e78":(0,n.RC)((()=>a.e(31931).then(a.bind(a,53233)))),"v-dda22454":(0,n.RC)((()=>a.e(67851).then(a.bind(a,3471)))),"v-3f26ee9f":(0,n.RC)((()=>a.e(22595).then(a.bind(a,17562)))),"v-4223ff1b":(0,n.RC)((()=>a.e(6065).then(a.bind(a,98738)))),"v-4f4a2656":(0,n.RC)((()=>a.e(76668).then(a.bind(a,9889)))),"v-17516ae3":(0,n.RC)((()=>a.e(92027).then(a.bind(a,40262)))),"v-7f0062a8":(0,n.RC)((()=>a.e(19059).then(a.bind(a,73494)))),"v-7b96b16a":(0,n.RC)((()=>a.e(68420).then(a.bind(a,51873)))),"v-329352dc":(0,n.RC)((()=>a.e(84645).then(a.bind(a,11950)))),"v-4490e0bb":(0,n.RC)((()=>a.e(99235).then(a.bind(a,18462)))),"v-8b6178d4":(0,n.RC)((()=>a.e(57446).then(a.bind(a,36940)))),"v-337ba44e":(0,n.RC)((()=>a.e(81738).then(a.bind(a,63881)))),"v-3b947ce7":(0,n.RC)((()=>a.e(57789).then(a.bind(a,24779)))),"v-c2caa64a":(0,n.RC)((()=>a.e(53904).then(a.bind(a,79689)))),"v-e799500a":(0,n.RC)((()=>a.e(57948).then(a.bind(a,69754)))),"v-e924b50e":(0,n.RC)((()=>a.e(73583).then(a.bind(a,83872)))),"v-7e0bbed8":(0,n.RC)((()=>a.e(9965).then(a.bind(a,71777)))),"v-2e3f2cd1":(0,n.RC)((()=>a.e(95606).then(a.bind(a,85323)))),"v-1ec6cfe2":(0,n.RC)((()=>a.e(97907).then(a.bind(a,39421)))),"v-114d586d":(0,n.RC)((()=>a.e(85340).then(a.bind(a,38536)))),"v-21d4b770":(0,n.RC)((()=>a.e(45135).then(a.bind(a,39676)))),"v-2d8f8dfc":(0,n.RC)((()=>a.e(25741).then(a.bind(a,13545)))),"v-e6dd9e0a":(0,n.RC)((()=>a.e(43501).then(a.bind(a,24931)))),"v-7cb1314d":(0,n.RC)((()=>a.e(98386).then(a.bind(a,89461)))),"v-3706649a":(0,n.RC)((()=>a.e(20088).then(a.bind(a,18109)))),"v-5bc93818":(0,n.RC)((()=>a.e(54498).then(a.bind(a,53490)))),"v-744d024e":(0,n.RC)((()=>a.e(19146).then(a.bind(a,97034)))),"v-e52c881c":(0,n.RC)((()=>a.e(39544).then(a.bind(a,23370)))),"v-75ed4ea4":(0,n.RC)((()=>a.e(34386).then(a.bind(a,37291)))),"v-2897d318":(0,n.RC)((()=>a.e(78441).then(a.bind(a,89240)))),"v-154dc4c4":(0,n.RC)((()=>a.e(90159).then(a.bind(a,57509)))),"v-01560935":(0,n.RC)((()=>a.e(90493).then(a.bind(a,45024)))),"v-43d7543a":(0,n.RC)((()=>a.e(76667).then(a.bind(a,12550)))),"v-84f914f4":(0,n.RC)((()=>a.e(99414).then(a.bind(a,4295)))),"v-5f7f7ebf":(0,n.RC)((()=>a.e(98668).then(a.bind(a,59721)))),"v-1daa6b4d":(0,n.RC)((()=>a.e(64943).then(a.bind(a,47935)))),"v-4f7b1987":(0,n.RC)((()=>a.e(68743).then(a.bind(a,15397)))),"v-60379330":(0,n.RC)((()=>a.e(12025).then(a.bind(a,64866)))),"v-9c48d85a":(0,n.RC)((()=>a.e(24689).then(a.bind(a,67598)))),"v-17343014":(0,n.RC)((()=>a.e(36123).then(a.bind(a,27704)))),"v-2ae54282":(0,n.RC)((()=>a.e(31413).then(a.bind(a,48497)))),"v-755965f0":(0,n.RC)((()=>a.e(71300).then(a.bind(a,71731)))),"v-b749fb9c":(0,n.RC)((()=>a.e(51869).then(a.bind(a,76994)))),"v-a0ba2788":(0,n.RC)((()=>a.e(96787).then(a.bind(a,7080)))),"v-65f6d381":(0,n.RC)((()=>a.e(36177).then(a.bind(a,15985)))),"v-b302da92":(0,n.RC)((()=>a.e(41186).then(a.bind(a,803)))),"v-e9c7e408":(0,n.RC)((()=>a.e(43358).then(a.bind(a,75629)))),"v-551fb564":(0,n.RC)((()=>a.e(4547).then(a.bind(a,1411)))),"v-e2bac56c":(0,n.RC)((()=>a.e(36745).then(a.bind(a,63294)))),"v-551de488":(0,n.RC)((()=>a.e(80867).then(a.bind(a,37301)))),"v-65efd6b5":(0,n.RC)((()=>a.e(73087).then(a.bind(a,11153)))),"v-7cfd563e":(0,n.RC)((()=>a.e(65814).then(a.bind(a,18904)))),"v-fd3344d8":(0,n.RC)((()=>a.e(22338).then(a.bind(a,30796)))),"v-14748cc9":(0,n.RC)((()=>a.e(27009).then(a.bind(a,43120)))),"v-5839c72f":(0,n.RC)((()=>a.e(94581).then(a.bind(a,11225)))),"v-801db588":(0,n.RC)((()=>a.e(92048).then(a.bind(a,52150)))),"v-d37ff7f0":(0,n.RC)((()=>a.e(76824).then(a.bind(a,39798)))),"v-56fbf552":(0,n.RC)((()=>a.e(88277).then(a.bind(a,87903)))),"v-78cbe7bb":(0,n.RC)((()=>a.e(23146).then(a.bind(a,77065)))),"v-b310d42a":(0,n.RC)((()=>a.e(20156).then(a.bind(a,35618)))),"v-6c5e4d32":(0,n.RC)((()=>a.e(1757).then(a.bind(a,43033)))),"v-50ae161a":(0,n.RC)((()=>a.e(41866).then(a.bind(a,63696)))),"v-5904f150":(0,n.RC)((()=>a.e(36471).then(a.bind(a,26633)))),"v-484552dc":(0,n.RC)((()=>a.e(38963).then(a.bind(a,90583)))),"v-65ee2aa4":(0,n.RC)((()=>a.e(61336).then(a.bind(a,85471)))),"v-2831124d":(0,n.RC)((()=>a.e(84305).then(a.bind(a,12254)))),"v-b3bd56da":(0,n.RC)((()=>a.e(53831).then(a.bind(a,59863)))),"v-4b0ad344":(0,n.RC)((()=>a.e(1827).then(a.bind(a,57740)))),"v-581e04cc":(0,n.RC)((()=>a.e(5746).then(a.bind(a,60022)))),"v-12cb3644":(0,n.RC)((()=>a.e(82260).then(a.bind(a,66893)))),"v-2dcc8639":(0,n.RC)((()=>a.e(78187).then(a.bind(a,83722)))),"v-3fb58c9e":(0,n.RC)((()=>a.e(98064).then(a.bind(a,84181)))),"v-284efd1e":(0,n.RC)((()=>a.e(52149).then(a.bind(a,88121)))),"v-2953cd2f":(0,n.RC)((()=>a.e(94820).then(a.bind(a,35161)))),"v-c7bf80f0":(0,n.RC)((()=>a.e(76981).then(a.bind(a,33144)))),"v-288e2c56":(0,n.RC)((()=>a.e(28884).then(a.bind(a,21195)))),"v-a26e9aaa":(0,n.RC)((()=>a.e(87778).then(a.bind(a,43888)))),"v-54f4d5c2":(0,n.RC)((()=>a.e(47082).then(a.bind(a,77677)))),"v-3891cf12":(0,n.RC)((()=>a.e(55072).then(a.bind(a,65480)))),"v-b3142c4c":(0,n.RC)((()=>a.e(25146).then(a.bind(a,3037))))}},59706:(e,t,a)=>{a.d(t,{T:()=>n});const n={"v-8daa1a0e":()=>a.e(52509).then(a.bind(a,76464)).then((({data:e})=>e)),"v-146a1089":()=>a.e(31434).then(a.bind(a,66750)).then((({data:e})=>e)),"v-15054f24":()=>a.e(22306).then(a.bind(a,67942)).then((({data:e})=>e)),"v-7ff04f35":()=>a.e(68163).then(a.bind(a,67882)).then((({data:e})=>e)),"v-f785aee2":()=>a.e(27242).then(a.bind(a,24778)).then((({data:e})=>e)),"v-6eec2164":()=>a.e(14779).then(a.bind(a,38429)).then((({data:e})=>e)),"v-20955d24":()=>a.e(92531).then(a.bind(a,48193)).then((({data:e})=>e)),"v-5b2dfc66":()=>a.e(90599).then(a.bind(a,5049)).then((({data:e})=>e)),"v-0e1a9384":()=>a.e(27979).then(a.bind(a,92873)).then((({data:e})=>e)),"v-0bb5d56d":()=>a.e(33995).then(a.bind(a,41561)).then((({data:e})=>e)),"v-6ad9dcc9":()=>a.e(433).then(a.bind(a,80683)).then((({data:e})=>e)),"v-34e5d755":()=>a.e(20815).then(a.bind(a,46229)).then((({data:e})=>e)),"v-264f3578":()=>a.e(37390).then(a.bind(a,45053)).then((({data:e})=>e)),"v-647e802c":()=>a.e(9807).then(a.bind(a,47665)).then((({data:e})=>e)),"v-285ff93c":()=>a.e(15260).then(a.bind(a,10680)).then((({data:e})=>e)),"v-6352c39e":()=>a.e(564).then(a.bind(a,74231)).then((({data:e})=>e)),"v-18b1b3ae":()=>a.e(61303).then(a.bind(a,73849)).then((({data:e})=>e)),"v-833997ce":()=>a.e(914).then(a.bind(a,29404)).then((({data:e})=>e)),"v-8eb7e91c":()=>a.e(46332).then(a.bind(a,67242)).then((({data:e})=>e)),"v-837c88f4":()=>a.e(29386).then(a.bind(a,19445)).then((({data:e})=>e)),"v-ec405424":()=>a.e(24796).then(a.bind(a,63210)).then((({data:e})=>e)),"v-76da7cfe":()=>a.e(82380).then(a.bind(a,30037)).then((({data:e})=>e)),"v-30ddd490":()=>a.e(3157).then(a.bind(a,58772)).then((({data:e})=>e)),"v-398bed5a":()=>a.e(15012).then(a.bind(a,78698)).then((({data:e})=>e)),"v-3725077a":()=>a.e(15651).then(a.bind(a,54401)).then((({data:e})=>e)),"v-ec0e16f6":()=>a.e(98872).then(a.bind(a,4788)).then((({data:e})=>e)),"v-ff88ab06":()=>a.e(92050).then(a.bind(a,9706)).then((({data:e})=>e)),"v-a128f5ea":()=>a.e(74501).then(a.bind(a,24221)).then((({data:e})=>e)),"v-7321cfda":()=>a.e(73332).then(a.bind(a,99967)).then((({data:e})=>e)),"v-5978b3ac":()=>a.e(60907).then(a.bind(a,72689)).then((({data:e})=>e)),"v-a0a24d6a":()=>a.e(63763).then(a.bind(a,22420)).then((({data:e})=>e)),"v-efa0f806":()=>a.e(41536).then(a.bind(a,34438)).then((({data:e})=>e)),"v-2fe790c2":()=>a.e(46320).then(a.bind(a,26678)).then((({data:e})=>e)),"v-fe4c8648":()=>a.e(10332).then(a.bind(a,85339)).then((({data:e})=>e)),"v-14d32906":()=>a.e(96202).then(a.bind(a,20481)).then((({data:e})=>e)),"v-46819f1b":()=>a.e(29093).then(a.bind(a,29573)).then((({data:e})=>e)),"v-39a5f5ca":()=>a.e(24811).then(a.bind(a,43445)).then((({data:e})=>e)),"v-1e560a99":()=>a.e(16077).then(a.bind(a,3149)).then((({data:e})=>e)),"v-5b44553c":()=>a.e(33892).then(a.bind(a,34690)).then((({data:e})=>e)),"v-6f810d27":()=>a.e(30488).then(a.bind(a,28226)).then((({data:e})=>e)),"v-6f792996":()=>a.e(9465).then(a.bind(a,88393)).then((({data:e})=>e)),"v-84d4a76c":()=>a.e(72466).then(a.bind(a,43618)).then((({data:e})=>e)),"v-94a3be0a":()=>a.e(56356).then(a.bind(a,26466)).then((({data:e})=>e)),"v-ae5d0daa":()=>a.e(80014).then(a.bind(a,35783)).then((({data:e})=>e)),"v-33492354":()=>a.e(90765).then(a.bind(a,67594)).then((({data:e})=>e)),"v-a0440418":()=>a.e(95249).then(a.bind(a,5159)).then((({data:e})=>e)),"v-355f6d86":()=>a.e(40256).then(a.bind(a,32597)).then((({data:e})=>e)),"v-2272c6f5":()=>a.e(75607).then(a.bind(a,48770)).then((({data:e})=>e)),"v-7b009eea":()=>a.e(54460).then(a.bind(a,65049)).then((({data:e})=>e)),"v-9b87a6dc":()=>a.e(3959).then(a.bind(a,33439)).then((({data:e})=>e)),"v-611eec3a":()=>a.e(33671).then(a.bind(a,29757)).then((({data:e})=>e)),"v-d4963e94":()=>a.e(10351).then(a.bind(a,17488)).then((({data:e})=>e)),"v-c9823a98":()=>a.e(88134).then(a.bind(a,49600)).then((({data:e})=>e)),"v-361c7b7d":()=>a.e(82479).then(a.bind(a,49044)).then((({data:e})=>e)),"v-2d8cd5c8":()=>a.e(87523).then(a.bind(a,42073)).then((({data:e})=>e)),"v-38d41630":()=>a.e(49740).then(a.bind(a,28895)).then((({data:e})=>e)),"v-233fe009":()=>a.e(15731).then(a.bind(a,10837)).then((({data:e})=>e)),"v-1d30abd8":()=>a.e(81507).then(a.bind(a,70019)).then((({data:e})=>e)),"v-245c31a9":()=>a.e(14784).then(a.bind(a,53159)).then((({data:e})=>e)),"v-d893d8ce":()=>a.e(95331).then(a.bind(a,93922)).then((({data:e})=>e)),"v-2ee7e91c":()=>a.e(83042).then(a.bind(a,70497)).then((({data:e})=>e)),"v-1509315e":()=>a.e(39656).then(a.bind(a,75245)).then((({data:e})=>e)),"v-12412da4":()=>a.e(38969).then(a.bind(a,21033)).then((({data:e})=>e)),"v-6af69b4d":()=>a.e(48493).then(a.bind(a,77675)).then((({data:e})=>e)),"v-32c10f2e":()=>a.e(22872).then(a.bind(a,59294)).then((({data:e})=>e)),"v-134ae2df":()=>a.e(29272).then(a.bind(a,2530)).then((({data:e})=>e)),"v-73327cb6":()=>a.e(14562).then(a.bind(a,41995)).then((({data:e})=>e)),"v-5bc6221c":()=>a.e(69173).then(a.bind(a,62550)).then((({data:e})=>e)),"v-d6fd848c":()=>a.e(3612).then(a.bind(a,13677)).then((({data:e})=>e)),"v-715bd2d7":()=>a.e(51602).then(a.bind(a,88327)).then((({data:e})=>e)),"v-718fb290":()=>a.e(14759).then(a.bind(a,26971)).then((({data:e})=>e)),"v-1752d037":()=>a.e(45254).then(a.bind(a,77823)).then((({data:e})=>e)),"v-5eed4996":()=>a.e(12324).then(a.bind(a,62638)).then((({data:e})=>e)),"v-1c2fcf06":()=>a.e(38482).then(a.bind(a,50671)).then((({data:e})=>e)),"v-78c02211":()=>a.e(64654).then(a.bind(a,39921)).then((({data:e})=>e)),"v-1a4392ec":()=>a.e(3724).then(a.bind(a,20443)).then((({data:e})=>e)),"v-2ee1d1e9":()=>a.e(34042).then(a.bind(a,16467)).then((({data:e})=>e)),"v-aaef1ff8":()=>a.e(94774).then(a.bind(a,32481)).then((({data:e})=>e)),"v-d2a92084":()=>a.e(10119).then(a.bind(a,94198)).then((({data:e})=>e)),"v-4b2d1320":()=>a.e(64571).then(a.bind(a,97701)).then((({data:e})=>e)),"v-4652f6be":()=>a.e(56178).then(a.bind(a,89666)).then((({data:e})=>e)),"v-756dd164":()=>a.e(32959).then(a.bind(a,20432)).then((({data:e})=>e)),"v-0868e40c":()=>a.e(30050).then(a.bind(a,72620)).then((({data:e})=>e)),"v-242f3b18":()=>a.e(113).then(a.bind(a,83195)).then((({data:e})=>e)),"v-5c07f092":()=>a.e(85816).then(a.bind(a,90675)).then((({data:e})=>e)),"v-3eea04e4":()=>a.e(69363).then(a.bind(a,61257)).then((({data:e})=>e)),"v-4e0b7530":()=>a.e(44627).then(a.bind(a,31381)).then((({data:e})=>e)),"v-dfdf665a":()=>a.e(79068).then(a.bind(a,29179)).then((({data:e})=>e)),"v-ea3dd79e":()=>a.e(91521).then(a.bind(a,99512)).then((({data:e})=>e)),"v-6fa34334":()=>a.e(9687).then(a.bind(a,43615)).then((({data:e})=>e)),"v-21924c70":()=>a.e(56077).then(a.bind(a,24824)).then((({data:e})=>e)),"v-3738d2c0":()=>a.e(92616).then(a.bind(a,5129)).then((({data:e})=>e)),"v-b20eb394":()=>a.e(48175).then(a.bind(a,32044)).then((({data:e})=>e)),"v-3c6a1e34":()=>a.e(89275).then(a.bind(a,96637)).then((({data:e})=>e)),"v-57c3a6cc":()=>a.e(48498).then(a.bind(a,47426)).then((({data:e})=>e)),"v-d2bdffd6":()=>a.e(30675).then(a.bind(a,31793)).then((({data:e})=>e)),"v-82e52c62":()=>a.e(5894).then(a.bind(a,6539)).then((({data:e})=>e)),"v-0452eb91":()=>a.e(51570).then(a.bind(a,32523)).then((({data:e})=>e)),"v-62d759e8":()=>a.e(18519).then(a.bind(a,40413)).then((({data:e})=>e)),"v-5a85e8bd":()=>a.e(15006).then(a.bind(a,10429)).then((({data:e})=>e)),"v-7197b92f":()=>a.e(67296).then(a.bind(a,35990)).then((({data:e})=>e)),"v-b9f6b2ca":()=>a.e(73237).then(a.bind(a,37549)).then((({data:e})=>e)),"v-0357848e":()=>a.e(9238).then(a.bind(a,28187)).then((({data:e})=>e)),"v-f3161262":()=>a.e(56259).then(a.bind(a,55615)).then((({data:e})=>e)),"v-726f7072":()=>a.e(12179).then(a.bind(a,11828)).then((({data:e})=>e)),"v-2e28fb15":()=>a.e(14862).then(a.bind(a,93387)).then((({data:e})=>e)),"v-5b4990f8":()=>a.e(91711).then(a.bind(a,91225)).then((({data:e})=>e)),"v-21c4ee0c":()=>a.e(75990).then(a.bind(a,89378)).then((({data:e})=>e)),"v-605b78f4":()=>a.e(26131).then(a.bind(a,48152)).then((({data:e})=>e)),"v-793fd81a":()=>a.e(45751).then(a.bind(a,77278)).then((({data:e})=>e)),"v-1d44d9c3":()=>a.e(65677).then(a.bind(a,27414)).then((({data:e})=>e)),"v-789db224":()=>a.e(46721).then(a.bind(a,31957)).then((({data:e})=>e)),"v-c72e08ec":()=>a.e(47598).then(a.bind(a,42106)).then((({data:e})=>e)),"v-accdabf2":()=>a.e(98873).then(a.bind(a,77854)).then((({data:e})=>e)),"v-e846ec20":()=>a.e(66200).then(a.bind(a,8719)).then((({data:e})=>e)),"v-a3144274":()=>a.e(5593).then(a.bind(a,13e3)).then((({data:e})=>e)),"v-239235ed":()=>a.e(3597).then(a.bind(a,49481)).then((({data:e})=>e)),"v-19bca984":()=>a.e(35399).then(a.bind(a,85637)).then((({data:e})=>e)),"v-681ba581":()=>a.e(65856).then(a.bind(a,12628)).then((({data:e})=>e)),"v-48fc6d3c":()=>a.e(71498).then(a.bind(a,28251)).then((({data:e})=>e)),"v-b7f95708":()=>a.e(26161).then(a.bind(a,16267)).then((({data:e})=>e)),"v-0def13a4":()=>a.e(46561).then(a.bind(a,86074)).then((({data:e})=>e)),"v-2a972985":()=>a.e(70015).then(a.bind(a,88634)).then((({data:e})=>e)),"v-48a6e254":()=>a.e(55650).then(a.bind(a,21291)).then((({data:e})=>e)),"v-3cccf502":()=>a.e(31154).then(a.bind(a,34310)).then((({data:e})=>e)),"v-461f9463":()=>a.e(6288).then(a.bind(a,12613)).then((({data:e})=>e)),"v-c72e4aea":()=>a.e(20345).then(a.bind(a,66831)).then((({data:e})=>e)),"v-33894aab":()=>a.e(35201).then(a.bind(a,93170)).then((({data:e})=>e)),"v-491f82cc":()=>a.e(14457).then(a.bind(a,41742)).then((({data:e})=>e)),"v-4d66e289":()=>a.e(33239).then(a.bind(a,43399)).then((({data:e})=>e)),"v-db68b190":()=>a.e(32753).then(a.bind(a,73545)).then((({data:e})=>e)),"v-3db71024":()=>a.e(76244).then(a.bind(a,80143)).then((({data:e})=>e)),"v-8c5b7854":()=>a.e(41622).then(a.bind(a,68339)).then((({data:e})=>e)),"v-5fbc4987":()=>a.e(57029).then(a.bind(a,91987)).then((({data:e})=>e)),"v-df5d1758":()=>a.e(39679).then(a.bind(a,55456)).then((({data:e})=>e)),"v-93dfe636":()=>a.e(65609).then(a.bind(a,42120)).then((({data:e})=>e)),"v-8487edae":()=>a.e(82986).then(a.bind(a,9955)).then((({data:e})=>e)),"v-59e10c5a":()=>a.e(91900).then(a.bind(a,53093)).then((({data:e})=>e)),"v-c7d79daa":()=>a.e(93076).then(a.bind(a,43099)).then((({data:e})=>e)),"v-3957cd7e":()=>a.e(56927).then(a.bind(a,17135)).then((({data:e})=>e)),"v-5ef6c9b6":()=>a.e(91264).then(a.bind(a,48402)).then((({data:e})=>e)),"v-799c2158":()=>a.e(95533).then(a.bind(a,1633)).then((({data:e})=>e)),"v-546d1486":()=>a.e(1531).then(a.bind(a,77077)).then((({data:e})=>e)),"v-0a8e930f":()=>a.e(58520).then(a.bind(a,91006)).then((({data:e})=>e)),"v-87c58234":()=>a.e(25650).then(a.bind(a,73556)).then((({data:e})=>e)),"v-2f906ca4":()=>a.e(46818).then(a.bind(a,80661)).then((({data:e})=>e)),"v-37389730":()=>a.e(43988).then(a.bind(a,64580)).then((({data:e})=>e)),"v-cf9c2128":()=>a.e(63080).then(a.bind(a,46127)).then((({data:e})=>e)),"v-05524a3c":()=>a.e(35966).then(a.bind(a,44698)).then((({data:e})=>e)),"v-580ce442":()=>a.e(33567).then(a.bind(a,19641)).then((({data:e})=>e)),"v-4157008c":()=>a.e(31289).then(a.bind(a,45897)).then((({data:e})=>e)),"v-e636c4d4":()=>a.e(8628).then(a.bind(a,48895)).then((({data:e})=>e)),"v-3fe5c342":()=>a.e(38886).then(a.bind(a,14656)).then((({data:e})=>e)),"v-37881894":()=>a.e(82550).then(a.bind(a,57474)).then((({data:e})=>e)),"v-fb7c1444":()=>a.e(84188).then(a.bind(a,29107)).then((({data:e})=>e)),"v-3c952b96":()=>a.e(90014).then(a.bind(a,8381)).then((({data:e})=>e)),"v-3ac3fde8":()=>a.e(46119).then(a.bind(a,55052)).then((({data:e})=>e)),"v-5b96b7fd":()=>a.e(46743).then(a.bind(a,76966)).then((({data:e})=>e)),"v-7af69fbf":()=>a.e(98789).then(a.bind(a,47575)).then((({data:e})=>e)),"v-d3bec9c2":()=>a.e(52444).then(a.bind(a,53627)).then((({data:e})=>e)),"v-5220625f":()=>a.e(58599).then(a.bind(a,60456)).then((({data:e})=>e)),"v-e898ae48":()=>a.e(39156).then(a.bind(a,81187)).then((({data:e})=>e)),"v-e7d0ffd8":()=>a.e(9016).then(a.bind(a,56123)).then((({data:e})=>e)),"v-65d00140":()=>a.e(50221).then(a.bind(a,85731)).then((({data:e})=>e)),"v-01199afd":()=>a.e(31761).then(a.bind(a,69562)).then((({data:e})=>e)),"v-d9eeb42e":()=>a.e(14084).then(a.bind(a,54082)).then((({data:e})=>e)),"v-d486c4a0":()=>a.e(70503).then(a.bind(a,51370)).then((({data:e})=>e)),"v-412da2a2":()=>a.e(30985).then(a.bind(a,68205)).then((({data:e})=>e)),"v-1e32d554":()=>a.e(60809).then(a.bind(a,70584)).then((({data:e})=>e)),"v-2a661765":()=>a.e(54285).then(a.bind(a,57835)).then((({data:e})=>e)),"v-29563aec":()=>a.e(6722).then(a.bind(a,95027)).then((({data:e})=>e)),"v-d4970868":()=>a.e(59912).then(a.bind(a,19338)).then((({data:e})=>e)),"v-8113af46":()=>a.e(9840).then(a.bind(a,17917)).then((({data:e})=>e)),"v-5244cc12":()=>a.e(554).then(a.bind(a,30011)).then((({data:e})=>e)),"v-2fc52e78":()=>a.e(86167).then(a.bind(a,32005)).then((({data:e})=>e)),"v-0ec9be64":()=>a.e(58198).then(a.bind(a,55504)).then((({data:e})=>e)),"v-6bcd6e11":()=>a.e(27709).then(a.bind(a,42325)).then((({data:e})=>e)),"v-189ba04a":()=>a.e(63987).then(a.bind(a,24995)).then((({data:e})=>e)),"v-55b00c46":()=>a.e(99347).then(a.bind(a,62723)).then((({data:e})=>e)),"v-3ac3b992":()=>a.e(62529).then(a.bind(a,39349)).then((({data:e})=>e)),"v-6f7a082a":()=>a.e(65771).then(a.bind(a,12175)).then((({data:e})=>e)),"v-1b9d0426":()=>a.e(77472).then(a.bind(a,8436)).then((({data:e})=>e)),"v-55c5117b":()=>a.e(39520).then(a.bind(a,85803)).then((({data:e})=>e)),"v-ba82bc1e":()=>a.e(16137).then(a.bind(a,9740)).then((({data:e})=>e)),"v-0b0d2347":()=>a.e(35430).then(a.bind(a,77166)).then((({data:e})=>e)),"v-7953f4a6":()=>a.e(18743).then(a.bind(a,29834)).then((({data:e})=>e)),"v-1cd0e5c2":()=>a.e(29179).then(a.bind(a,57465)).then((({data:e})=>e)),"v-3466b36e":()=>a.e(63906).then(a.bind(a,98894)).then((({data:e})=>e)),"v-32817272":()=>a.e(22468).then(a.bind(a,67432)).then((({data:e})=>e)),"v-2c2bed22":()=>a.e(30722).then(a.bind(a,49442)).then((({data:e})=>e)),"v-4613a302":()=>a.e(6981).then(a.bind(a,55701)).then((({data:e})=>e)),"v-7ba4ff44":()=>a.e(91791).then(a.bind(a,19046)).then((({data:e})=>e)),"v-797b419c":()=>a.e(5079).then(a.bind(a,96487)).then((({data:e})=>e)),"v-02684b7d":()=>a.e(76764).then(a.bind(a,16696)).then((({data:e})=>e)),"v-58f135ae":()=>a.e(49033).then(a.bind(a,29330)).then((({data:e})=>e)),"v-556bf6ae":()=>a.e(82415).then(a.bind(a,64812)).then((({data:e})=>e)),"v-88b653b6":()=>a.e(47862).then(a.bind(a,54989)).then((({data:e})=>e)),"v-43034483":()=>a.e(43919).then(a.bind(a,32930)).then((({data:e})=>e)),"v-417b4ca8":()=>a.e(73353).then(a.bind(a,14374)).then((({data:e})=>e)),"v-754a14ed":()=>a.e(50337).then(a.bind(a,17382)).then((({data:e})=>e)),"v-1029f0b9":()=>a.e(53308).then(a.bind(a,72851)).then((({data:e})=>e)),"v-ee259a78":()=>a.e(4408).then(a.bind(a,46961)).then((({data:e})=>e)),"v-d323d548":()=>a.e(77233).then(a.bind(a,52455)).then((({data:e})=>e)),"v-c928e2ea":()=>a.e(99695).then(a.bind(a,94332)).then((({data:e})=>e)),"v-0bfb0a2a":()=>a.e(69738).then(a.bind(a,55549)).then((({data:e})=>e)),"v-7de37888":()=>a.e(35022).then(a.bind(a,22310)).then((({data:e})=>e)),"v-293c8be9":()=>a.e(56024).then(a.bind(a,77953)).then((({data:e})=>e)),"v-a4a26144":()=>a.e(46504).then(a.bind(a,25793)).then((({data:e})=>e)),"v-58215d54":()=>a.e(82428).then(a.bind(a,59313)).then((({data:e})=>e)),"v-a92fc154":()=>a.e(65625).then(a.bind(a,63693)).then((({data:e})=>e)),"v-068af29a":()=>a.e(93656).then(a.bind(a,48615)).then((({data:e})=>e)),"v-24519f9d":()=>a.e(10916).then(a.bind(a,56433)).then((({data:e})=>e)),"v-058fc208":()=>a.e(79296).then(a.bind(a,10223)).then((({data:e})=>e)),"v-927cc2ec":()=>a.e(76217).then(a.bind(a,58325)).then((({data:e})=>e)),"v-19e36b6e":()=>a.e(80023).then(a.bind(a,10257)).then((({data:e})=>e)),"v-0c0c498f":()=>a.e(75813).then(a.bind(a,67533)).then((({data:e})=>e)),"v-03b28006":()=>a.e(65541).then(a.bind(a,31274)).then((({data:e})=>e)),"v-fe8f719c":()=>a.e(25736).then(a.bind(a,39840)).then((({data:e})=>e)),"v-c3105dca":()=>a.e(67241).then(a.bind(a,52078)).then((({data:e})=>e)),"v-4c6d1960":()=>a.e(33183).then(a.bind(a,26033)).then((({data:e})=>e)),"v-71e8640e":()=>a.e(87914).then(a.bind(a,92710)).then((({data:e})=>e)),"v-58da95f8":()=>a.e(87219).then(a.bind(a,48816)).then((({data:e})=>e)),"v-54277b4e":()=>a.e(32343).then(a.bind(a,75180)).then((({data:e})=>e)),"v-341b5c65":()=>a.e(58070).then(a.bind(a,85320)).then((({data:e})=>e)),"v-50d58ef3":()=>a.e(1857).then(a.bind(a,21346)).then((({data:e})=>e)),"v-280a6107":()=>a.e(6332).then(a.bind(a,44009)).then((({data:e})=>e)),"v-322a7de5":()=>a.e(22767).then(a.bind(a,84854)).then((({data:e})=>e)),"v-380d4898":()=>a.e(76717).then(a.bind(a,55493)).then((({data:e})=>e)),"v-5d8cafd7":()=>a.e(66707).then(a.bind(a,304)).then((({data:e})=>e)),"v-745f48d0":()=>a.e(29940).then(a.bind(a,58453)).then((({data:e})=>e)),"v-091ae3d7":()=>a.e(26801).then(a.bind(a,94691)).then((({data:e})=>e)),"v-dd97b0f8":()=>a.e(78287).then(a.bind(a,25806)).then((({data:e})=>e)),"v-7e4ee549":()=>a.e(71455).then(a.bind(a,83654)).then((({data:e})=>e)),"v-c1f11850":()=>a.e(22345).then(a.bind(a,42300)).then((({data:e})=>e)),"v-4dfa691d":()=>a.e(49956).then(a.bind(a,82602)).then((({data:e})=>e)),"v-9c53bea4":()=>a.e(62012).then(a.bind(a,71322)).then((({data:e})=>e)),"v-5d22fd4e":()=>a.e(33115).then(a.bind(a,42497)).then((({data:e})=>e)),"v-43d08d42":()=>a.e(65111).then(a.bind(a,70912)).then((({data:e})=>e)),"v-2f8d5e13":()=>a.e(13911).then(a.bind(a,61752)).then((({data:e})=>e)),"v-747e149f":()=>a.e(24657).then(a.bind(a,84097)).then((({data:e})=>e)),"v-eb21e1be":()=>a.e(83562).then(a.bind(a,62321)).then((({data:e})=>e)),"v-f5d15c7c":()=>a.e(50801).then(a.bind(a,91887)).then((({data:e})=>e)),"v-0cfc138c":()=>a.e(12857).then(a.bind(a,290)).then((({data:e})=>e)),"v-01d2ec0c":()=>a.e(80577).then(a.bind(a,68665)).then((({data:e})=>e)),"v-752bb69b":()=>a.e(34294).then(a.bind(a,46390)).then((({data:e})=>e)),"v-d29981d2":()=>a.e(18866).then(a.bind(a,91383)).then((({data:e})=>e)),"v-51851102":()=>a.e(98266).then(a.bind(a,18533)).then((({data:e})=>e)),"v-6780fa2f":()=>a.e(9196).then(a.bind(a,6295)).then((({data:e})=>e)),"v-333335e6":()=>a.e(75056).then(a.bind(a,24464)).then((({data:e})=>e)),"v-0fb734c6":()=>a.e(3529).then(a.bind(a,98731)).then((({data:e})=>e)),"v-054e96dc":()=>a.e(9126).then(a.bind(a,99146)).then((({data:e})=>e)),"v-0d6dbef8":()=>a.e(587).then(a.bind(a,6825)).then((({data:e})=>e)),"v-5fe8612e":()=>a.e(22507).then(a.bind(a,7586)).then((({data:e})=>e)),"v-002015d9":()=>a.e(49753).then(a.bind(a,5821)).then((({data:e})=>e)),"v-578855ad":()=>a.e(5591).then(a.bind(a,39526)).then((({data:e})=>e)),"v-1e6d56ce":()=>a.e(61859).then(a.bind(a,62591)).then((({data:e})=>e)),"v-54d1615c":()=>a.e(13121).then(a.bind(a,1935)).then((({data:e})=>e)),"v-061793ac":()=>a.e(94798).then(a.bind(a,51402)).then((({data:e})=>e)),"v-2ca65e29":()=>a.e(41146).then(a.bind(a,3034)).then((({data:e})=>e)),"v-fc30e528":()=>a.e(86623).then(a.bind(a,68687)).then((({data:e})=>e)),"v-dd0a6282":()=>a.e(99798).then(a.bind(a,39873)).then((({data:e})=>e)),"v-0416c3b9":()=>a.e(26790).then(a.bind(a,10760)).then((({data:e})=>e)),"v-4f81c6bb":()=>a.e(20640).then(a.bind(a,45180)).then((({data:e})=>e)),"v-f95524f4":()=>a.e(34782).then(a.bind(a,78158)).then((({data:e})=>e)),"v-e7b24e0e":()=>a.e(95382).then(a.bind(a,92784)).then((({data:e})=>e)),"v-63939790":()=>a.e(88729).then(a.bind(a,26199)).then((({data:e})=>e)),"v-7b8e695f":()=>a.e(84945).then(a.bind(a,91725)).then((({data:e})=>e)),"v-435b5698":()=>a.e(10334).then(a.bind(a,12491)).then((({data:e})=>e)),"v-03bbd203":()=>a.e(44811).then(a.bind(a,24767)).then((({data:e})=>e)),"v-83da8d94":()=>a.e(58333).then(a.bind(a,37142)).then((({data:e})=>e)),"v-13c3cbe8":()=>a.e(21402).then(a.bind(a,31295)).then((({data:e})=>e)),"v-f3b0732e":()=>a.e(35986).then(a.bind(a,24461)).then((({data:e})=>e)),"v-159c09db":()=>a.e(93092).then(a.bind(a,89155)).then((({data:e})=>e)),"v-8278a984":()=>a.e(32031).then(a.bind(a,59003)).then((({data:e})=>e)),"v-53cd951d":()=>a.e(3851).then(a.bind(a,52723)).then((({data:e})=>e)),"v-efe14460":()=>a.e(6013).then(a.bind(a,7926)).then((({data:e})=>e)),"v-20cff4f2":()=>a.e(80839).then(a.bind(a,34497)).then((({data:e})=>e)),"v-46679928":()=>a.e(7700).then(a.bind(a,86140)).then((({data:e})=>e)),"v-2446fd74":()=>a.e(92184).then(a.bind(a,5448)).then((({data:e})=>e)),"v-4a2b6072":()=>a.e(28712).then(a.bind(a,64922)).then((({data:e})=>e)),"v-271d75d6":()=>a.e(6462).then(a.bind(a,36707)).then((({data:e})=>e)),"v-5af931fe":()=>a.e(68981).then(a.bind(a,15241)).then((({data:e})=>e)),"v-435cedc8":()=>a.e(2412).then(a.bind(a,46727)).then((({data:e})=>e)),"v-fddb6b2a":()=>a.e(24961).then(a.bind(a,93578)).then((({data:e})=>e)),"v-65a32754":()=>a.e(98539).then(a.bind(a,51462)).then((({data:e})=>e)),"v-6730ea78":()=>a.e(11833).then(a.bind(a,20765)).then((({data:e})=>e)),"v-73a24a3a":()=>a.e(93882).then(a.bind(a,18035)).then((({data:e})=>e)),"v-8fa6968a":()=>a.e(87428).then(a.bind(a,41902)).then((({data:e})=>e)),"v-1d5feaa7":()=>a.e(49435).then(a.bind(a,69683)).then((({data:e})=>e)),"v-0b4f55c0":()=>a.e(74311).then(a.bind(a,31631)).then((({data:e})=>e)),"v-4754e3b1":()=>a.e(1053).then(a.bind(a,50901)).then((({data:e})=>e)),"v-0ffcd3e0":()=>a.e(59107).then(a.bind(a,19864)).then((({data:e})=>e)),"v-59a21084":()=>a.e(19588).then(a.bind(a,49709)).then((({data:e})=>e)),"v-6863cc9e":()=>a.e(53563).then(a.bind(a,49250)).then((({data:e})=>e)),"v-f0d4733a":()=>a.e(75828).then(a.bind(a,14970)).then((({data:e})=>e)),"v-15dd32d2":()=>a.e(75565).then(a.bind(a,82680)).then((({data:e})=>e)),"v-40c17b28":()=>a.e(81562).then(a.bind(a,47386)).then((({data:e})=>e)),"v-8b0e3c32":()=>a.e(33585).then(a.bind(a,28366)).then((({data:e})=>e)),"v-251c5e07":()=>a.e(19343).then(a.bind(a,91036)).then((({data:e})=>e)),"v-5edb8acc":()=>a.e(35267).then(a.bind(a,28115)).then((({data:e})=>e)),"v-6ed22e89":()=>a.e(36644).then(a.bind(a,89320)).then((({data:e})=>e)),"v-1127c682":()=>a.e(7216).then(a.bind(a,82114)).then((({data:e})=>e)),"v-bdbcba86":()=>a.e(15392).then(a.bind(a,68355)).then((({data:e})=>e)),"v-2a3f152e":()=>a.e(77407).then(a.bind(a,16739)).then((({data:e})=>e)),"v-b5cdbcca":()=>a.e(18202).then(a.bind(a,9499)).then((({data:e})=>e)),"v-0eb38230":()=>a.e(60581).then(a.bind(a,30780)).then((({data:e})=>e)),"v-6193fda3":()=>a.e(38087).then(a.bind(a,74035)).then((({data:e})=>e)),"v-85f3d8a2":()=>a.e(65838).then(a.bind(a,96693)).then((({data:e})=>e)),"v-cc37e3c8":()=>a.e(66619).then(a.bind(a,11027)).then((({data:e})=>e)),"v-697acf65":()=>a.e(41255).then(a.bind(a,99625)).then((({data:e})=>e)),"v-0db2b831":()=>a.e(30300).then(a.bind(a,58658)).then((({data:e})=>e)),"v-54dad760":()=>a.e(50003).then(a.bind(a,48861)).then((({data:e})=>e)),"v-76bd067c":()=>a.e(96746).then(a.bind(a,33962)).then((({data:e})=>e)),"v-552c52ec":()=>a.e(55028).then(a.bind(a,99038)).then((({data:e})=>e)),"v-9d4e28d0":()=>a.e(24129).then(a.bind(a,93760)).then((({data:e})=>e)),"v-73edba1e":()=>a.e(33294).then(a.bind(a,73520)).then((({data:e})=>e)),"v-05c4845f":()=>a.e(98763).then(a.bind(a,30224)).then((({data:e})=>e)),"v-abdb2784":()=>a.e(8758).then(a.bind(a,64941)).then((({data:e})=>e)),"v-7552317a":()=>a.e(63423).then(a.bind(a,35387)).then((({data:e})=>e)),"v-5e699f3b":()=>a.e(41608).then(a.bind(a,6752)).then((({data:e})=>e)),"v-d9322f3e":()=>a.e(66776).then(a.bind(a,37823)).then((({data:e})=>e)),"v-3f4e4c84":()=>a.e(96194).then(a.bind(a,2554)).then((({data:e})=>e)),"v-8fb6e956":()=>a.e(39815).then(a.bind(a,12099)).then((({data:e})=>e)),"v-736c2f7c":()=>a.e(43740).then(a.bind(a,77483)).then((({data:e})=>e)),"v-ca4d7154":()=>a.e(40819).then(a.bind(a,7060)).then((({data:e})=>e)),"v-dc56542c":()=>a.e(81080).then(a.bind(a,71970)).then((({data:e})=>e)),"v-82e4faac":()=>a.e(73272).then(a.bind(a,14190)).then((({data:e})=>e)),"v-4fb5d210":()=>a.e(8034).then(a.bind(a,22618)).then((({data:e})=>e)),"v-8b49ba9e":()=>a.e(33867).then(a.bind(a,49923)).then((({data:e})=>e)),"v-12795dd8":()=>a.e(70794).then(a.bind(a,24100)).then((({data:e})=>e)),"v-56594599":()=>a.e(93620).then(a.bind(a,15823)).then((({data:e})=>e)),"v-b7e7ef7a":()=>a.e(33964).then(a.bind(a,68882)).then((({data:e})=>e)),"v-a913c376":()=>a.e(28576).then(a.bind(a,90963)).then((({data:e})=>e)),"v-2904d6b6":()=>a.e(51990).then(a.bind(a,33123)).then((({data:e})=>e)),"v-04ea2b32":()=>a.e(33210).then(a.bind(a,48705)).then((({data:e})=>e)),"v-6ed03c7c":()=>a.e(49330).then(a.bind(a,9729)).then((({data:e})=>e)),"v-0500ab2c":()=>a.e(76992).then(a.bind(a,72065)).then((({data:e})=>e)),"v-20f0ad21":()=>a.e(20011).then(a.bind(a,85746)).then((({data:e})=>e)),"v-168cefd2":()=>a.e(95875).then(a.bind(a,86622)).then((({data:e})=>e)),"v-7a51ec1b":()=>a.e(45631).then(a.bind(a,74439)).then((({data:e})=>e)),"v-3e54ab50":()=>a.e(67441).then(a.bind(a,78041)).then((({data:e})=>e)),"v-02dacd5e":()=>a.e(22273).then(a.bind(a,29494)).then((({data:e})=>e)),"v-71dc7f0c":()=>a.e(31908).then(a.bind(a,57452)).then((({data:e})=>e)),"v-5333caa4":()=>a.e(69293).then(a.bind(a,64627)).then((({data:e})=>e)),"v-3fa85cfa":()=>a.e(58380).then(a.bind(a,90474)).then((({data:e})=>e)),"v-69b33c5e":()=>a.e(46583).then(a.bind(a,37297)).then((({data:e})=>e)),"v-a1ab80fe":()=>a.e(40070).then(a.bind(a,98145)).then((({data:e})=>e)),"v-3291128b":()=>a.e(59345).then(a.bind(a,20113)).then((({data:e})=>e)),"v-69be0f1d":()=>a.e(48359).then(a.bind(a,61771)).then((({data:e})=>e)),"v-e3e99664":()=>a.e(99973).then(a.bind(a,80934)).then((({data:e})=>e)),"v-503fc08f":()=>a.e(75612).then(a.bind(a,1796)).then((({data:e})=>e)),"v-085d06ce":()=>a.e(84996).then(a.bind(a,24626)).then((({data:e})=>e)),"v-9555e3d8":()=>a.e(63251).then(a.bind(a,18129)).then((({data:e})=>e)),"v-527c4b9c":()=>a.e(84023).then(a.bind(a,93899)).then((({data:e})=>e)),"v-5717d036":()=>a.e(10045).then(a.bind(a,11043)).then((({data:e})=>e)),"v-a2ff4f38":()=>a.e(70005).then(a.bind(a,31648)).then((({data:e})=>e)),"v-38389ece":()=>a.e(20397).then(a.bind(a,40040)).then((({data:e})=>e)),"v-846c5f62":()=>a.e(28903).then(a.bind(a,63687)).then((({data:e})=>e)),"v-6383d537":()=>a.e(23404).then(a.bind(a,59777)).then((({data:e})=>e)),"v-6b707689":()=>a.e(74842).then(a.bind(a,14042)).then((({data:e})=>e)),"v-1737c155":()=>a.e(16213).then(a.bind(a,96898)).then((({data:e})=>e)),"v-fa26e920":()=>a.e(71508).then(a.bind(a,11530)).then((({data:e})=>e)),"v-0bbf52f1":()=>a.e(82371).then(a.bind(a,78185)).then((({data:e})=>e)),"v-fe14c97c":()=>a.e(90859).then(a.bind(a,27987)).then((({data:e})=>e)),"v-f3d7b5c2":()=>a.e(29810).then(a.bind(a,73547)).then((({data:e})=>e)),"v-3520260c":()=>a.e(6889).then(a.bind(a,47613)).then((({data:e})=>e)),"v-914cf70e":()=>a.e(71165).then(a.bind(a,25322)).then((({data:e})=>e)),"v-2f07a0ec":()=>a.e(15194).then(a.bind(a,98576)).then((({data:e})=>e)),"v-77dfa475":()=>a.e(1618).then(a.bind(a,28386)).then((({data:e})=>e)),"v-dfcdc6ac":()=>a.e(29202).then(a.bind(a,52163)).then((({data:e})=>e)),"v-495c4178":()=>a.e(64725).then(a.bind(a,82630)).then((({data:e})=>e)),"v-02c46aa2":()=>a.e(87461).then(a.bind(a,57333)).then((({data:e})=>e)),"v-37a4494f":()=>a.e(64330).then(a.bind(a,69218)).then((({data:e})=>e)),"v-64df0368":()=>a.e(96015).then(a.bind(a,32069)).then((({data:e})=>e)),"v-6a524625":()=>a.e(95282).then(a.bind(a,73235)).then((({data:e})=>e)),"v-aa51ae56":()=>a.e(85940).then(a.bind(a,49040)).then((({data:e})=>e)),"v-2e7dea7f":()=>a.e(51033).then(a.bind(a,7276)).then((({data:e})=>e)),"v-2ef83302":()=>a.e(77716).then(a.bind(a,94775)).then((({data:e})=>e)),"v-613200d5":()=>a.e(6767).then(a.bind(a,80719)).then((({data:e})=>e)),"v-39354ab9":()=>a.e(9319).then(a.bind(a,4932)).then((({data:e})=>e)),"v-4bdde895":()=>a.e(51715).then(a.bind(a,65992)).then((({data:e})=>e)),"v-1aa63c24":()=>a.e(75088).then(a.bind(a,68760)).then((({data:e})=>e)),"v-19bac6b0":()=>a.e(80580).then(a.bind(a,85657)).then((({data:e})=>e)),"v-377c72d8":()=>a.e(56904).then(a.bind(a,38006)).then((({data:e})=>e)),"v-294a69a9":()=>a.e(70917).then(a.bind(a,68331)).then((({data:e})=>e)),"v-9c3d27b8":()=>a.e(244).then(a.bind(a,34625)).then((({data:e})=>e)),"v-10e0f22a":()=>a.e(16692).then(a.bind(a,47906)).then((({data:e})=>e)),"v-05364be3":()=>a.e(53445).then(a.bind(a,21425)).then((({data:e})=>e)),"v-70a3bfcc":()=>a.e(64462).then(a.bind(a,69333)).then((({data:e})=>e)),"v-057fb76c":()=>a.e(77635).then(a.bind(a,824)).then((({data:e})=>e)),"v-2732ecf7":()=>a.e(45166).then(a.bind(a,71468)).then((({data:e})=>e)),"v-df09066a":()=>a.e(62154).then(a.bind(a,93315)).then((({data:e})=>e)),"v-25ebcb39":()=>a.e(41865).then(a.bind(a,77506)).then((({data:e})=>e)),"v-29557c77":()=>a.e(78825).then(a.bind(a,15144)).then((({data:e})=>e)),"v-42ee2dc8":()=>a.e(46326).then(a.bind(a,80387)).then((({data:e})=>e)),"v-eb020bc4":()=>a.e(19273).then(a.bind(a,96725)).then((({data:e})=>e)),"v-7ae696f6":()=>a.e(99494).then(a.bind(a,75714)).then((({data:e})=>e)),"v-50dbe7bd":()=>a.e(60561).then(a.bind(a,2024)).then((({data:e})=>e)),"v-8e18f4c0":()=>a.e(52530).then(a.bind(a,52465)).then((({data:e})=>e)),"v-90b6cce8":()=>a.e(28074).then(a.bind(a,25724)).then((({data:e})=>e)),"v-2c849aa3":()=>a.e(44945).then(a.bind(a,85478)).then((({data:e})=>e)),"v-7ab25e78":()=>a.e(31931).then(a.bind(a,18268)).then((({data:e})=>e)),"v-dda22454":()=>a.e(67851).then(a.bind(a,63624)).then((({data:e})=>e)),"v-3f26ee9f":()=>a.e(22595).then(a.bind(a,43785)).then((({data:e})=>e)),"v-4223ff1b":()=>a.e(6065).then(a.bind(a,19985)).then((({data:e})=>e)),"v-4f4a2656":()=>a.e(76668).then(a.bind(a,42399)).then((({data:e})=>e)),"v-17516ae3":()=>a.e(92027).then(a.bind(a,93654)).then((({data:e})=>e)),"v-7f0062a8":()=>a.e(19059).then(a.bind(a,75638)).then((({data:e})=>e)),"v-7b96b16a":()=>a.e(68420).then(a.bind(a,31436)).then((({data:e})=>e)),"v-329352dc":()=>a.e(84645).then(a.bind(a,10887)).then((({data:e})=>e)),"v-4490e0bb":()=>a.e(99235).then(a.bind(a,57356)).then((({data:e})=>e)),"v-8b6178d4":()=>a.e(57446).then(a.bind(a,87464)).then((({data:e})=>e)),"v-337ba44e":()=>a.e(81738).then(a.bind(a,55388)).then((({data:e})=>e)),"v-3b947ce7":()=>a.e(57789).then(a.bind(a,99936)).then((({data:e})=>e)),"v-c2caa64a":()=>a.e(53904).then(a.bind(a,53293)).then((({data:e})=>e)),"v-e799500a":()=>a.e(57948).then(a.bind(a,74517)).then((({data:e})=>e)),"v-e924b50e":()=>a.e(73583).then(a.bind(a,23344)).then((({data:e})=>e)),"v-7e0bbed8":()=>a.e(9965).then(a.bind(a,8448)).then((({data:e})=>e)),"v-2e3f2cd1":()=>a.e(95606).then(a.bind(a,98585)).then((({data:e})=>e)),"v-1ec6cfe2":()=>a.e(97907).then(a.bind(a,51415)).then((({data:e})=>e)),"v-114d586d":()=>a.e(85340).then(a.bind(a,93487)).then((({data:e})=>e)),"v-21d4b770":()=>a.e(45135).then(a.bind(a,86011)).then((({data:e})=>e)),"v-2d8f8dfc":()=>a.e(25741).then(a.bind(a,88494)).then((({data:e})=>e)),"v-e6dd9e0a":()=>a.e(43501).then(a.bind(a,87668)).then((({data:e})=>e)),"v-7cb1314d":()=>a.e(98386).then(a.bind(a,72114)).then((({data:e})=>e)),"v-3706649a":()=>a.e(20088).then(a.bind(a,21801)).then((({data:e})=>e)),"v-5bc93818":()=>a.e(54498).then(a.bind(a,42577)).then((({data:e})=>e)),"v-744d024e":()=>a.e(19146).then(a.bind(a,86041)).then((({data:e})=>e)),"v-e52c881c":()=>a.e(39544).then(a.bind(a,77605)).then((({data:e})=>e)),"v-75ed4ea4":()=>a.e(34386).then(a.bind(a,15577)).then((({data:e})=>e)),"v-2897d318":()=>a.e(78441).then(a.bind(a,45802)).then((({data:e})=>e)),"v-154dc4c4":()=>a.e(90159).then(a.bind(a,62988)).then((({data:e})=>e)),"v-01560935":()=>a.e(90493).then(a.bind(a,90677)).then((({data:e})=>e)),"v-43d7543a":()=>a.e(76667).then(a.bind(a,64303)).then((({data:e})=>e)),"v-84f914f4":()=>a.e(99414).then(a.bind(a,91888)).then((({data:e})=>e)),"v-5f7f7ebf":()=>a.e(98668).then(a.bind(a,63023)).then((({data:e})=>e)),"v-1daa6b4d":()=>a.e(64943).then(a.bind(a,69989)).then((({data:e})=>e)),"v-4f7b1987":()=>a.e(68743).then(a.bind(a,69747)).then((({data:e})=>e)),"v-60379330":()=>a.e(12025).then(a.bind(a,77426)).then((({data:e})=>e)),"v-9c48d85a":()=>a.e(24689).then(a.bind(a,19048)).then((({data:e})=>e)),"v-17343014":()=>a.e(36123).then(a.bind(a,8981)).then((({data:e})=>e)),"v-2ae54282":()=>a.e(31413).then(a.bind(a,65902)).then((({data:e})=>e)),"v-755965f0":()=>a.e(71300).then(a.bind(a,38950)).then((({data:e})=>e)),"v-b749fb9c":()=>a.e(51869).then(a.bind(a,85885)).then((({data:e})=>e)),"v-a0ba2788":()=>a.e(96787).then(a.bind(a,91183)).then((({data:e})=>e)),"v-65f6d381":()=>a.e(36177).then(a.bind(a,98128)).then((({data:e})=>e)),"v-b302da92":()=>a.e(41186).then(a.bind(a,13998)).then((({data:e})=>e)),"v-e9c7e408":()=>a.e(43358).then(a.bind(a,63065)).then((({data:e})=>e)),"v-551fb564":()=>a.e(4547).then(a.bind(a,59962)).then((({data:e})=>e)),"v-e2bac56c":()=>a.e(36745).then(a.bind(a,99650)).then((({data:e})=>e)),"v-551de488":()=>a.e(80867).then(a.bind(a,23802)).then((({data:e})=>e)),"v-65efd6b5":()=>a.e(73087).then(a.bind(a,70841)).then((({data:e})=>e)),"v-7cfd563e":()=>a.e(65814).then(a.bind(a,69492)).then((({data:e})=>e)),"v-fd3344d8":()=>a.e(22338).then(a.bind(a,58555)).then((({data:e})=>e)),"v-14748cc9":()=>a.e(27009).then(a.bind(a,89203)).then((({data:e})=>e)),"v-5839c72f":()=>a.e(94581).then(a.bind(a,10115)).then((({data:e})=>e)),"v-801db588":()=>a.e(92048).then(a.bind(a,38084)).then((({data:e})=>e)),"v-d37ff7f0":()=>a.e(76824).then(a.bind(a,83645)).then((({data:e})=>e)),"v-56fbf552":()=>a.e(88277).then(a.bind(a,6309)).then((({data:e})=>e)),"v-78cbe7bb":()=>a.e(23146).then(a.bind(a,1315)).then((({data:e})=>e)),"v-b310d42a":()=>a.e(20156).then(a.bind(a,83046)).then((({data:e})=>e)),"v-6c5e4d32":()=>a.e(1757).then(a.bind(a,58224)).then((({data:e})=>e)),"v-50ae161a":()=>a.e(41866).then(a.bind(a,37321)).then((({data:e})=>e)),"v-5904f150":()=>a.e(36471).then(a.bind(a,75525)).then((({data:e})=>e)),"v-484552dc":()=>a.e(38963).then(a.bind(a,31042)).then((({data:e})=>e)),"v-65ee2aa4":()=>a.e(61336).then(a.bind(a,5688)).then((({data:e})=>e)),"v-2831124d":()=>a.e(84305).then(a.bind(a,7904)).then((({data:e})=>e)),"v-b3bd56da":()=>a.e(53831).then(a.bind(a,92184)).then((({data:e})=>e)),"v-4b0ad344":()=>a.e(1827).then(a.bind(a,1057)).then((({data:e})=>e)),"v-581e04cc":()=>a.e(5746).then(a.bind(a,92637)).then((({data:e})=>e)),"v-12cb3644":()=>a.e(82260).then(a.bind(a,74522)).then((({data:e})=>e)),"v-2dcc8639":()=>a.e(78187).then(a.bind(a,45131)).then((({data:e})=>e)),"v-3fb58c9e":()=>a.e(98064).then(a.bind(a,3927)).then((({data:e})=>e)),"v-284efd1e":()=>a.e(52149).then(a.bind(a,49819)).then((({data:e})=>e)),"v-2953cd2f":()=>a.e(94820).then(a.bind(a,15308)).then((({data:e})=>e)),"v-c7bf80f0":()=>a.e(76981).then(a.bind(a,47617)).then((({data:e})=>e)),"v-288e2c56":()=>a.e(28884).then(a.bind(a,2367)).then((({data:e})=>e)),"v-a26e9aaa":()=>a.e(87778).then(a.bind(a,46895)).then((({data:e})=>e)),"v-54f4d5c2":()=>a.e(47082).then(a.bind(a,28570)).then((({data:e})=>e)),"v-3891cf12":()=>a.e(55072).then(a.bind(a,5475)).then((({data:e})=>e)),"v-b3142c4c":()=>a.e(25146).then(a.bind(a,91439)).then((({data:e})=>e))}},84634:(e,t,a)=>{a.d(t,{g:()=>d});var n=a(74393);const d=[["v-8daa1a0e","/",{title:"主页",icon:"home",type:"home",readingTime:{minutes:0,words:0},excerpt:"",date:"2022-04-19T02:56:12.000Z"},["/index.html","/README.md"]],["v-146a1089","/code/",{title:"代码笔记",icon:"code",type:"page",readingTime:{minutes:.38,words:113},excerpt:"<p>此处是 Shimon Zhan 存放的一些代码笔记。</p>\n",date:"2022-04-19T02:56:12.000Z"},["/code/index.html","/code/README.md"]],["v-15054f24","/note/",{title:"杂谈",icon:"edit",type:"page",readingTime:{minutes:.08,words:25},excerpt:"欢迎来到杂谈，这里主要分享我生活上的感想。 目录 欢迎页;",date:"2022-04-19T02:56:12.000Z"},["/note/index.html","/note/README.md"]],["v-7ff04f35","/note/helloworld.html",{title:"Hello World",icon:"note",type:"article",readingTime:{minutes:.22,words:66},excerpt:"Hello World 这是本站的第一篇博客，欢迎大家访问。🌹 這是本站的第一篇博客，歡迎大家訪問。🌹 This is the first blog of this site, welcome to visit. 🌹 このサイトの最初のブログは、訪問を歓迎します。🌹 Le premier blog de ce site vous invite à l",date:"2022-04-19T02:56:12.000Z",category:["vuepress"],tag:["hello world"]},["/note/helloworld","/note/helloworld.md"]],["v-f785aee2","/software/",{title:"软件教程",icon:"software",type:"page",readingTime:{minutes:.33,words:100},excerpt:"团队协作 开发项目的代码版本管理以及多人协作使用 Git 软件 Git 教程; GitHub 介绍; 数据库MySQL MySQL 是最流行的关系型数据库管理系统之一，在 WEB 应用方面，MySQL是最好的 RDBMS (Relational Database Management System，关系数据库管理系统) 应用软件之一。 MySQL 介绍; 后",date:"2022-04-19T07:13:07.000Z"},["/software/index.html","/software/README.md"]],["v-6eec2164","/software/nginx.html",{title:"Nginx",icon:"nginx",type:"article",readingTime:{minutes:6.95,words:2085},excerpt:"<p>Nginx 是一个高性能的 HTTP 和反向代理服务器，也是一个 IMAP / POP3 / SMTP 代理服务器。其特点是占有内存少，并发能力强，稳定性高，并且 Nginx 也拥有友好灵活的配置。</p>\n",date:"2019-12-13T00:00:00.000Z",category:["服务器"]},["/software/nginx","/software/nginx.md"]],["v-20955d24","/code/language/",{title:"代码学习教程",icon:"read",type:"article",readingTime:{minutes:.26,words:77},excerpt:"如何学习一门语言; 教程目录 JavaScript 教程; TypeScript 教程; Python 教程 (编写中...); Java 教程(廖雪峰的博客); Markdown 教程; YAML 教程; JSON 教程; Linter Linter 介绍; C 、C++、Java、PHP 正在编写中...",date:"2022-04-19T07:13:07.000Z",category:["教程"],star:!0},["/code/language/index.html","/code/language/README.md"]],["v-5b2dfc66","/code/language/learning.html",{title:"如何学习一门计算机语言",icon:"ask",type:"article",readingTime:{minutes:4.82,words:1447},excerpt:"如何学习一门计算机语言 学习一门语言的基本顺序是: 了解数据结构; 了解变量声明与赋值; 了解判断和循环体结构; 了解函数声明; 了解输入输出; 本部分将以 JS 作为示例，展示什么是一门计算机语言，应该如何学习它们。 基础 首先，任何语言都是由一些基本结构组成的，下面介绍几乎所有语言共有的一些概念: 语句 语句可以简单理解为一个操作，它可以是赋值，也可以是",date:"2022-04-19T07:13:07.000Z",category:["教程"],tag:["快速上手"]},["/code/language/learning","/code/language/learning.md"]],["v-0e1a9384","/code/linux/",{title:"Linux",icon:"linux",type:"article",readingTime:{minutes:.45,words:134},excerpt:"Linux 教程 Linux 介绍; Linux 介绍; Linux 历史; Linux 编写语言; Linux 优势; Linux 桌面环境; Linux 文件; Linux 文件; Linux 目录; 挂载; Linux 命令; 命令格式简介; 目录相关; 文件相关; 其他命令; 命令的自动补全; 命令的执行; 环境变量; 创建链接; ubuntu 点击",date:"2019-11-15T00:00:00.000Z",category:["Linux"],star:!0},["/code/linux/index.html","/code/linux/README.md"]],["v-0bb5d56d","/code/linux/WSL.html",{title:"WSL",icon:"api",type:"article",readingTime:{minutes:.24,words:72},excerpt:"<p>WSL 可以直接在 Windows 系统上安装并运行 Linux。目前最新的版本是 WSL2。</p>\n",date:"2019-11-23T00:00:00.000Z",category:["Linux"]},["/code/linux/WSL","/code/linux/WSL.md"]],["v-6ad9dcc9","/code/linux/centos.html",{title:"CentOS 教程",icon:"centos",type:"article",readingTime:{minutes:.15,words:44},excerpt:"管理工具 yum (Centos 7); dnf (Centos 8); yarn 测试是否安装成功:",date:"2019-11-23T00:00:00.000Z",category:["Linux"]},["/code/linux/centos","/code/linux/centos.md"]],["v-34e5d755","/code/linux/ssh.html",{title:"ssh",icon:"mount",type:"article",readingTime:{minutes:.76,words:229},excerpt:"使用密码登录 1. 执行以下命令，连接 Linux 云服务器。 username 即为前提条件中获得的默认帐号。; hostname or IP address 为您的 Linux 实例公网 IP 或自定义域名。; 1. 输入已获取的密码，按 Enter，即可完成登录。 使用密钥登录 1. 执行以下命令，赋予私钥文件仅本人可读权限。 1. 执行以下命令，进行",date:"2019-11-23T00:00:00.000Z",category:["基础"]},["/code/linux/ssh","/code/linux/ssh.md"]],["v-264f3578","/code/node-js/",{title:"Node.js",icon:"nodeJS",type:"article",readingTime:{minutes:1.17,words:352},excerpt:"<p>Node.js 是一款全球使用广泛的框架，可以用在前端与后端上，拥有大量的模块。Node.js 主要以其丰富并及其容易导入的 Node.js package，以及其方便管理 npm (Node.js Package Manager)闻名。</p>\n",date:"2022-04-19T07:13:07.000Z",category:["Node.js"],tag:["Node.js","软件"]},["/code/node-js/index.html","/code/node-js/README.md"]],["v-647e802c","/code/node-js/environment.html",{title:"搭建 Node 开发环境",icon:"leaf",type:"article",readingTime:{minutes:1.15,words:346},excerpt:"<p>由于 Node.js 需要编码、运行、调试，我们需要一个 IDE 集成开发环境，这样就可以大大提升开发效率。综合考察后，Shimon Zhan 隆重向大家推荐 Node.js 集成开发环境: <strong>Visual Studio Code</strong>。它启动速度快，执行简单，调试方便这三点上。当然，免费使用是一个加分项。</p>\n",date:"2022-04-19T07:13:07.000Z",category:["Node.js"],tag:["Node.js","软件"]},["/code/node-js/environment","/code/node-js/environment.md"]],["v-285ff93c","/code/node-js/install.html",{title:"安装 Node.js",icon:"install",type:"article",readingTime:{minutes:3.07,words:922},excerpt:"<p>由于 Node.js 平台是在后端运行 JavaScript 代码，所以，必须首先在本机安装 Node.js 环境。</p>\n",date:"2022-04-19T07:13:07.000Z",category:["Node.js"],tag:["Node.js","软件","安装"]},["/code/node-js/install","/code/node-js/install.md"]],["v-6352c39e","/code/node-js/intro.html",{title:"Node.js",icon:"creative",type:"article",readingTime:{minutes:4.16,words:1247},excerpt:"<p>从本章开始，我们就正式开启 JavaScript 的后端开发之旅。</p>\n<p>Node.js 是目前非常火热的技术，但是它的诞生经历却很奇特。</p>\n",date:"2022-04-19T07:13:07.000Z",category:["Node.js"],tag:["Node.js","软件","介绍"]},["/code/node-js/intro","/code/node-js/intro.md"]],["v-18b1b3ae","/code/node-js/module.html",{title:"模块",icon:"module",type:"article",readingTime:{minutes:7.36,words:2207},excerpt:"<p>在计算机程序的开发过程中，随着程序代码越写越多，在一个文件里代码就会越来越长，越来越不容易维护。</p>\n<p>为了编写可维护的代码，我们把很多函数分组，分别放到不同的文件里，这样，每个文件包含的代码就相对较少，很多编程语言都采用这种组织代码的方式。在 Node.js 环境中，一个 <code v-pre>.js</code> 文件就称之为一个模块(module)。</p>\n<p>使用模块有什么好处?</p>\n<p>最大的好处是大大提高了代码的可维护性。其次，编写代码不必从零开始。当一个模块编写完毕，就可以被其他地方引用。我们在编写程序的时候，也经常引用其他模块，包括 Node.js 内置的模块和来自第三方的模块。</p>\n<p>使用模块还可以避免函数名和变量名冲突。相同名字的函数和变量完全可以分别存在不同的模块中，因此，我们自己在编写模块时，不必考虑名字会与其他模块冲突。</p>\n",date:"2022-04-19T07:13:07.000Z",category:["Node.js"],tag:["Node.js","软件"]},["/code/node-js/module","/code/node-js/module.md"]],["v-833997ce","/code/node-js/program.html",{title:"第一个 Node 程序",icon:"shell",type:"article",readingTime:{minutes:3.91,words:1174},excerpt:"<p>在前面的所有章节中，我们编写的 JavaScript 代码都是在浏览器中运行的，因此，我们可以直接在浏览器中敲代码，然后直接运行。</p>\n<p>从本章开始，我们编写的 JavaScript 代码将不能在浏览器环境中执行了，而是在 Node.js 环境中执行，因此，JavaScript 代码将直接在您的计算机上以命令行的方式运行，所以，我们要先选择一个文本编辑器来编写 JavaScript 代码，并且把它保存到本地硬盘的某个目录，才能够执行。</p>\n",date:"2022-04-19T07:13:07.000Z",category:["Node.js"],tag:["Node.js","软件"]},["/code/node-js/program","/code/node-js/program.md"]],["v-8eb7e91c","/code/vue/",{title:"Vue.js",icon:"vue",type:"article",readingTime:{minutes:1.61,words:482},excerpt:"目前此部分为 Vue 2 的文档，待 Vue 3 出官方中文文档后，本博客会进行跟进。 Vue.js 是世界上主流的渐近式 JavaScript 框架。其生态比较繁荣，且很多组件都由官方进行维护、同步更新。相比 React 虽然第三方组件及支持少一些，但是其各模块之间兼容性良好，不会发生冲突。 介绍视频 查看详情; 学习视频 查看详情; Vue.js 教程目",date:"2022-04-19T07:13:07.000Z",category:["基础"]},["/code/vue/index.html","/code/vue/README.md"]],["v-837c88f4","/code/vue/compare.html",{title:"Vue 与小程序的异同",icon:"compare",type:"article",readingTime:{minutes:3.25,words:975},excerpt:"<p>Vue-cli 提供的 vue 单文件语法与小程序基本相似，甚至可以说小程序是改变自 Vue 与 React 框架的。</p>\n",date:"2022-04-19T07:13:07.000Z",category:["Vue"],tag:["Vue","小程序","对比"]},["/code/vue/compare","/code/vue/compare.md"]],["v-ec405424","/code/vue/component.html",{title:"组件使用说明",icon:"plugin",type:"article",readingTime:{minutes:4.85,words:1456},excerpt:"<p>Shimon Zhan 已为 inNENU Website 开发了一些常规组件。本文介绍了这些组件的配置。</p>\n",date:"2022-04-19T07:13:07.000Z",category:["Vue"],tag:["文档"]},["/code/vue/component","/code/vue/component.md"]],["v-76da7cfe","/code/vue/get-started.html",{title:"快速上手 Vue.js",icon:"creative",type:"article",readingTime:{minutes:10.8,words:3239},excerpt:"Vue.js 是什么 观看本节视频讲解 起步 观看本节视频讲解 您应当已了解关于 HTML、CSS 和 JavaScript 的中级知识。 安装 尝试 Vue.js 最简单的方法是使用 JSFiddle 上的 Hello World 例子。您可以在浏览器新标签页中打开它，跟着例子学习一些基础用法。或者您也可以创建一个 .html 文件，然后通过如下方式引入 ",date:"2022-04-19T07:13:07.000Z",category:["Vue"],tag:["快速上手","基础"]},["/code/vue/get-started","/code/vue/get-started.md"]],["v-30ddd490","/code/vue/install.html",{title:"开发环境安装",icon:"install",type:"article",readingTime:{minutes:1.12,words:337},excerpt:"环境准备 VS Code 安装 安装 VS Code; 开发指南 1. 使用 VS Code 打开项目文件夹。 请打开 VS Code 选择菜单栏中的 “文件-打开文件夹”，或在文件夹上 “右键——使用 VS Code 打开” 或在文件夹内部空白处 “右键——使用 VS Code 打开”。 1. 打开终端(快捷键 Ctrl + \\ )。(反引号为 \\ ) 1",date:"2022-04-19T07:13:07.000Z",category:["Vue"],tag:["安装","基础"]},["/code/vue/install","/code/vue/install.md"]],["v-398bed5a","/code/vue/ts-decorator.html",{title:"在 Vue 中使用 Typescript",icon:"typescript",type:"article",readingTime:{minutes:2.47,words:740},excerpt:"使用 TypeScript 进行 Vue 开发 在使用 Typescript 进行 Vue2.X 版本开发时，需要引入 vue-property-decorator 这个包进行开发。 本质上就是写法上与 js 有所不同，而且需要额外注明变量的类型。 用法 有 7 个装饰器和 1 个功能(Mixin): @Emit; @Inject; @Model; @Pro",date:"2022-04-19T07:13:07.000Z",category:["基础"],tag:["TypeScript"]},["/code/vue/ts-decorator","/code/vue/ts-decorator.md"]],["v-3725077a","/code/vue/ts-demo.html",{title:"TypeScript 组件 Demo",icon:"discover",type:"article",readingTime:{minutes:2.79,words:838},excerpt:"TypeScript 组件 Demo BaseList.vue 组件: 在本组件中，js 里 props 的写法变成了 @Prop()，同时 compute 属性变成了 get，methods 和生命周期一同直接写在了类中。",date:"2022-04-19T07:13:07.000Z",category:["基础"],tag:["TypeScript"]},["/code/vue/ts-demo","/code/vue/ts-demo.md"]],["v-ec0e16f6","/code/vue/vue.html",{title:"Vue 单文件组件说明",icon:"vue",type:"article",readingTime:{minutes:1.69,words:507},excerpt:'Vue 单文件组件说明 Vue 文件即是一个组件文件，组件文件既可以成为其他 vue 文件的一个组件，又可以添加到 router 中成为一个页面视图。 Vue 文件主要由三部分构成: template 对应网站视图树，即 HTML 部分; script 对应网站的脚本。即 js 部分，默认为 Javascript，可以添加 lang="ts" 来指定页面脚本',date:"2022-04-19T07:13:07.000Z",category:["Vue"]},["/code/vue/vue","/code/vue/vue.md"]],["v-ff88ab06","/code/website/",{title:"网页入门",icon:"network",type:"article",readingTime:{minutes:2.69,words:808},excerpt:"<p>网页需要三件套: <strong>HTML</strong>、<strong>CSS</strong> 和 <strong>JavaScript</strong>。</p>\n<ol>\n<li>HTML 定义了网页的内容</li>\n<li>CSS 描述了网页的样式</li>\n<li>JavaScript 编写网页的行为</li>\n</ol>\n",date:"2019-09-01T00:00:00.000Z",category:["前端"],tag:["网页","介绍"],star:!0},["/code/website/index.html","/code/website/README.md"]],["v-a128f5ea","/code/website/https.html",{title:"Http 与 Https 介绍",icon:"http",type:"article",readingTime:{minutes:5.6,words:1679},excerpt:"什么是 HTTP 协议 HTTP 协议全称 Hyper Text Transfer Protocol，翻译过来就是超文本传输协议，位于 TCP/IP 四层模型当中的应用层。 HTTP 协议通过 请求/响应 的方式，在客户端和服务端之间进行通信。 这一切看起来很美好，但是 HTTP 协议有一个致命的缺点: 不够安全。 HTTP 协议的信息传输完全以明文方式，不",author:"小灰",date:"2019-11-03T00:00:00.000Z"},["/code/website/https","/code/website/https.md"]],["v-7321cfda","/code/website/js.html",{title:"JavaScript 教程",icon:"javascript",type:"article",readingTime:{minutes:.55,words:165},excerpt:"初学者教程 快速上手; JavaScript 手册 JavaScript 学习教程; 在线教程 MDN 教程; W3School 教程; 菜鸟教程; ES6 ES6 是 JavaScript 的 2015 标注，现已基本被广泛使用和支持； ES6 教程; 此教程由阮一峰老师书写(真·大佬)，建议深刻理解 JavaScript 原理(大概一年左右)之后再看。 ",date:"2019-09-01T00:00:00.000Z",category:["JavaScript"]},["/code/website/js","/code/website/js.md"]],["v-5978b3ac","/software/git/",{title:"Git",icon:"git",type:"article",readingTime:{minutes:.95,words:286},excerpt:'<p>Git 是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。在开发中分布式文件管理系统，可以便于多人协作开发。</p>\n<div class="custom-container info"><p class="custom-container-title">交互式学习</p>\n<p>如果您觉得本文太枯燥，这里有一个 <a href="http://learngitbranching.js.org/" target="_blank" rel="noopener noreferrer">交互式的分支演示与学习网站<ExternalLinkIcon/></a>。您可以在这里领略 Git 的魅力。</p>\n<p>但 Shimon Zhan 仍建议您操作完再系统的学习并阅读以下内容。</p>\n</div>\n',date:"2022-04-19T07:13:07.000Z",category:["Git"],tag:["Git","软件"]},["/software/git/index.html","/software/git/README.md"]],["v-a0a24d6a","/software/git/branch.html",{title:"分支管理",icon:"branch",type:"article",readingTime:{minutes:22.89,words:6866},excerpt:"概述 分支就是科幻电影里面的平行宇宙，当您正在电脑前努力学习 Git 的时候，另一个您正在另一个平行宇宙里努力学习 SVN。 如果两个平行宇宙互不干扰，那对现在的您也没啥影响。不过，在某个时间点，两个平行宇宙合并了，结果，您既学会了 Git 又学会了 SVN! 分支在实际中有什么用呢? 假设您准备开发一个新功能，但是需要两周才能完成，第一周您写了 50% 的",author:"廖雪峰",date:"2022-04-19T07:13:07.000Z",category:["Git"],tag:["Git","软件"]},["/software/git/branch","/software/git/branch.md"]],["v-efa0f806","/software/git/change.html",{title:"修改管理",icon:"change",type:"article",readingTime:{minutes:7.76,words:2329},excerpt:"管理修改 Git 比其他版本控制系统设计得优秀，因为 Git 跟踪并管理的是修改，而非文件。 您会问，什么是修改? 比如您新增了一行，这就是一个修改，删除了一行，也是一个修改，更改了某些字符，也是一个修改，删了一些又加了一些，也是一个修改，甚至创建一个新文件，也算一个修改。 为什么说 Git 管理的是修改，而不是文件呢? 我们还是做实验。第一步，对 read",author:"廖雪峰",date:"2022-04-19T07:13:07.000Z",category:["Git"],tag:["Git","软件"]},["/software/git/change","/software/git/change.md"]],["v-2fe790c2","/software/git/create-repo.html",{title:"Git 仓库",icon:"repo",type:"article",readingTime:{minutes:3.83,words:1149},excerpt:"<p>什么是仓库呢? 英文名<strong>repository</strong>，您可以简单理解成一个目录，这个目录里面的所有文件都可以被 Git 管理起来，每个文件的修改、删除， Git 都能跟踪，以便任何时刻都可以追踪历史，或者在将来某个时刻可以“还原”。</p>\n",author:"廖雪峰",date:"2022-04-19T07:13:07.000Z",category:["Git"],tag:["Git","软件"]},["/software/git/create-repo","/software/git/create-repo.md"]],["v-fe4c8648","/software/git/custom.html",{title:"自定义 Git",icon:"skin",type:"article",readingTime:{minutes:2.5,words:751},excerpt:"在安装 Git 一节中，我们已经配置了 user.name 和 user.email，实际上，Git 还有很多可配置项。 比如，让 Git 显示颜色，会让命令输出看起来更醒目: 这样，Git 会适当地显示不同的颜色，比如 git status 命令，文件名就会标上颜色。 配置别名 有没有经常敲错命令? 比如 git status? status 这个单词真心",author:"廖雪峰",date:"2022-04-19T07:13:07.000Z",category:["Git"],tag:["Git","软件"]},["/software/git/custom","/software/git/custom.md"]],["v-14d32906","/software/git/gitLFS.html",{title:"Git Large File Storage",icon:"Github",type:"article",readingTime:{minutes:.4,words:120},excerpt:"Git Large File Storage Git Large File Storage (LFS) replaces large files such as audio samples, videos, datasets, and graphics with text pointers inside Git, while storing the file",date:"2022-04-19T07:13:07.000Z",category:["Git"],tag:["Git","软件"]},["/software/git/gitLFS","/software/git/gitLFS.md"]],["v-46819f1b","/software/git/ignore.html",{title:"忽略特殊文件",icon:"skin",type:"article",readingTime:{minutes:4.13,words:1238},excerpt:"有些时候，您必须把某些文件放到 Git 工作目录中，但又不能提交它们，比如保存了数据库密码的配置文件啦，等等，每次 git status 都会显示 Untracked files ...，有强迫症的童鞋心里肯定不爽。 好在 Git 考虑到了大家的感受，这个问题解决起来也很简单，在 Git 工作区的根目录下创建一个特殊的 .gitignore 文件，然后把要忽",author:"廖雪峰",date:"2022-04-19T07:13:07.000Z",category:["Git"],tag:["Git","软件"]},["/software/git/ignore","/software/git/ignore.md"]],["v-39a5f5ca","/software/git/install.html",{title:"安装与配置",icon:"install",type:"article",readingTime:{minutes:3.48,words:1045},excerpt:"Git 下载 官网在国外，网速较慢。在安装 Git 前推荐安装好 VS Code。 官网下载; Git 的安装 1. 同意协议并选择安装位置 (不建议更改安装位置) 1. 启用 LFS 支持，其他随意 (影响不大) 1. 自行决定是否创建启动菜单 1. 选择使用 VS Code 作为 git 的默认编辑器。 1. 选择 Git 使用的默认分支名，GitHub",date:"2022-04-19T07:13:07.000Z",category:["Git"],tag:["Git","软件","安装"]},["/software/git/install","/software/git/install.md"]],["v-1e560a99","/software/git/intro.html",{title:"Git 介绍",icon:"creative",type:"article",readingTime:{minutes:7,words:2099},excerpt:"<p>Git 是什么?</p>\n<p>Git 是目前世界上最先进的分布式版本控制系统(没有之一)。</p>\n",author:"Shimon Zhan & 廖雪峰",date:"2022-04-19T07:13:07.000Z",category:["Git"],tag:["Git","软件"]},["/software/git/intro","/software/git/intro.md"]],["v-5b44553c","/software/git/recall.html",{title:"撤销操作",icon:"return",type:"article",readingTime:{minutes:1.54,words:461},excerpt:"在任何一个阶段，您都有可能想要撤消某些操作。这里，我们将会学习几个撤消您所做修改的基本工具。注 意，有些撤消操作是不可逆的。这是在使用 Git 的过程中，会因为操作失误而导致之前的工作丢失的少有的几个 地方之一。 有时候我们提交完了才发现漏掉了几个文件没有添加，或者提交信息写错了。此时，可以运行带有 --amend 选 项的提交命令来重新提交: 这个命令会将",date:"2022-04-19T07:13:07.000Z",category:["Git"],tag:["Git","软件"]},["/software/git/recall","/software/git/recall.md"]],["v-6f810d27","/software/git/remote.html",{title:"远程仓库",icon:"remote",type:"article",readingTime:{minutes:10.72,words:3216},excerpt:"什么是远程仓库 Git 是分布式版本控制系统，同一个 Git 仓库，可以分布到不同的机器上。怎么分布呢? 最早，肯定只有一台机器有一个原始版本库，此后，别的机器可以“克隆”这个原始版本库，而且每台机器的版本库其实都是一样的，并没有主次之分。 实际情况往往是这样，找一台电脑充当服务器的角色，每天 24 小时开机，其他每个人都从这个“服务器”仓库克隆一份到自己的",author:"廖雪峰",date:"2022-04-19T07:13:07.000Z",category:["Git"],tag:["Git","软件"]},["/software/git/remote","/software/git/remote.md"]],["v-6f792996","/software/git/reset.html",{title:"版本回退",icon:"return",type:"article",readingTime:{minutes:4.88,words:1463},excerpt:"修改 readme.txt 文件如下: 然后尝试提交: 像这样不断对文件进行修改，然后不断提交修改到版本库里，每当文件修改到一定程度的时候，就可以“保存一个快照”，这个快照在 Git 中被称为 commit。如果把文件改乱了，或者误删了文件，还可以从最近的一个 commit 恢复，然后继续工作，而不是把几个月的工作成果全部丢失。 现在，我们回顾一下 read",author:"廖雪峰",date:"2022-04-19T07:13:07.000Z",category:["Git"],tag:["Git","软件"]},["/software/git/reset","/software/git/reset.md"]],["v-84d4a76c","/software/git/server.html",{title:"服务器搭建",icon:"network",type:"article",readingTime:{minutes:2.91,words:872},excerpt:"<p>在远程仓库一节中，我们讲了远程仓库实际上和本地仓库没啥不同，纯粹为了 7x24 小时开机并交换大家的修改。</p>\n<p>GitHub 就是一个免费托管代码的远程仓库。但是对于某些视源代码如生命的商业公司来说，不想将源代码提交给任何第三方，这种情况下，就需要搭建 Git 服务器。</p>\n",date:"2022-04-19T07:13:07.000Z",category:["Git"],tag:["Git","软件"]},["/software/git/server","/software/git/server.md"]],["v-94a3be0a","/software/git/status.html",{title:"纵向查看",icon:"list",type:"article",readingTime:{minutes:2.59,words:778},excerpt:"我们已经成功地添加并提交了一个 readme.txt 文件，继续修改 readme.txt 文件，改成如下内容: 现在，运行 git status 命令看看结果: git status 命令可以输出仓库当前的状态，上面的命令输出告诉我们，readme.txt 被修改过了，但还没有准备提交的修改。 tip 简介输出 git status 命令的输出十分详细，但",author:"廖雪峰",date:"2022-04-19T07:13:07.000Z",category:["Git"],tag:["Git","软件"]},["/software/git/status","/software/git/status.md"]],["v-ae5d0daa","/software/git/tag.html",{title:"标签管理",icon:"tag",type:"article",readingTime:{minutes:3.94,words:1181},excerpt:"为什么要有 tag 发布一个版本时，我们通常先在版本库中打一个标签 (tag)，这样，就唯一确定了打标签时刻的版本。将来无论什么时候，取某个标签的版本，就是把那个打标签的时刻的历史版本取出来。所以，标签也是版本库的一个快照。 Git 的标签虽然是版本库的快照，但其实它就是指向某个 commit 的指针(跟分支很像对不对? 但是分支可以移动，标签不能移动)，所",author:"廖雪峰",date:"2022-04-19T07:13:07.000Z",category:["Git"],tag:["Git","软件"]},["/software/git/tag","/software/git/tag.md"]],["v-33492354","/software/git/working-directory.html",{title:"工作区和暂存区",icon:"workingDirectory",type:"article",readingTime:{minutes:2.12,words:636},excerpt:"<p>Git 和其他版本控制系统如 SVN 的一个不同之处就是有暂存区的概念。</p>\n",author:"廖雪峰",date:"2022-04-19T07:13:07.000Z",category:["Git"],tag:["Git","软件"]},["/software/git/working-directory","/software/git/working-directory.md"]],["v-a0440418","/software/git/working.html",{title:"Git 原理",icon:"creative",type:"article",readingTime:{minutes:4.85,words:1455},excerpt:"Git 究竟是怎样的一个系统呢? 尽管 Git 用起来与其它的版本控制系统非常相似，但它在对信息的存储和认知方式上却有很大差异。 直接记录快照，而非差异比较 Git 和其它版本控制系统(包括 Subversion 和近似工具)的主要差别在于 Git 对待数据的方法。从概念上来说，其它大部分系统以文件变更列表的方式存储信息，这类系统(CVS、Subversio",date:"2022-04-19T07:13:07.000Z",category:["Git"],tag:["Git","软件"]},["/software/git/working","/software/git/working.md"]],["v-355f6d86","/software/github/",{title:"GitHub",icon:"github",type:"article",readingTime:{minutes:2.48,words:743},excerpt:"快速上手 GitHub 介绍; Pull Request; 语义化提交; GitHub Pages; 利用 Gitee 加速 GitHub 克隆; 官方文档 全部文档; 入门指南 查看详情; 快速入门 设置 Git; 创建仓库; 复刻仓库; 社交化; 了解 GitHub 账户类型; GitHub 上的访问权限; GitHub 词汇表; 生态系统 GitHub",date:"2019-11-20T00:00:00.000Z",category:["GitHub"]},["/software/github/index.html","/software/github/README.md"]],["v-2272c6f5","/software/github/deploy.html",{title:"自动部署",icon:"network",type:"article",readingTime:{minutes:3.83,words:1150},excerpt:"<p>本文介绍如何利用 Git 和 GitHub Action，自动部署代码到服务器。</p>\n",date:"2022-04-19T07:13:07.000Z",category:["GitHub"],tag:["Git","deploy"]},["/software/github/deploy","/software/github/deploy.md"]],["v-7b009eea","/software/github/intro.html",{title:"GitHub 简介",icon:"info",type:"article",readingTime:{minutes:4.86,words:1459},excerpt:"GitHub 是世界上最大的 代码托管网站 :yum:当然在上面交友也是极好的(这是重点，圈起来要考的:sunglasses:)。 基本概念 repository 仓库。一个仓库即是一个项目。仓库是 GitHub 上的主要内容。每当您新建一个项目并想要在 GitHub。 Star 收藏。在每一个仓库主页的上方可以看到 star 按钮。其上的数值为收藏该项目的",date:"2019-11-20T00:00:00.000Z",category:["GitHub"],tag:["介绍"]},["/software/github/intro","/software/github/intro.md"]],["v-9b87a6dc","/software/github/pages.html",{title:"GitHub Pages",icon:"page",type:"article",readingTime:{minutes:3.03,words:909},excerpt:"<p>GitHub Pages 是静态站点托管服务，可直接从 GitHub 上的存储库中获取 HTML，CSS 和 JavaScript 文件，还可以选择在构建过程中运行这些文件并发布网站。</p>\n<p>您可以将站点托管在 GitHub 的 <code v-pre>github.io</code> 域名或您自己的自定义域名上。</p>\n",date:"2021-02-20T00:00:00.000Z",category:["GitHub"]},["/software/github/pages","/software/github/pages.md"]],["v-611eec3a","/software/github/pr.html",{title:"Pull Request",icon:"merge",type:"article",readingTime:{minutes:3.26,words:978},excerpt:"简介 对于一个用户的公开仓库，在默认情况下虽然其他用户可以拉取该库的代码，但是他们并不能够直接向这个库进行推送。 GitHub 是一个代码社区，这意味着鼓励大家互相提交与贡献代码。所以这就是 Fork 和 Pull Request 出现的意义。没有人会给一个陌生人添加访问自己仓库的权限，所以我们需要一种方式，能够让大家向仓库所有者发起贡献代码的请求。这就是 ",date:"2021-02-18T00:00:00.000Z",category:["GitHub"]},["/software/github/pr","/software/github/pr.md"]],["v-d4963e94","/software/github/semantic.html",{title:"语义化提交",icon:"semantic",type:"article",readingTime:{minutes:2.61,words:783},excerpt:"Semantic 对于一个大型项目，几千个 commit 是很常见的，这些 commit 部分是项目维护者提交的 commit，部分是一些热心的开发者通过 PR 贡献的。 无论是对于项目维护者，还是想要贡献代码的热心开发者来说，一个简洁明了的 commit 描述都是必不可少的。也就是说我们需要用尽可能简短的备注信息，备注每一个 commit 的作用，以便大家",date:"2022-04-19T07:13:07.000Z",category:["GitHub"]},["/software/github/semantic","/software/github/semantic.md"]],["v-c9823a98","/software/github/speedup.html",{title:"加速 GitHub 克隆",icon:"speed",type:"article",readingTime:{minutes:1.68,words:505},excerpt:"由于天朝墙的存在，GitHub 的访问速度在大部分国内地区都很慢。如果需要克隆体积比较大的项目，可能需要很长时间，也很大概率会在中途因为网络波动、终端问题导致克隆失败。 本文介绍如何使用 Gitee 加快 GitHub 项目克隆。 Gitee Gitee 又称码云，是一个国内的代码托管商，国内访问 Gitee 的速度是十分 Amazing 的。 注册 Git",date:"2021-02-18T00:00:00.000Z",category:["GitHub"]},["/software/github/speedup","/software/github/speedup.md"]],["v-361c7b7d","/software/github/token.html",{title:"GitHub Token",icon:"token",type:"article",readingTime:{minutes:.49,words:147},excerpt:"<p>Personal Access Token (PAT)，又称个人访问令牌，是一种代替密码进行 GitHub 身份认证的方式。</p>\n",date:"2022-04-19T07:13:07.000Z",category:["GitHub"]},["/software/github/token","/software/github/token.md"]],["v-2d8cd5c8","/software/mysql/",{title:"MySQL",icon:"mysql",type:"article",readingTime:{minutes:.05,words:14},excerpt:"目录 介绍; 5.7 版本与 8 的比较;",author:"李欣桐",date:"2022-04-19T07:13:07.000Z"},["/software/mysql/index.html","/software/mysql/README.md"]],["v-38d41630","/software/mysql/compare.html",{title:"5.7 与 8",icon:"compare",type:"article",readingTime:{minutes:5.04,words:1512},excerpt:"MySql 5.7 和 MySql 8 的区别 1. NoSql 存储 Mysql 从 5.7 版本提供了 NoSQL 的存储功能,在 8.0 中这部分得到一些修改。 关系型数据库 (SQL); 通过外键关联来建立表与表之间的关系 非关系型数据库 (NOSQL); 通常指数据以对象的形式存储在数据库中，而对象之间的关系通过每个对象自身的属性来决定 1. 隐藏",author:"李欣桐",date:"2022-04-19T07:13:07.000Z"},["/software/mysql/compare","/software/mysql/compare.md"]],["v-233fe009","/software/mysql/intro.html",{title:"简介",icon:"info",type:"article",readingTime:{minutes:8.82,words:2647},excerpt:"MySQL 是一个关系型数据库管理系统，由瑞典 MySQL AB 公司开发，属于 Oracle 旗下产品。 它是最流行的关系型数据库管理系统之一，是最好的 RDBMS 关系数据库管理系统应用软件之一 MySQL 使用 SQL 语言，分为社区版和商业版，由于其体积小、速度快、总体拥有成本低，尤其是开放源码这一特点，一般中小型网站都选择 MySQL 作为网站数据",author:"李欣桐",date:"2022-04-19T07:13:07.000Z"},["/software/mysql/intro","/software/mysql/intro.md"]],["v-1d30abd8","/code/language/js/",{title:"JavaScript 教程",icon:"javascript",type:"article",readingTime:{minutes:1.04,words:313},excerpt:"<blockquote>\n<p>部分内容参考/来自廖雪峰、阮一峰书籍与博客</p>\n</blockquote>\n",date:"2019-09-12T00:00:00.000Z",category:["JavaScript"],star:!0},["/code/language/js/index.html","/code/language/js/README.md"]],["v-245c31a9","/code/language/js/error.html",{title:"错误处理",icon:"warn",type:"article",readingTime:{minutes:5.93,words:1779},excerpt:"错误处理 在执行 JavaScript 代码的时候，有些情况下会发生错误。 错误分两种，一种是程序写的逻辑不对，导致代码执行异常。例如: 对于这种错误，要修复程序。 一种是执行过程中，程序可能遇到无法预测的异常情况而报错，例如，网络连接中断，读取不存在的文件，没有操作权限等。 对于这种错误，我们需要处理它，并可能需要给用户反馈。 错误处理是程序设计时必须要考",date:"2022-04-19T07:13:07.000Z",category:["JavaScript"]},["/code/language/js/error","/code/language/js/error.md"]],["v-d893d8ce","/code/language/json/",{title:"JSON 教程",icon:"json",type:"article",readingTime:{minutes:1.19,words:357},excerpt:"<p>JSON: JavaScript Object Notation(JavaScript 对象表示法)</p>\n<ul>\n<li>\n<p>JSON 是存储和交换文本信息的语法。类似 XML。</p>\n</li>\n<li>\n<p>JSON 比 XML 更小、更快，更易解析。</p>\n</li>\n<li>\n<p>JSON 是轻量级的文本数据交换格式</p>\n</li>\n<li>\n<p>JSON 独立于语言: JSON 使用 JavaScript 语法来描述数据对象，但是 JSON 仍然独立于语言和平台。JSON 解析器和 JSON 库支持许多不同的编程语言。目前非常多的动态(PHP，JSP，.NET)编程语言都支持 JSON。</p>\n</li>\n<li>\n<p>JSON 具有自我描述性，更易理解</p>\n</li>\n</ul>\n",date:"2020-07-25T00:00:00.000Z",category:["JSON"]},["/code/language/json/index.html","/code/language/json/README.md"]],["v-2ee7e91c","/code/language/markdown/",{title:"Markdown",icon:"markdown",type:"article",readingTime:{minutes:.38,words:115},excerpt:"<p>Markdown 是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。</p>\n<p>Markdown 的目标是实现「易读易写」。</p>\n<p>Markdown 的主要目的是用来作为一种网络内容的<strong>写作用语言</strong>。</p>\n",date:"2022-04-19T07:13:07.000Z",category:["Markdown"],tag:["Markdown"]},["/code/language/markdown/index.html","/code/language/markdown/README.md"]],["v-1509315e","/code/language/markdown/block.html",{title:"Markdown 块元素",icon:"markdown",type:"article",readingTime:{minutes:9.67,words:2901},excerpt:"段落和换行 一个段落由一个及以上相连接的行句组成。 一个即以上的空行则会切分出不同的段落，一般的段落不需要用空白或断行缩进。 空行 空行的定义是显示上看起来像是空行，便会被视为空行。 也就是若某一行只包含空白和 tab，则该行也会被视为空行。 「一个及以上相连接的行句组成」这句话其实暗示了 Markdown 允许段落内的强迫断行，其它的格式会把每个断行都转成",date:"2022-04-19T07:13:07.000Z",category:["Markdown"],tag:["Markdown"]},["/code/language/markdown/block","/code/language/markdown/block.md"]],["v-12412da4","/code/language/markdown/demo.html",{title:"Markdown示例",icon:"markdown",type:"article",readingTime:{minutes:2.78,words:834},excerpt:'一级标题 二级标题 三级标题 四级标题 五级标题 六级标题 Text 这句话里拥有加粗、倾斜和 段落 这是一个段落。 这是另一个段落。 换行 这是一句话不过我要在这里 换行 上方的代码中 这里 后面有两个空格 引用 " 引用也可以连用" "" " > 可以添加额外的大于号制造更深的引用" 列表 无序列表 无序列表项; 无序列表项; 列表中的列表项; 更多的列',date:"2022-04-19T07:13:07.000Z",category:["Markdown"],tag:["Markdown"]},["/code/language/markdown/demo","/code/language/markdown/demo.md"]],["v-6af69b4d","/code/language/markdown/extend.html",{title:"Markdown 扩展",icon:"plugin",type:"article",readingTime:{minutes:4.65,words:1395},excerpt:"其他特性 自动链接 Markdown 支持比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用尖括号包起来， Markdown 就会自动把它转成链接，链接的文字就和链接位置一样，例如: Markdown 会转为: 自动的邮件链接也很类似，只是 Markdown 会先做一个编码转换的过程，把文字字符转成 16 进位码的 HTML 实体，这样的格式可以混淆一",date:"2022-04-19T07:13:07.000Z",category:["Markdown"],tag:["Markdown"]},["/code/language/markdown/extend","/code/language/markdown/extend.md"]],["v-32c10f2e","/code/language/markdown/inline.html",{title:"Markdown 行内元素",icon:"markdown",type:"article",readingTime:{minutes:6.9,words:2070},excerpt:"链接 Markdown 支持两种形式的链接语法: 行内和参考。 不管是哪一种，链接的文字都是用 [方括号] 来标记。 行内链接 要建立一个行内形式的链接，只要在方块括号后输入圆括号并插入网址链接即可，如果您还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可。 例子 输入: 渲染结果: 输出: This is an ex",date:"2022-04-19T07:13:07.000Z",category:["Markdown"],tag:["Markdown"]},["/code/language/markdown/inline","/code/language/markdown/inline.md"]],["v-134ae2df","/code/language/markdown/intro.html",{title:"Markdown 介绍",icon:"info",type:"article",readingTime:{minutes:4.82,words:1447},excerpt:"<p>Markdown 是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。</p>\n<p>Markdown 的目标是实现「易读易写」。它的扩展名为 <code v-pre>.md</code>。</p>\n",date:"2022-04-19T07:13:07.000Z",category:["Markdown"],tag:["Markdown"]},["/code/language/markdown/intro","/code/language/markdown/intro.md"]],["v-73327cb6","/code/language/python/",{title:"Python 语言教程",icon:"python",type:"article",readingTime:{minutes:.99,words:296},excerpt:"<ul>\n<li>优点: Python 是一种高级语言，它可以用更少的代码量完成相同工作。</li>\n<li>缺点: Python 是一种脚本语言，它的执行效率不是很高。</li>\n</ul>\n",author:"廖雪峰",date:"2020-05-18T00:00:00.000Z",category:["Python"]},["/code/language/python/index.html","/code/language/python/README.md"]],["v-5bc6221c","/code/language/typescript/",{title:"TypeScript 教程",icon:"typescript",type:"article",readingTime:{minutes:1.27,words:380},excerpt:"<p>TypeScript 是一种由微软开发的自由和开源的编程语言，它是 JavaScript 的一个超集，扩展了 JavaScript 的语法。</p>\n",date:"2022-04-19T07:13:07.000Z",category:["TypeScript"],star:!0},["/code/language/typescript/index.html","/code/language/typescript/README.md"]],["v-d6fd848c","/code/language/yaml/",{title:"YAML 教程",icon:"yaml",type:"article",readingTime:{minutes:4.43,words:1329},excerpt:"编程免不了要写配置文件，怎么写配置也是一门学问。 YAML 是专门用来写配置文件的语言，非常简洁和强大。 yaml 介绍 YAML 语言(发音 /ˈjæməl/ )的设计目标，就是方便人类读写。它实质上是一种通用的数据串行化格式。 YAML 的全称是 YAML Ain’t Markup Language。 它的基本语法规则如下。 大小写敏感; 使用缩进表示层",date:"2020-07-26T00:00:00.000Z",category:["YAML"]},["/code/language/yaml/index.html","/code/language/yaml/README.md"]],["v-715bd2d7","/code/linux/bash/",{title:"Bash 教程",icon:"shell",type:"article",readingTime:{minutes:.31,words:94},excerpt:"目录 简介; 基本语法; 模式扩展; 引号和转义; 变量; 字符串操作; 算术运算; 行操作; 目录堆栈; 脚本入门; read 命令; 条件判断; 循环; 函数; 数组; set 命令; 脚本除错; mktemp 命令，trap 命令; 启动环境; 命令提示符;",author:"阮一峰",date:"2022-04-19T07:13:07.000Z",category:["Linux"],tag:["Bash"]},["/code/linux/bash/index.html","/code/linux/bash/README.md"]],["v-718fb290","/code/linux/bash/arithmetic.html",{title:"Bash 的算术运算",icon:"calculate",type:"article",readingTime:{minutes:5.7,words:1709},excerpt:"算术表达式 ((...)) 语法可以进行整数的算术运算。 ((...)) 会自动忽略内部的空格，所以下面的写法都正确，得到同样的结果。 这个语法不返回值，命令执行的结果根据算术运算的结果而定。只要算术结果不是 0，命令就算执行成功。 上面例子中，3 + 2 的结果是 5，命令就算执行成功，环境变量 $? 为 0。 如果算术结果为 0，命令就算执行失败。 上面",author:"阮一峰",date:"2022-04-19T07:13:07.000Z",category:["Linux"],tag:["Bash"]},["/code/linux/bash/arithmetic","/code/linux/bash/arithmetic.md"]],["v-1752d037","/code/linux/bash/array.html",{title:"数组",icon:"array",type:"article",readingTime:{minutes:6.49,words:1946},excerpt:"<p>数组(array)是一个包含多个值的变量。成员的编号从 0 开始，数量没有上限，也没有要求成员被连续索引。</p>\n",author:"阮一峰",date:"2022-04-19T07:13:07.000Z",category:["Linux"],tag:["Bash"]},["/code/linux/bash/array","/code/linux/bash/array.md"]],["v-5eed4996","/code/linux/bash/condition.html",{title:"条件判断",icon:"condition",type:"article",readingTime:{minutes:13.82,words:4146},excerpt:"<p>本章介绍 Bash 脚本的条件判断语法。</p>\n",author:"阮一峰",date:"2022-04-19T07:13:07.000Z",category:["Linux"],tag:["Bash"]},["/code/linux/bash/condition","/code/linux/bash/condition.md"]],["v-1c2fcf06","/code/linux/bash/debug.html",{title:"脚本除错",icon:"debug",type:"article",readingTime:{minutes:4.27,words:1281},excerpt:"<p>本章介绍如何对 Shell 脚本除错。</p>\n",author:"阮一峰",date:"2022-04-19T07:13:07.000Z",category:["Linux"],tag:["Bash"]},["/code/linux/bash/debug","/code/linux/bash/debug.md"]],["v-78c02211","/code/linux/bash/expansion.html",{title:"Bash 的模式扩展",icon:"expansion",type:"article",readingTime:{minutes:16.14,words:4843},excerpt:"简介 Shell 接收到用户输入的命令以后，会根据空格将用户的输入，拆分成一个个词元(token)。然后，Shell 会扩展词元里面的特殊字符，扩展完成后才会调用相应的命令。 这种特殊字符的扩展，称为模式扩展(globbing)。其中有些用到通配符，又称为通配符扩展(wildcard expansion)。Bash 一共提供八种扩展。 波浪线扩展; ? 字符",author:"阮一峰",date:"2022-04-19T07:13:07.000Z",category:["Linux"],tag:["Bash"]},["/code/linux/bash/expansion","/code/linux/bash/expansion.md"]],["v-1a4392ec","/code/linux/bash/function.html",{title:"Bash 函数",icon:"function",type:"article",readingTime:{minutes:3.73,words:1120},excerpt:"<p>本章介绍 Bash 函数的用法。</p>\n",author:"阮一峰",date:"2022-04-19T07:13:07.000Z",category:["Linux"],tag:["Bash"]},["/code/linux/bash/function","/code/linux/bash/function.md"]],["v-2ee1d1e9","/code/linux/bash/grammar.html",{title:"Bash 的基本语法",icon:"quote",type:"article",readingTime:{minutes:5.73,words:1720},excerpt:"<p>本章介绍 Bash 的最基本语法。</p>\n",author:"阮一峰",date:"2022-04-19T07:13:07.000Z",category:["Linux"],tag:["Bash"]},["/code/linux/bash/grammar","/code/linux/bash/grammar.md"]],["v-aaef1ff8","/code/linux/bash/intro.html",{title:"Bash 简介",icon:"info",type:"article",readingTime:{minutes:5.6,words:1679},excerpt:"<p>Bash 是 Unix 系统和 Linux 系统的一种 Shell(命令行环境)，是目前绝大多数 Linux 发行版的默认 Shell。</p>\n",author:"阮一峰",date:"2022-04-19T07:13:07.000Z",category:["Linux"],tag:["Bash"]},["/code/linux/bash/intro","/code/linux/bash/intro.md"]],["v-d2a92084","/code/linux/bash/loop.html",{title:"循环",icon:"loop",type:"article",readingTime:{minutes:6.65,words:1995},excerpt:"<p>Bash 提供三种循环语法 <code v-pre>for</code>、<code v-pre>while</code> 和 <code v-pre>until</code>。</p>\n",author:"阮一峰",date:"2022-04-19T07:13:07.000Z",category:["Linux"],tag:["Bash"]},["/code/linux/bash/loop","/code/linux/bash/loop.md"]],["v-4b2d1320","/code/linux/bash/mktemp.html",{title:"mktemp 命令，trap 命令",icon:"shell",type:"article",readingTime:{minutes:4.79,words:1436},excerpt:"<p>Bash 脚本有时需要创建临时文件或临时目录。常见的做法是，在 <code v-pre>/tmp</code> 目录里面创建文件或目录，这样做有很多弊端，使用 <code v-pre>mktemp</code> 命令是最安全的做法。</p>\n",author:"阮一峰",date:"2022-04-19T07:13:07.000Z",category:["Linux"],tag:["Bash"]},["/code/linux/bash/mktemp","/code/linux/bash/mktemp.md"]],["v-4652f6be","/code/linux/bash/prompt.html",{title:"命令提示符",icon:"shell",type:"article",readingTime:{minutes:3.7,words:1111},excerpt:"<p>用户进入 Bash 以后，Bash 会显示一个命令提示符，用来提示用户在该位置后面输入命令。</p>\n",author:"阮一峰",date:"2022-04-19T07:13:07.000Z",category:["Linux"],tag:["Bash"]},["/code/linux/bash/prompt","/code/linux/bash/prompt.md"]],["v-756dd164","/code/linux/bash/quotation.html",{title:"引号和转义",icon:"quote",type:"article",readingTime:{minutes:6.89,words:2067},excerpt:"<p>Bash 只有一种数据类型，就是字符串。不管用户输入什么数据，Bash 都视为字符串。因此，字符串相关的引号和转义，对 Bash 来说就非常重要。</p>\n",author:"阮一峰",date:"2022-04-19T07:13:07.000Z",category:["Linux"],tag:["Bash"]},["/code/linux/bash/quotation","/code/linux/bash/quotation.md"]],["v-0868e40c","/code/linux/bash/read.html",{title:"read 命令",icon:"read",type:"article",readingTime:{minutes:5.06,words:1519},excerpt:"用法 有时，脚本需要在执行过程中，由用户提供一部分数据，这时可以使用 read 命令。它将用户的输入存入一个变量，方便后面的代码使用。用户按下回车键，就表示输入结束。 read 命令的格式如下。 上面语法中，options 是参数选项，variable 是用来保存输入数值的一个或多个变量名。如果没有提供变量名，环境变量 REPLY 会包含用户输入的一整行数据",author:"阮一峰",date:"2022-04-19T07:13:07.000Z",category:["Linux"],tag:["Bash"]},["/code/linux/bash/read","/code/linux/bash/read.md"]],["v-242f3b18","/code/linux/bash/readline.html",{title:"Bash 行操作",icon:"line",type:"article",readingTime:{minutes:7.06,words:2119},excerpt:"简介 Bash 内置了 Readline 库，具有这个库提供的很多“行操作”功能，比如命令的自动补全，可以大大加快操作速度。 这个库默认采用 Emacs 快捷键，也可以改成 Vi 快捷键。 下面的命令可以改回 Emacs 快捷键。 如果想永久性更改编辑模式(Emacs / Vi)，可以将命令写在 ~/.inputrc 文件，这个文件是 Readline 的配",author:"阮一峰",date:"2022-04-19T07:13:07.000Z",category:["Linux"],tag:["Bash"]},["/code/linux/bash/readline","/code/linux/bash/readline.md"]],["v-5c07f092","/code/linux/bash/script.html",{title:"Bash 脚本入门",icon:"code",type:"article",readingTime:{minutes:12.41,words:3724},excerpt:"<p>脚本(script)就是包含一系列命令的一个文本文件。Shell 读取这个文件，依次执行里面的所有命令，就好像这些命令直接输入到命令行一样。所有能够在命令行完成的任务，都能够用脚本完成。</p>\n<p>脚本的好处是可以重复使用，也可以指定在特定场合自动调用，比如系统启动或关闭时自动执行脚本。</p>\n",author:"阮一峰",date:"2022-04-19T07:13:07.000Z",category:["Linux"],tag:["Bash"]},["/code/linux/bash/script","/code/linux/bash/script.md"]],["v-3eea04e4","/code/linux/bash/set.html",{title:"set 命令",icon:"set",type:"article",readingTime:{minutes:7.33,words:2198},excerpt:"<p><code v-pre>set</code> 命令是 Bash 脚本的重要环节，却常常被忽视，导致脚本的安全性和可维护性出问题。本章介绍 <code v-pre>set</code> 的基本用法，帮助您写出更安全的 Bash 脚本。</p>\n",author:"阮一峰",date:"2022-04-19T07:13:07.000Z",category:["Linux"],tag:["Bash"]},["/code/linux/bash/set","/code/linux/bash/set.md"]],["v-4e0b7530","/code/linux/bash/stack.html",{title:"目录堆栈",icon:"stack",type:"article",readingTime:{minutes:2.89,words:866},excerpt:"<p>为了方便用户在不同目录之间切换，Bash 提供了目录堆栈功能。</p>\n",author:"阮一峰",date:"2022-04-19T07:13:07.000Z",category:["Linux"],tag:["Bash"]},["/code/linux/bash/stack","/code/linux/bash/stack.md"]],["v-dfdf665a","/code/linux/bash/startup.html",{title:"Bash 启动环境",icon:"leaf",type:"article",readingTime:{minutes:3.17,words:951},excerpt:"Session 用户每次使用 Shell，都会开启一个与 Shell 的 Session(对话)。 Session 有两种类型: 登录 Session 和非登录 Session，也可以叫做 login shell 和 non-login shell。 登录 Session 登录 Session 是用户登录系统以后，系统为用户开启的原始 Session，通常需",author:"阮一峰",date:"2022-04-19T07:13:07.000Z",category:["Linux"],tag:["Bash"]},["/code/linux/bash/startup","/code/linux/bash/startup.md"]],["v-ea3dd79e","/code/linux/bash/string.html",{title:"字符串操作",icon:"string",type:"article",readingTime:{minutes:6.34,words:1903},excerpt:"<p>本章介绍 Bash 字符串操作的语法。</p>\n",author:"阮一峰",date:"2022-04-19T07:13:07.000Z",category:["Linux"],tag:["Bash"]},["/code/linux/bash/string","/code/linux/bash/string.md"]],["v-6fa34334","/code/linux/bash/variable.html",{title:"Bash 变量",icon:"variable",type:"article",readingTime:{minutes:11.31,words:3392},excerpt:"<p>Bash 变量分成环境变量和自定义变量两类。</p>\n",author:"阮一峰",date:"2022-04-19T07:13:07.000Z",category:["Linux"],tag:["Bash"]},["/code/linux/bash/variable","/code/linux/bash/variable.md"]],["v-21924c70","/code/linux/command/",{title:"Linux 命令格式",icon:"shell",type:"article",readingTime:{minutes:.16,words:48},excerpt:"目录 命令格式简介; 目录相关; 文件相关; 其他命令; 命令的自动补全; 命令的执行; 环境变量; 创建链接;",date:"2019-11-18T00:00:00.000Z",category:["Linux"]},["/code/linux/command/index.html","/code/linux/command/README.md"]],["v-3738d2c0","/code/linux/command/add.html",{title:"命令补全",icon:"square-check",type:"article",readingTime:{minutes:3.86,words:1159},excerpt:"<p>文件名(或者目录名)是执行 Linux 命令中最常见的参数，例如前面介绍的 <code v-pre>cd</code>、<code v-pre>mkdir</code>、<code v-pre>cp</code> 等命令，都涉及到了文件名。然而对初学者来说，输入完整的文件名感觉很麻烦，尤其面临文件名(目录名)特别长的时候。</p>\n<p>考虑到这种情况，Shell (Bash) 提供了一种称为“命令行自动补全”的功能，即在输入文件名的时候，只需要输入该文件名的前几个字符，然后按 Tab 键，Shell 就可以自动将文件名补全。</p>\n",date:"2019-11-20T00:00:00.000Z",category:["Linux"]},["/code/linux/command/add","/code/linux/command/add.md"]],["v-b20eb394","/code/linux/command/command.html",{title:"基本格式",icon:"shell",type:"article",readingTime:{minutes:3.22,words:965},excerpt:"命令提示符 登录系统后，第一眼看到的内容是: 这就是 Linux 系统的命令提示符。那么，这个提示符的含义是什么呢? []: 这是提示符的分隔符号，没有特殊含义。; root: 显示的是当前的登录用户，笔者现在使用的是 root 用户登录。; @: 分隔符号，没有特殊含义。; localhost: 当前系统的简写主机名(完整主机名是 localhost.lo",date:"2019-11-18T00:00:00.000Z",category:["Linux"]},["/code/linux/command/command","/code/linux/command/command.md"]],["v-3c6a1e34","/code/linux/command/dir.html",{title:"文件夹",icon:"tree",type:"article",readingTime:{minutes:5.27,words:1581},excerpt:"pwd 命令 由于 Linux 文件系统中有许多目录，当用户执行一条 Linux 命令又没有指定该命令或参数所在的目录时，Linux 系统就会首先在当前目录(目前的工作目录)搜寻这个命令或它的参数。因此，用户在执行命令之前，常常需要确定目前所在的工作目录，即当前目录。 当用户登陆 Linux 系统之后，其当前目录就是它的主目录。那么，如何确定当前目录呢? 可",date:"2019-11-18T00:00:00.000Z",category:["Linux"]},["/code/linux/command/dir","/code/linux/command/dir.md"]],["v-57c3a6cc","/code/linux/command/excu.html",{title:"命令执行",icon:"play",type:"article",readingTime:{minutes:2.33,words:698},excerpt:"前面讲过，在 Linux 系统中“一切皆文件”，Linux 命令也不例外。那么，当编辑完成 Linux 命令并回车后，系统底层到底发生了什么事情呢? 简单来说，Linux 命令的执行过程分为如下 4 个步骤。 1. 判断路径 判断用户是否以绝对路径或相对路径的方式输入命令(如 /bin/ls)，如果是的话直接执行。 1. 检查别名 Linux 系统会检查用户",date:"2019-11-20T00:00:00.000Z",category:["Linux"]},["/code/linux/command/excu","/code/linux/command/excu.md"]],["v-d2bdffd6","/code/linux/command/file.html",{title:"文件",icon:"file",type:"article",readingTime:{minutes:4.27,words:1280},excerpt:"touch 命令 需要注意的是，touch 命令不光可以用来创建文件(当指定操作文件不存在时，该命令会在当前位置建立一个空文件)，此命令更重要的功能是修改文件的时间参数(但当文件存在时，会修改此文件的时间参数)。 Linux 系统中，每个文件主要拥有 3 个时间参数(通过 stat 命令进行查看)，分别是文件的访问时间、数据修改时间以及状态修改时间: 访问时",date:"2019-11-19T00:00:00.000Z",category:["Linux"]},["/code/linux/command/file","/code/linux/command/file.md"]],["v-82e52c62","/code/linux/command/ln.html",{title:"链接",icon:"ask",type:"article",readingTime:{minutes:7.52,words:2256},excerpt:"<p>建立硬链接和软链接非常简单，那这两种链接有什么区别? 它们都有什么作用? 这才是链接文件最不容易理解的地方，我们分别来讲讲。</p>\n",date:"2019-11-20T00:00:00.000Z",category:["Linux"]},["/code/linux/command/ln","/code/linux/command/ln.md"]],["v-0452eb91","/code/linux/command/other.html",{title:"其他文件命令",icon:"sort",type:"article",readingTime:{minutes:10.88,words:3264},excerpt:"cp 命令 cp 命令，主要用来复制文件和目录，同时借助某些选项，还可以实现复制整个目录，以及比对两文件的新旧而予以升级等功能。 cp 命令的基本格式如下: 选项: -a: 相当于 -d、-p、-r 选项的集合，这几个选项我们一一介绍；; -d: 如果源文件为软链接(对硬链接无效)，则复制出的目标文件也为软链接；; -i: 询问，如果目标文件已经存在，则会询",date:"2019-11-19T00:00:00.000Z",category:["Linux"]},["/code/linux/command/other","/code/linux/command/other.md"]],["v-62d759e8","/code/linux/command/path.html",{title:"环境变量",icon:"shell",type:"article",readingTime:{minutes:5,words:1501},excerpt:"环境变量 变量 变量是计算机系统用于保存可变值的数据类型，我们可以直接通过变量名称来提取到对应的变量值。在 Linux 系统中，环境变量是用来定义系统运行环境的一些参数，比如每个用户不同的家目录 (HOME)、邮件存放位置 (MAIL)等。 值得一提的是，Linux 系统中环境变量的名称一般都是大写的，这是一种约定俗成的规范。 我们可以使用 env 命令来查",date:"2019-11-20T00:00:00.000Z",category:["Linux"]},["/code/linux/command/path","/code/linux/command/path.md"]],["v-5a85e8bd","/code/linux/command/temp.html",{title:"其他指令",type:"article",readingTime:{minutes:3.65,words:1096},excerpt:"其他指令 文件 创建文件 touch; vi; 编辑文件 vi; 使用 vi 命令后，默认进入浏览模式。 按 i 进入 insert 模式， 按 ESC 退出。 1. 命令模式下，输入: / 字符串 比如搜索 user, 输入 /user 按下回车之后，可以看到 vim 已经把光标移动到该字符处和高亮了匹配的字符串 1. 查看下一个匹配，按下 n(小写 n)",date:"2022-04-19T07:13:07.000Z",category:["Linux"]},["/code/linux/command/temp","/code/linux/command/temp.md"]],["v-7197b92f","/code/linux/file/",{title:"文件",icon:"file",type:"article",readingTime:{minutes:.04,words:13},excerpt:"目录 Linux 文件; Linux 目录; 挂载;",date:"2019-11-17T00:00:00.000Z",category:["Linux"]},["/code/linux/file/index.html","/code/linux/file/README.md"]],["v-b9f6b2ca","/code/linux/file/dir.html",{title:"目录",icon:"tree",type:"article",readingTime:{minutes:8.63,words:2589},excerpt:"Linux 文件目录结构 学习 Linux，不仅限于学习各种命令，了解整个 Linux 文件系统的目录结构以及各个目录的功能同样至关重要。 使用 Linux 时，通过命令行输入 ls -l / 可以看到，在 Linux 根目录 (/) 下包含很多的子目录(称为一级目录)，例如 bin、boot、dev 等。同时，各一级目录下还含有很多子目录(称为二级目录)，",date:"2019-11-17T00:00:00.000Z",category:["Linux"]},["/code/linux/file/dir","/code/linux/file/dir.md"]],["v-0357848e","/code/linux/file/file.html",{title:"文件",icon:"file",type:"article",readingTime:{minutes:5.16,words:1549},excerpt:"文件系统 目录就相当于 Windows 中的文件夹，目录中存放的既可以是文件，也可以是其他的子目录，而文件中存储的是真正的信息。 文件系统的最顶层是由根目录开始的，系统使用“/”来表示根目录，在根目录之下的既可以是目录，也可以是文件，而每一个目录中又可以包含(子)目录或文件。如此反复就可以构成一个庞大的文件系统。 其实，使用这种树状、具有层次的文件结构主要目",date:"2019-11-17T00:00:00.000Z",category:["Linux"]},["/code/linux/file/file","/code/linux/file/file.md"]],["v-f3161262","/code/linux/file/mount.html",{title:"Linux 挂载",icon:"mount",type:"article",readingTime:{minutes:2.1,words:631},excerpt:"Linux 挂载 前面讲过，Linux 系统中“一切皆文件”，所有文件都放置在以根目录为树根的树形目录结构中。在 Linux 看来，任何硬件设备也都是文件，它们各有自己的一套文件系统(文件目录结构)。 因此产生的问题是，当在 Linux 系统中使用这些硬件设备时，只有将 Linux 本身的文件目录与硬件设备的文件目录合二为一，硬件设备才能为我们所用。合二为一",date:"2019-11-17T00:00:00.000Z",category:["Linux"]},["/code/linux/file/mount","/code/linux/file/mount.md"]],["v-726f7072","/code/linux/intro/",{title:"Linux 简介",icon:"info",type:"article",readingTime:{minutes:.09,words:27},excerpt:"Linux 简介 Linux 介绍; Linux 历史; Linux 编写语言; Linux 优势; Linux 桌面环境;",date:"2019-11-15T00:00:00.000Z",category:["Linux"]},["/code/linux/intro/index.html","/code/linux/intro/README.md"]],["v-2e28fb15","/code/linux/intro/advantage.html",{title:"Linux 的优点",icon:"compare",type:"article",readingTime:{minutes:2.28,words:685},excerpt:"Linux 的优点 相比 Windows 系统，Linux 系统有更好的稳定性。此外，Linux 还有如下优点: 1. 大量的可用软件及免费软件 Linux 系统上有着大量的可用软件，且绝大多数是免费的，比如声名赫赫的 Apache、Samba、PHP、MySQL 等，构建成本低廉，是 Linux 被众多企业青睐的原因之一。当然，这和 Linux 出色的性能",date:"2019-11-16T00:00:00.000Z",category:["Linux"]},["/code/linux/intro/advantage","/code/linux/intro/advantage.md"]],["v-5b4990f8","/code/linux/intro/desktop.html",{title:"桌面系统",icon:"computer",type:"article",readingTime:{minutes:6.51,words:1952},excerpt:"桌面系统 KDE 桌面系统 KDE 是 K Desktop Environment 的缩写，中文译为“K 桌面环境”。 KDE 是基于大名鼎鼎的 Qt 的，最初于 1996 年作为开源项目公布，并在 1998 年发布了第一个版本，现在 KDE 几乎是排名第一的桌面环境了。 许多流行的 Linux 发行版都提供了 KDE 桌面环境，比如 Ubuntu、Linu",date:"2019-11-16T00:00:00.000Z",category:["Linux"]},["/code/linux/intro/desktop","/code/linux/intro/desktop.md"]],["v-21c4ee0c","/code/linux/intro/history.html",{title:"Linux 和 UNIX",icon:"time",type:"article",readingTime:{minutes:12.46,words:3737},excerpt:'Linux 和 UNIX UNIX 与 Linux 之间的关系是一个很有意思的话题。在目前主流的服务器端操作系统中，UNIX 诞生于 20 世纪 60 年代末，Windows 诞生于 20 世纪 80 年代中期，Linux 诞生于 20 世纪 90 年代初，可以说 UNIX 是操作系统中的"老大哥"，后来的 Windows 和 Linux 都参考了 UNIX',date:"2019-11-15T00:00:00.000Z",category:["Linux"],tag:["介绍"]},["/code/linux/intro/history","/code/linux/intro/history.md"]],["v-605b78f4","/code/linux/intro/intro.html",{title:"Linux 简介",icon:"info",type:"article",readingTime:{minutes:6.44,words:1932},excerpt:"Linux 简介 Linux 内核最初只是由芬兰人林纳斯·托瓦兹 (Linus Torvalds) 在赫尔辛基大学上学时出于个人爱好而编写的。 Linux 是一套免费使用和自由传播的类 Unix 操作系统，是一个基于 POSIX 和 UNIX 的多用户、多任务、支持多线程和多 CPU 的操作系统。 Linux 能运行主要的 UNIX 工具软件、应用程序和网络",date:"2019-11-15T00:00:00.000Z",category:["Linux"],tag:["介绍"]},["/code/linux/intro/intro","/code/linux/intro/intro.md"]],["v-793fd81a","/code/linux/intro/language.html",{title:"语言",icon:"language",type:"article",readingTime:{minutes:7.28,words:2183},excerpt:"<p>Linux 中大量使用脚本语言，而不是 C 语言!</p>\n",date:"2019-11-16T00:00:00.000Z",category:["Linux"]},["/code/linux/intro/language","/code/linux/intro/language.md"]],["v-1d44d9c3","/code/linux/intro/startup.html",{title:"Linux 系统启动过程",type:"article",readingTime:{minutes:3.48,words:1045},excerpt:"Linux 系统启动过程 本篇教程以 CentOS 为例介绍系统的启动过程。 Linux 启动时我们会看到许多启动信息。 Linux 系统的启动过程并不是大家想象中的那么复杂，其过程可以分为 5 个阶段: 内核的引导。; 运行 init。; 系统初始化。; 建立终端 。; 用户登录系统。; init 程序的类型: SysV: init, CentOS 5 之",date:"2022-04-19T07:13:07.000Z"},["/code/linux/intro/startup","/code/linux/intro/startup.md"]],["v-789db224","/code/linux/ubuntu/",{title:"ubuntu",icon:"ubuntu",type:"article",readingTime:{minutes:.08,words:23},excerpt:"ubuntu 管理包; 开发软件; 网络服务器相关; 语言切换;",date:"2019-11-21T00:00:00.000Z",category:["Linux"]},["/code/linux/ubuntu/index.html","/code/linux/ubuntu/README.md"]],["v-c72e08ec","/code/linux/ubuntu/debug.html",{title:"开发软件",icon:"debug",type:"article",readingTime:{minutes:.88,words:265},excerpt:"开发软件 安装 VS Code 使用 snap; 在 WSL 环境下 snap 无法使用，则使用以下命令安装 code 库。; 然后正常安装: 可能还需要安装 remote 插件安装 nvm 在 Linux 上可能需要重新链接终端，命令才可用。 测试命令，输入 nvm 即安装成功: 安装命令: 切换命令: 安装 Git yarn 测试是否安装成功:",date:"2019-11-21T00:00:00.000Z",category:["Linux"]},["/code/linux/ubuntu/debug","/code/linux/ubuntu/debug.md"]],["v-accdabf2","/code/linux/ubuntu/lang.html",{title:"语言切换",icon:"language",type:"article",readingTime:{minutes:.16,words:47},excerpt:"语言切换 查看当前语言包: locale -a 中文语言是: zh_CN.utf8 安装中文语言包 之后修改 /etc/default/locale，将 LANG 改为 zh_CN.utf8",date:"2019-11-22T00:00:00.000Z",category:["Linux"]},["/code/linux/ubuntu/lang","/code/linux/ubuntu/lang.md"]],["v-e846ec20","/code/linux/ubuntu/manage.html",{title:"管理工具",icon:"tool",type:"article",readingTime:{minutes:1.12,words:336},excerpt:"管理工具 apt-get apt-get 命令默认的源在国内访问很慢，可以考虑换源。 获取软件包更新:; 更新软件包:; 其他命令[^order]; [^order]: 其他命令 Snap 已经预装。 在中国大陆不建议使用 Snap",date:"2019-11-21T00:00:00.000Z",category:["Linux"]},["/code/linux/ubuntu/manage","/code/linux/ubuntu/manage.md"]],["v-a3144274","/code/linux/ubuntu/webserver.html",{title:"网络服务器相关",icon:"network",type:"article",readingTime:{minutes:1.16,words:349},excerpt:"网络服务器相关 ftp vsftpd 安装; 配置; 至少要更改: Nginx 安装; Nginx 默认安装在 /etc/nginx 目录下 配置; 配置文件为 nginx.conf。 默认站点配置文件在 /etc/nginx/sites-available/default 为了使得 Nginx 能使用 PHP，需要配置 PHP MySQL 安装 配置版本(",date:"2019-11-22T00:00:00.000Z"},["/code/linux/ubuntu/webserver","/code/linux/ubuntu/webserver.md"]],["v-239235ed","/code/node-js/package/",{title:"常见 Node 库",type:"page",readingTime:{minutes:.01,words:4},excerpt:"目录 axois;",date:"2022-04-19T07:13:07.000Z",category:["Node.js"],tag:["Node.js"]},["/code/node-js/package/index.html","/code/node-js/package/README.md"]],["v-19bca984","/code/node-js/package/axois.html",{title:"axios",type:"article",readingTime:{minutes:9.57,words:2872},excerpt:'<blockquote>\n<p>GitHub 地址: <a href="https://github.com/axios/axios" target="_blank" rel="noopener noreferrer">https://github.com/axios/axios<ExternalLinkIcon/></a></p>\n</blockquote>\n<p>axois 是一个基于 Promise 的 HTTP 客户端，用于浏览器和 node.js</p>\n',date:"2022-04-19T07:13:07.000Z",category:["Node.js"],tag:["Node.js"]},["/code/node-js/package/axois","/code/node-js/package/axois.md"]],["v-681ba581","/code/vue/cli/",{title:"Vue-cli",icon:"vue",type:"article",readingTime:{minutes:.08,words:25},excerpt:"目录 Vue Cli 介绍; 快速简单开发; 创建项目; 文件处理;",date:"2022-04-19T07:13:07.000Z",category:["Vue"],tag:["Vue Cli"]},["/code/vue/cli/index.html","/code/vue/cli/README.md"]],["v-48fc6d3c","/code/vue/cli/create.html",{title:"相关指令",icon:"add",type:"article",readingTime:{minutes:2.01,words:602},excerpt:"创建一个项目 在尝试了单文件的快速开发后，我们就可以开始真正创建一个项目。 vue create 运行以下命令来创建一个新项目: 使用图形化界面 您也可以通过 vue ui 命令以图形化界面创建和管理项目: 上述命令会打开一个浏览器窗口，并以图形化界面将您引导至项目创建的流程。 对于新手，推荐先使用图形化界面 预置命令 使用 vue create 创建的项目",date:"2022-04-19T07:13:07.000Z",category:["Vue"],tag:["Vue Cli","指令"]},["/code/vue/cli/create","/code/vue/cli/create.md"]],["v-b7f95708","/code/vue/cli/file.html",{title:"文件处理原则",icon:"file",type:"article",readingTime:{minutes:2.79,words:838},excerpt:"Index 文件 public/index.html 文件是一个会被处理的模板。在构建过程中，资源链接会被自动注入。另外，Vue CLI 也会自动注入打包好的 JavaScript 和 CSS 文件的资源链接。它会最终成为 Vue 应用的页面。 处理静态资源 静态资源可以通过两种方式进行处理: 在 JavaScript 被导入或在 template/CSS ",date:"2022-04-19T07:13:07.000Z",category:["Vue"],tag:["Vue Cli"]},["/code/vue/cli/file","/code/vue/cli/file.md"]],["v-0def13a4","/code/vue/cli/intro.html",{title:"Vue-cli 介绍",icon:"creative",type:"article",readingTime:{minutes:1.43,words:430},excerpt:"<p>Vue CLI 是一个基于 Vue.js 进行快速开发的完整系统，提供:</p>\n<ul>\n<li>通过 <code v-pre>@vue/cli</code> 搭建交互式的项目脚手架。</li>\n<li>通过 <code v-pre>@vue/cli</code> + <code v-pre>@vue/cli-service-global</code> 快速开始零配置原型开发。</li>\n<li>一个运行时依赖 (<code v-pre>@vue/cli-service</code>)，该依赖:\n<ul>\n<li>可升级；</li>\n<li>基于 webpack 构建，并带有合理的默认配置；</li>\n<li>可以通过项目内的配置文件进行配置；</li>\n<li>可以通过插件进行扩展。</li>\n</ul>\n</li>\n<li>一个丰富的官方插件集合，集成了前端生态中最好的工具。</li>\n<li>一套完全图形化的创建和管理 Vue.js 项目的用户界面。</li>\n</ul>\n",date:"2022-04-19T07:13:07.000Z",category:["Vue"],tag:["Vue Cli","快速上手"]},["/code/vue/cli/intro","/code/vue/cli/intro.md"]],["v-2a972985","/code/vue/cli/quick-dev.html",{title:"快速原型开发",icon:"create",type:"article",readingTime:{minutes:1.24,words:373},excerpt:'<p>您可以使用 <code v-pre>vue serve</code> 和 <code v-pre>vue build</code> 命令对单个 <code v-pre>*.vue</code> 文件进行快速原型开发，不过这需要先额外安装一个全局的扩展:</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> -g @vue/cli-service-global\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>',date:"2022-04-19T07:13:07.000Z",category:["Vue"],tag:["Vue Cli"]},["/code/vue/cli/quick-dev","/code/vue/cli/quick-dev.md"]],["v-48a6e254","/code/vue/router/",{title:"Vue Router",icon:"router",type:"article",readingTime:{minutes:.22,words:66},excerpt:"<p>Vue Router 是 Vue 官方出品的路由组件，托管整个 Vue 项目路由。</p>\n",date:"2022-04-19T07:13:07.000Z",category:["Vue"],tag:["Vue Router"]},["/code/vue/router/index.html","/code/vue/router/README.md"]],["v-3cccf502","/code/vue/router/demo.html",{title:"案例",icon:"discover",type:"article",readingTime:{minutes:1.92,words:575},excerpt:"<p>用 Vue.js + Vue Router 创建单页应用，是非常简单的。使用 Vue.js ，我们已经可以通过组合组件来组成应用程序，当您要把 Vue Router 添加进来，我们需要做的是，将组件 (components) 映射到路由 (routes)，然后告诉 Vue Router 在哪里渲染它们。</p>\n",date:"2022-04-19T07:13:07.000Z",category:["Vue"],tag:["Vue Router","Demo"]},["/code/vue/router/demo","/code/vue/router/demo.md"]],["v-461f9463","/code/vue/router/get-started.html",{title:"快速上手",icon:"router",type:"article",readingTime:{minutes:5.33,words:1598},excerpt:"介绍 Vue Router 是 Vue 官方出品的路由组件，托管整个 Vue 项目路由。 配置文件说明 配置文件会引入 Node.js 模块 vue-router，并配置信息，最终向外暴露一个添加了配置信息的 Router对象。 在日常开发中，我们只需要关注默认暴露对象的 route 属性。(其他属性已经在下方用注释简要说明) 在 inNENU Websit",date:"2022-04-19T07:13:07.000Z",category:["Vue"],tag:["Vue Router","快速上手"]},["/code/vue/router/get-started","/code/vue/router/get-started.md"]],["v-c72e4aea","/code/vue/vuex/",{title:"Vuex",icon:"state",type:"article",readingTime:{minutes:.38,words:115},excerpt:"<p>Vuex 是 Vue 官方出品的状态管理组件，是一个专为 Vue.js 应用程序开发的状态管理模式。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。</p>\n",date:"2022-04-19T07:13:07.000Z",category:["Vue"],tag:["Vuex"]},["/code/vue/vuex/index.html","/code/vue/vuex/README.md"]],["v-33894aab","/code/vue/vuex/demo.html",{title:"模块案例",icon:"discover",type:"article",readingTime:{minutes:.43,words:130},excerpt:"<p>本案例展示了 Shimon Zhan 个人编写的 screen 相关的 Vuex 模块。</p>\n",date:"2022-04-19T07:13:07.000Z",category:["Vue"],tag:["Vuex","Demo"]},["/code/vue/vuex/demo","/code/vue/vuex/demo.md"]],["v-491f82cc","/code/vue/vuex/get-started.html",{title:"快速上手",icon:"state",type:"article",readingTime:{minutes:6.04,words:1812},excerpt:"<p>Vuex 是 Vue 官方出品的状态管理组件，是一个专为 Vue.js 应用程序开发的状态管理模式。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。</p>\n",date:"2022-04-19T07:13:07.000Z",category:["Vue"],tag:["Vuex","快速上手"]},["/code/vue/vuex/get-started","/code/vue/vuex/get-started.md"]],["v-4d66e289","/code/website/css/",{title:"CSS",icon:"css",type:"article",readingTime:{minutes:1.26,words:379},excerpt:"<p>CSS 指层叠样式表 (<strong>C</strong>ascading <strong>S</strong>tyle <strong>S</strong>heets)，它负责描述网页元素的具体样式。</p>\n<p>CSS3 是最新的 CSS 标准，被拆分为&quot;模块&quot;。模块包括: 选择器、盒模型、背景和边框、文字特效、2D/3D 转换、动画、多列布局、用户界面。</p>\n",date:"2019-09-05T00:00:00.000Z",category:["CSS"],tag:["介绍"],star:!0},["/code/website/css/index.html","/code/website/css/README.md"]],["v-db68b190","/code/website/emmet/",{title:"Emmet 语法",icon:"emmet",type:"article",readingTime:{minutes:.42,words:126},excerpt:'<div class="custom-container tip"><p class="custom-container-title">简介</p>\n<p>所有操作按下 “tab” 键即可瞬间完成</p>\n</div>\n<p>Emmet 是一个快速创建 HTML 和 CSS 的方式，如果您想要成为一个高级 Web 开发者，为了工作效率，您应该掌握 Emmet 语法。</p>\n',date:"2019-09-03T00:00:00.000Z",category:["Emmet"],tag:["快捷键"]},["/code/website/emmet/index.html","/code/website/emmet/README.md"]],["v-3db71024","/code/website/emmet/css.html",{title:"CSS Emmet",icon:"css",type:"article",readingTime:{minutes:1.72,words:516},excerpt:"对于 CSS 语法，Emmet 为属性提供了许多预定义的代码段。 添加属性 您可以使用缩写来生成 CSS 属性。如 m 会生成 margin: ;，同时光标会自动置于值处。 同时添加属性与值值 您可以将值直接输入缩写的后面，如果有多个值，您需要用 - 将它们分开，多余的 - 将会被理解为负值。 案例 m10: margin: 10px;; m10-20: m",date:"2019-09-03T00:00:00.000Z",category:["Emmet"],tag:["快捷键","HTML"]},["/code/website/emmet/css","/code/website/emmet/css.md"]],["v-8c5b7854","/code/website/emmet/html.html",{title:"HTML Emmet",icon:"html",type:"article",readingTime:{minutes:4.3,words:1289},excerpt:"元素创建 1. 在编辑器中输入元素名称之后按下 tab 即可自动补全生成 HTML 标签，即使不是标准的 HTML 标签。 创建文档 输入: ! 或者 html:5 将创建 HTML 基本结构。 结构操作 子元素 使用 > 生成子元素 案例 div>ul>li: 兄弟元素 使用 + 生成兄弟元素 案例 div+p+bq: 上移 使用 ^ 上移一级 案例 di",date:"2019-09-03T00:00:00.000Z",category:["Emmet"],tag:["快捷键","HTML"]},["/code/website/emmet/html","/code/website/emmet/html.md"]],["v-5fbc4987","/code/website/html/",{title:"HTML",icon:"html",type:"article",readingTime:{minutes:1.17,words:350},excerpt:"<p>HTML 指的是超文本标记语言 (Hyper Text Markup Language)，它不是一种编程语言，而是一种标记语言 (markup language)，它使用标记标签来描述网页。HTML5 是 HTML 最新的修订版本。</p>\n",date:"2019-09-01T00:00:00.000Z",category:["HTML"],tag:["介绍"],star:!0},["/code/website/html/index.html","/code/website/html/README.md"]],["v-df5d1758","/code/website/jQuery/",{title:"jQuery",icon:"jQuery",type:"article",readingTime:{minutes:.73,words:219},excerpt:'<p>jQuery 是一款能够方便快捷的操作 DOM，并兼容所有主流浏览器的框架，目前最新版本是 3.5.1。</p>\n<div class="custom-container tip"><p class="custom-container-title">提示</p>\n<p>由于目前前端应用的愈加复杂，前端开发者大多数转向 MVVM 框架，目前世界比较流行的三大 MVVM 框架是 Vue React Angular。可以说，在 2020 年，<strong>jQuery 已经过时了</strong>!</p>\n<p>不过 jQuery 无论说从代码实现还是从写法上，到今天都是值得借鉴的。</p>\n<p>所以如果您只想简单了解并掌握前端开发，而不是深入地从事相关行业，您可以直接 <RouterLink to="/code/vue/">跳过本章节</RouterLink>。</p>\n<p>本章节应以理解写法与思路为主，无需刻意记忆。</p>\n</div>\n',date:"2019-11-02T00:00:00.000Z",category:["jQuery"]},["/code/website/jQuery/index.html","/code/website/jQuery/README.md"]],["v-93dfe636","/code/website/jQuery/ajax.html",{title:"AJAX",icon:"ajax",type:"article",readingTime:{minutes:2.81,words:843},excerpt:'<div class="custom-container tip"><p class="custom-container-title">章节过时</p>\n<p>目前，一套代码已经可以在多个浏览器上运行良好了，所以 jQuery 的意义并不大。在 Node.js 中，我们使用 <RouterLink to="/code/node-js/package/axois.html">axios</RouterLink> 来进行请求。</p>\n</div>\n',date:"2019-11-05T00:00:00.000Z",category:["jQuery"]},["/code/website/jQuery/ajax","/code/website/jQuery/ajax.md"]],["v-8487edae","/code/website/jQuery/animation.html",{title:"动画",icon:"animation",type:"article",readingTime:{minutes:3.48,words:1044},excerpt:'<div class="custom-container tip"><p class="custom-container-title">章节过时</p>\n<p>大部分动画都能够通过 CSS3 的 transition 实现，且 CSS3 开销更小。在复杂动画下，jQuery 更容易触发性能瓶颈。</p>\n<p>2020 年浏览器对 CSS3 已经支持的特别良好，所以目前大多数的动画都直接使用 CSS3 的动画库。本章以学习思路为主即可。</p>\n</div>\n',date:"2019-11-04T00:00:00.000Z",category:["jQuery"]},["/code/website/jQuery/animation","/code/website/jQuery/animation.md"]],["v-59e10c5a","/code/website/jQuery/event.html",{title:"事件",icon:"activity",type:"article",readingTime:{minutes:5.09,words:1527},excerpt:'<div class="custom-container tip"><p class="custom-container-title">章节过时</p>\n<p>由于目前各浏览器 API 已经基本统一，无需使用 jQuery 绑定事件了。</p>\n</div>\n',date:"2019-11-04T00:00:00.000Z",category:["jQuery"]},["/code/website/jQuery/event","/code/website/jQuery/event.md"]],["v-c7d79daa","/code/website/jQuery/extend.html",{title:"扩展",icon:"plugin",type:"article",readingTime:{minutes:5.14,words:1543},excerpt:"当我们使用 jQuery 对象的方法时，由于 jQuery 对象可以操作一组 DOM，而且支持链式操作，所以用起来非常方便。 但是 jQuery 内置的方法永远不可能满足所有的需求。比如，我们想要高亮显示某些 DOM 元素，用 jQuery 可以这么实现: 总是写重复代码可不好，万一以后还要修改字体就更麻烦了，能不能统一起来，写个 highlight() 方",date:"2019-11-05T00:00:00.000Z",category:["jQuery"]},["/code/website/jQuery/extend","/code/website/jQuery/extend.md"]],["v-3957cd7e","/code/website/jQuery/intro.html",{title:"jQuery 介绍",icon:"creative",type:"article",readingTime:{minutes:1.98,words:593},excerpt:"<p>jQuery 是 JavaScript 世界中使用最广泛的一个库。鼎盛时期全世界大约有 80~90%的网站直接或间接地使用了 jQuery。</p>\n<p>jQuery 能帮我们干这些事情:</p>\n<ul>\n<li>消除浏览器差异: 您不需要自己写冗长的代码来针对不同的浏览器来绑定事件，编写 Ajax 等代码；</li>\n<li>简洁的操作 DOM 的方法: 写 <code v-pre>$('#test')</code> 肯定比 <code v-pre>document.getElementById('test')</code> 来得简洁；</li>\n<li>轻松实现动画、修改 CSS 等各种操作。</li>\n<li>jQuery 的理念 “Write Less, Do More“，让您写更少的代码，完成更多的工作!</li>\n</ul>\n",date:"2019-11-02T00:00:00.000Z",category:["jQuery"],tag:["介绍"]},["/code/website/jQuery/intro","/code/website/jQuery/intro.md"]],["v-5ef6c9b6","/code/website/jQuery/modify-dom.html",{title:"修改 DOM 结构",icon:"edit",type:"article",readingTime:{minutes:1.87,words:561},excerpt:'<div class="custom-container tip"><p class="custom-container-title">章节过时</p>\n<p>而且目前浏览器 API 已经基本统一，除非兼容旧版本 IE，否则无需针对不同浏览器写不同的代码。</p>\n</div>\n',date:"2019-11-03T00:00:00.000Z",category:["jQuery"]},["/code/website/jQuery/modify-dom","/code/website/jQuery/modify-dom.md"]],["v-799c2158","/code/website/jQuery/operate-dom.html",{title:"操作 DOM",icon:"operate",type:"article",readingTime:{minutes:4.86,words:1459},excerpt:'<div class="custom-container tip"><p class="custom-container-title">章节过时</p>\n<p>目前，新型的框架大多遵循 MVVM 逻辑，及把逻辑层的数据绑定到视图层去显示。这种思路下，无需也不应操作 DOM。</p>\n</div>\n',date:"2019-11-03T00:00:00.000Z",category:["jQuery"]},["/code/website/jQuery/operate-dom","/code/website/jQuery/operate-dom.md"]],["v-546d1486","/code/website/jQuery/selector.html",{title:"选择器",icon:"list",type:"article",readingTime:{minutes:8.33,words:2498},excerpt:"<p>选择器是 jQuery 的核心。一个选择器写出来类似 <code v-pre>$('#dom-id')</code>。</p>\n",date:"2019-11-03T00:00:00.000Z",category:["jQuery"]},["/code/website/jQuery/selector","/code/website/jQuery/selector.md"]],["v-0a8e930f","/software/github/actions/",{title:"GitHub Actions",icon:"actions",type:"article",readingTime:{minutes:.22,words:65},excerpt:"目录 GitHub Actions 介绍; Workflow 配置; 常用 GitHub Action checkout; cache; GitHub Pages 部署; 官方文档 文档地址; Workflow 触发事件; Workflow 配置;",date:"2021-02-18T00:00:00.000Z",category:["GitHub"],tag:["action","workflow"]},["/software/github/actions/index.html","/software/github/actions/README.md"]],["v-87c58234","/software/github/actions/cache.html",{title:"cache",type:"article",readingTime:{minutes:1.77,words:532},excerpt:'<p>这个 Action 允许您缓存依赖项和构建输出内容以缩短 Workflow 执行时间。</p>\n<p>日常最多使用的就是缓存依赖项，在每个工作流程中，将安装后的依赖通过安装后生成的依赖版本文件的哈希值进行缓存。</p>\n<p>当前工作流程的版本文件哈希值与历史缓存中的某一项完全相同时，直接载入这些依赖项缓存，这样就可以免去安装步骤。</p>\n<div class="custom-container info"><p class="custom-container-title">缓存依赖</p>\n<p>关于缓存依赖的文档，详见 <a href="https://docs.github.com/cn/actions/guides/caching-dependencies-to-speed-up-workflows" target="_blank" rel="noopener noreferrer">缓存依赖项以加快工作流程<ExternalLinkIcon/></a>。</p>\n</div>\n',date:"2021-02-20T00:00:00.000Z",category:["GitHub"],tag:["action","workflow"]},["/software/github/actions/cache","/software/github/actions/cache.md"]],["v-2f906ca4","/software/github/actions/checkout.html",{title:"checkout",type:"article",readingTime:{minutes:3,words:899},excerpt:"<p>该操作将检出您的存储库 <code v-pre>$GITHUB_WORKSPACE</code>，使您的工作流可以访问它。</p>\n",date:"2021-02-18T00:00:00.000Z",category:["GitHub"],tag:["action","workflow"]},["/software/github/actions/checkout","/software/github/actions/checkout.md"]],["v-37389730","/software/github/actions/config.html",{title:"Action 配置",icon:"config",type:"article",readingTime:{minutes:2.35,words:706},excerpt:"<p>GitHub Actions 的配置文件叫做 <code v-pre>workflow</code> 文件，存放在代码仓库的 <code v-pre>.github/workflows</code> 目录。</p>\n<p><code v-pre>workflow</code> 文件采用 <code v-pre>YAML</code> 格式，文件名可以任意取，但是后缀名统一为 <code v-pre>.yml</code>，比如<code v-pre>foo.yml</code>。</p>\n<p>一个库可以有多个 <code v-pre>workflow</code> 文件。GitHub 只要发现 <code v-pre>.github/workflows</code> 目录里面有 <code v-pre>.yml</code> 文件，就会自动运行该文件。</p>\n",date:"2021-02-18T00:00:00.000Z",category:["GitHub"],tag:["action","workflow"]},["/software/github/actions/config","/software/github/actions/config.md"]],["v-cf9c2128","/software/github/actions/gh-pages-deploy.html",{title:"github-pages-deploy",type:"article",readingTime:{minutes:2.38,words:715},excerpt:"<p>github-pages-deploy-action 用于自动将网站内容部署到 GitHub Pages。</p>\n<p>您可以使用这个 Action 将代码推送到您想要的任何分支中，包括 gh-pages 和 docs, 甚至可以处理跨存储库部署。</p>\n",date:"2021-02-20T00:00:00.000Z",category:["GitHub"],tag:["action","deploy","workflow"]},["/software/github/actions/gh-pages-deploy","/software/github/actions/gh-pages-deploy.md"]],["v-05524a3c","/software/github/actions/intro.html",{title:"Actions 介绍",icon:"info",type:"article",readingTime:{minutes:3.5,words:1049},excerpt:"<p>在 GitHub Actions 的仓库中自动化、自定义和执行软件开发工作流程。</p>\n<p>您可以发现、创建和共享操作以执行您喜欢的任何作业 (包括 CI/CD) ，并将操作合并到完全自定义的工作流程中。</p>\n",date:"2021-02-18T00:00:00.000Z",category:["GitHub"],tag:["action","介绍"]},["/software/github/actions/intro","/software/github/actions/intro.md"]],["v-580ce442","/code/language/js/browser/",{title:"浏览器",icon:"chrome",type:"article",readingTime:{minutes:.12,words:37},excerpt:"相关文档 浏览器介绍; 浏览器对象; 操作 DOM; 操作表单; 操作文件; Ajax; Promise; Canvas;",date:"2019-10-15T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/browser/index.html","/code/language/js/browser/README.md"]],["v-4157008c","/code/language/js/browser/ajax.html",{title:"AJAX",icon:"ajax",type:"article",readingTime:{minutes:7.39,words:2217},excerpt:"<p>Ajax 不是 JavaScript 的规范，它只是一个哥们“发明”的缩写: Asynchronous JavaScript and XML，意思就是用 JavaScript 执行异步网络请求。</p>\n",date:"2019-10-18T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/browser/ajax","/code/language/js/browser/ajax.md"]],["v-e636c4d4","/code/language/js/browser/browser-object.html",{title:"浏览器对象",icon:"object",type:"article",readingTime:{minutes:4.52,words:1355},excerpt:"<p>JavaScript 可以获取浏览器提供的很多对象，并进行操作。</p>\n",date:"2019-10-16T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/browser/browser-object","/code/language/js/browser/browser-object.md"]],["v-3fe5c342","/code/language/js/browser/canvas.html",{title:"Canvas",icon:"stack",type:"article",readingTime:{minutes:2.73,words:819},excerpt:"<p><code v-pre>Canvas</code> 是 HTML5 新增的组件，它就像一块幕布，可以用 JavaScript 在上面绘制各种图表、动画等。</p>\n",date:"2019-10-19T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/browser/canvas","/code/language/js/browser/canvas.md"]],["v-37881894","/code/language/js/browser/dom.html",{title:"操作 DOM",icon:"tree",type:"article",readingTime:{minutes:6.76,words:2028},excerpt:"<p>由于 HTML 文档被浏览器解析后就是一棵 DOM 树，要改变 HTML 的结构，就需要通过 JavaScript 来操作 DOM。</p>\n<p>始终记住 DOM 是一个树形结构。操作一个 DOM 节点实际上就是这么几个操作:</p>\n<ul>\n<li>\n<p>更新: 更新该 DOM 节点的内容，相当于更新了该 DOM 节点表示的 HTML 的内容；</p>\n</li>\n<li>\n<p>遍历: 遍历该 DOM 节点下的子节点，以便进行进一步操作；</p>\n</li>\n<li>\n<p>添加: 在该 DOM 节点下新增一个子节点，相当于动态增加了一个 HTML 节点；</p>\n</li>\n<li>\n<p>删除: 将该节点从 HTML 中删除，相当于删掉了该 DOM 节点的内容以及它包含的所有子节点。</p>\n</li>\n</ul>\n",date:"2019-10-16T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/browser/dom","/code/language/js/browser/dom.md"]],["v-fb7c1444","/code/language/js/browser/file.html",{title:"操作文件",icon:"file",type:"article",readingTime:{minutes:2.95,words:886},excerpt:"<p>在 HTML 表单中，可以上传文件的唯一控件就是 <code v-pre>&lt;input type=&quot;file&quot;&gt;</code>。</p>\n",date:"2019-10-17T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/browser/file","/code/language/js/browser/file.md"]],["v-3c952b96","/code/language/js/browser/form.html",{title:"操作表单",icon:"form",type:"article",readingTime:{minutes:3.95,words:1185},excerpt:"<p>用 JavaScript 操作表单和操作 DOM 是类似的，因为表单本身也是 DOM 树。</p>\n<p>不过表单的输入框、下拉框等可以接收用户输入，所以用 JavaScript 来操作表单，可以获得用户输入的内容，或者对一个输入框设置新的内容。</p>\n",date:"2019-10-17T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/browser/form","/code/language/js/browser/form.md"]],["v-3ac3fde8","/code/language/js/browser/intro.html",{title:"浏览器介绍",icon:"info",type:"article",readingTime:{minutes:1.9,words:570},excerpt:"<p>由于 JavaScript 的出现就是为了能在浏览器中运行，所以，浏览器自然是 JavaScript 开发者必须要关注的。</p>\n",date:"2019-10-15T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/browser/intro","/code/language/js/browser/intro.md"]],["v-5b96b7fd","/code/language/js/browser/promise.html",{title:"Promise",icon:"any",type:"article",readingTime:{minutes:5.13,words:1538},excerpt:"<p>在 JavaScript 的世界中，所有代码都是单线程执行的。</p>\n<p>由于这个“缺陷”，导致 JavaScript 的所有网络操作，浏览器事件，都必须是异步执行。异步执行可以用回调函数实现:</p>\n",date:"2019-10-18T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/browser/promise","/code/language/js/browser/promise.md"]],["v-7af69fbf","/code/language/js/es6/",{title:"es6 入门",icon:"es6",type:"article",readingTime:{minutes:.51,words:153},excerpt:"目录 ECMAScript 6 简介; let 和 const 命令; 变量的解构赋值; 字符串的扩展; 正则的扩展; 数值的扩展; 函数的扩展; 数组的扩展; 对象的扩展; Symbol; Set 和 Map 数据结构; Proxy; Reflect; Promise 对象; Iterator 和 for...of 循; Generator 函数的语法; ",author:"阮一峰",date:"2019-10-20T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/es6/index.html","/code/language/js/es6/README.md"]],["v-d3bec9c2","/code/language/js/es6/array.html",{title:"数组的扩展",icon:"array",type:"article",readingTime:{minutes:19.12,words:5737},excerpt:"扩展运算符 含义 扩展运算符(spread)是三个点(...)。它好比 rest 参数的逆运算，将一个数组转为用逗号分隔的参数序列。 该运算符主要用于函数调用。 上面代码中，array.push(...items) 和 add(...numbers) 这两行，都是函数的调用，它们的都使用了扩展运算符。该运算符将一个数组，变为参数序列。 扩展运算符与正常的函数",author:"阮一峰",date:"2019-10-21T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/es6/array","/code/language/js/es6/array.md"]],["v-5220625f","/code/language/js/es6/arraybuffer.html",{title:"ArrayBuffer",icon:"rank",type:"article",readingTime:{minutes:36.07,words:10820},excerpt:"<p><code v-pre>ArrayBuffer</code> 对象、<code v-pre>TypedArray</code> 视图和 <code v-pre>DataView</code> 视图是 JavaScript 操作二进制数据的一个接口。这些对象早就存在，属于独立的规格(2011 年 2 月发布)，ES6 将它们纳入了 ECMAScript 规格，并且增加了新的方法。它们都是以数组的语法处理二进制数据，所以统称为二进制数组。</p>\n",author:"阮一峰",date:"2019-10-25T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/es6/arraybuffer","/code/language/js/es6/arraybuffer.md"]],["v-e898ae48","/code/language/js/es6/async.html",{title:"async 函数",icon:"async",type:"article",readingTime:{minutes:22,words:6599},excerpt:"<p>ES2017 标准引入了 async 函数，使得异步操作变得更加方便。</p>\n<p>Async 函数是什么? 一句话，它就是 Generator 函数的语法糖。</p>\n",author:"阮一峰",date:"2019-10-23T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/es6/async","/code/language/js/es6/async.md"]],["v-e7d0ffd8","/code/language/js/es6/class-extends.html",{title:"Class 的继承",icon:"extend",type:"article",readingTime:{minutes:13.4,words:4020},excerpt:"Class 的继承 简介 Class 可以通过 extends 关键字实现继承，这比 ES5 的通过修改原型链实现继承，要清晰和方便很多。 上面代码定义了一个 ColorPoint 类，该类通过 extends 关键字，继承了 Point 类的所有属性和方法。但是由于没有部署任何代码，所以这两个类完全一样，等于复制了一个 Point 类。下面，我们在 Col",author:"阮一峰",date:"2019-10-23T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/es6/class-extends","/code/language/js/es6/class-extends.md"]],["v-65d00140","/code/language/js/es6/class.html",{title:"Class 的基本语法",icon:"class",type:"article",readingTime:{minutes:16.3,words:4889},excerpt:"Class 的基本语法 简介 JavaScript 语言中，生成实例对象的传统方法是通过构造函数。下面是一个例子。 上面这种写法跟传统的面向对象语言(比如 C++ 和 Java)差异很大，很容易让新学习这门语言的程序员感到困惑。 ES6 提供了更接近传统语言的写法，引入了 Class(类)这个概念，作为对象的模板。通过 class 关键字，可以定义类。 基本",author:"阮一峰",date:"2019-10-23T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/es6/class","/code/language/js/es6/class.md"]],["v-01199afd","/code/language/js/es6/decorator.html",{title:"修饰器",icon:"at",type:"article",readingTime:{minutes:11.18,words:3353},excerpt:"类的修饰 许多面向对象的语言都有修饰器(Decorator)函数，用来修改类的行为。目前，有一个提案将这项功能，引入了 ECMAScript。 上面代码中，@testable 就是一个修饰器。它修改了 MyTestableClass 这个类的行为，为它加上了静态属性 isTestable。testable 函数的参数 target 是 MyTestableC",author:"阮一峰",date:"2019-10-23T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/es6/decorator","/code/language/js/es6/decorator.md"]],["v-d9eeb42e","/code/language/js/es6/destructuring.html",{title:"变量的解构赋值",icon:"structure",type:"article",readingTime:{minutes:12.91,words:3874},excerpt:"变量的解构赋值 数组的解构赋值 基本用法 ES6 允许按照一定模式，从数组和对象中提取值，对变量进行赋值，这被称为解构(Destructuring)。 以前，为变量赋值，只能直接指定值。 ES6 允许写成下面这样。 上面代码表示，可以从数组中提取值，按照对应位置，对变量赋值。 本质上，这种写法属于“模式匹配”，只要等号两边的模式相同，左边的变量就会被赋予对应",author:"阮一峰",date:"2019-10-21T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/es6/destructuring","/code/language/js/es6/destructuring.md"]],["v-d486c4a0","/code/language/js/es6/fp.html",{title:"函数式编程",icon:"shell",type:"article",readingTime:{minutes:4.21,words:1263},excerpt:"函数式编程 JavaScript 语言从一诞生，就具有函数式编程的烙印。它将函数作为一种独立的数据类型，与其他数据类型处于完全平等的地位。在 JavaScript 语言中，您可以采用面向对象编程，也可以采用函数式编程。有人甚至说，JavaScript 是有史以来第一种被大规模采用的函数式编程语言。 ES6 的种种新增功能，使得函数式编程变得更方便、更强大。本",author:"阮一峰",date:"2019-10-21T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/es6/fp","/code/language/js/es6/fp.md"]],["v-412da2a2","/code/language/js/es6/function.html",{title:"函数的扩展",icon:"function",type:"article",readingTime:{minutes:30.23,words:9068},excerpt:"函数的扩展 函数参数的默认值 基本用法 ES6 之前，不能直接为函数的参数指定默认值，只能采用变通的方法。 上面代码检查函数 log 的参数 y 有没有赋值，如果没有，则指定默认值为 World。这种写法的缺点在于，如果参数 y 赋值了，但是对应的布尔值为 false，则该赋值不起作用。就像上面代码的最后一行，参数 y 等于空字符，结果被改为默认值。 为了避",author:"阮一峰",date:"2019-10-21T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/es6/function","/code/language/js/es6/function.md"]],["v-1e32d554","/code/language/js/es6/generator-async.html",{title:"Generator 异步应用",icon:"asynchronous",type:"article",readingTime:{minutes:19.73,words:5919},excerpt:"异步编程对 JavaScript 语言太重要。JavaScript 语言的执行环境是“单线程”的，如果没有异步编程，根本没法用，非卡死不可。本章主要介绍 Generator 函数如何完成异步操作。 传统方法 ES6 诞生以前，异步编程的方法，大概有下面四种。 回调函数; 事件监听; 发布/订阅; Promise 对象; Generator 函数将 JavaS",author:"阮一峰",date:"2019-10-23T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/es6/generator-async","/code/language/js/es6/generator-async.md"]],["v-2a661765","/code/language/js/es6/generator.html",{title:"Generator",icon:"cycle",type:"article",readingTime:{minutes:35.17,words:10552},excerpt:"简介 基本概念 Generator 函数是 ES6 提供的一种异步编程解决方案，语法行为与传统函数完全不同。本章详细介绍 Generator 函数的语法和 API，它的异步编程应用请看 Generator 函数的异步应用 一章。 Generator 函数有多种理解角度。语法上，首先可以把它理解成，Generator 函数是一个状态机，封装了多个内部状态。 执",author:"阮一峰",date:"2019-10-23T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/es6/generator","/code/language/js/es6/generator.md"]],["v-29563aec","/code/language/js/es6/intro.html",{title:"ES6 简介",icon:"info",type:"article",readingTime:{minutes:16.49,words:4947},excerpt:"<p>ECMAScript 6.0(以下简称 ES6)是 JavaScript 语言的下一代标准，已经在 2015 年 6 月正式发布了。它的目标，是使得 JavaScript 语言可以用来编写复杂的大型应用程序，成为企业级开发语言。</p>\n",author:"阮一峰",date:"2019-10-20T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/es6/intro","/code/language/js/es6/intro.md"]],["v-d4970868","/code/language/js/es6/iterator.html",{title:"Iterator 和 for...of 循环",icon:"loop",type:"article",readingTime:{minutes:18.25,words:5474},excerpt:"Iterator 和 for...of 循环 Iterator(遍历器)的概念 JavaScript 原有的表示“集合”的数据结构，主要是数组(Array)和对象(Object)，ES6 又添加了 Map 和 Set。这样就有了四种数据集合，用户还可以组合使用它们，定义自己的数据结构，比如数组的成员是 Map，Map 的成员是对象。这样就需要一种统一的接口机",author:"阮一峰",date:"2019-10-23T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/es6/iterator","/code/language/js/es6/iterator.md"]],["v-8113af46","/code/language/js/es6/let.html",{title:"let 和 const 命令",icon:"notice",type:"article",readingTime:{minutes:16.97,words:5090},excerpt:"let 和 const 命令 let 命令 基本用法 ES6 新增了 let 命令，用来声明变量。它的用法类似于 var，但是所声明的变量，只在 let 命令所在的代码块内有效。 上面代码在代码块之中，分别用 let 和 var 声明了两个变量。然后在代码块之外调用这两个变量，结果 let 声明的变量报错，var 声明的变量返回了正确的值。这表明，let 声",author:"阮一峰",date:"2019-10-21T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/es6/let","/code/language/js/es6/let.md"]],["v-5244cc12","/code/language/js/es6/mixin.html",{title:"Mixin",icon:"merge",type:"article",readingTime:{minutes:2.88,words:865},excerpt:"Mixin JavaScript 语言的设计是单一继承，即子类只能继承一个父类，不允许继承多个父类。这种设计保证了对象继承的层次结构是树状的，而不是复杂的网状结构。 但是，这大大降低了编程的灵活性。因为实际开发中，有时不可避免，子类需要继承多个父类。举例来说，“猫”可以继承“哺乳类动物”，也可以继承“宠物”。 各种单一继承的编程语言，有不同的多重继承解决方案",author:"阮一峰",date:"2022-04-19T07:13:07.000Z",category:["JavaScript"]},["/code/language/js/es6/mixin","/code/language/js/es6/mixin.md"]],["v-2fc52e78","/code/language/js/es6/module-loader.html",{title:"Module 的加载实现",icon:"load",type:"article",readingTime:{minutes:20.36,words:6108},excerpt:'上一章介绍了模块的语法，本章介绍如何在浏览器和 Node.js 之中加载 ES6 模块，以及实际开发中经常遇到的一些问题(比如循环加载)。 浏览器加载 传统方法 HTML 网页中，浏览器通过 `` 标签加载 JavaScript 脚本。 上面代码中，由于浏览器脚本的默认语言是 JavaScript，因此 type="application/javascrip',author:"阮一峰",date:"2019-10-23T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/es6/module-loader","/code/language/js/es6/module-loader.md"]],["v-0ec9be64","/code/language/js/es6/module.html",{title:"Module 的语法",icon:"module",type:"article",readingTime:{minutes:19.26,words:5778},excerpt:"概述 历史上，JavaScript 一直没有模块(module)体系，无法将一个大程序拆分成互相依赖的小文件，再用简单的方法拼装起来。其他语言都有这项功能，比如 Ruby 的 require、Python 的 import，甚至就连 CSS 都有 @import，但是 JavaScript 任何这方面的支持都没有，这对开发大型的、复杂的项目形成了巨大障碍。 ",author:"阮一峰",date:"2019-10-23T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/es6/module","/code/language/js/es6/module.md"]],["v-6bcd6e11","/code/language/js/es6/number.html",{title:"数值的扩展",icon:"number",type:"article",readingTime:{minutes:12.62,words:3787},excerpt:"二进制和八进制表示法 ES6 提供了二进制和八进制数值的新的写法，分别用前缀 0b (或 0B) 和 0o (或 0O )表示。 从 ES5 开始，在严格模式之中，八进制就不再允许使用前缀 0 表示，ES6 进一步明确，要使用前缀 0o 表示。 如果要将 0b 和 0o 前缀的字符串数值转为十进制，要使用 Number 方法。 Number.isFinite",author:"阮一峰",date:"2019-10-21T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/es6/number","/code/language/js/es6/number.md"]],["v-189ba04a","/code/language/js/es6/object.html",{title:"对象的扩展",icon:"object",type:"article",readingTime:{minutes:26.8,words:8039},excerpt:"对象的扩展 属性的简洁表示法 ES6 允许直接写入变量和函数，作为对象的属性和方法。这样的书写更加简洁。 上面代码表明，ES6 允许在对象之中，直接写变量。这时，属性名为变量名, 属性值为变量的值。下面是另一个例子。 除了属性简写，方法也可以简写。 下面是一个实际的例子。 这种写法用于函数的返回值，将会非常方便。 CommonJS 模块输出一组变量，就非常合",author:"阮一峰",date:"2019-10-21T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/es6/object","/code/language/js/es6/object.md"]],["v-55b00c46","/code/language/js/es6/promise.html",{title:"Promise 对象",icon:"promise",type:"article",readingTime:{minutes:23.58,words:7075},excerpt:"Promise 对象 Promise 的含义 Promise 是异步编程的一种解决方案，比传统的解决方案——回调函数和事件——更合理和更强大。它由社区最早提出和实现，ES6 将其写进了语言标准，统一了用法，原生提供了 Promise 对象。 所谓 Promise，简单说就是一个容器，里面保存着某个未来才会结束的事件(通常是一个异步操作)的结果。从语法上说，P",author:"阮一峰",date:"2019-10-23T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/es6/promise","/code/language/js/es6/promise.md"]],["v-3ac3b992","/code/language/js/es6/proposals.html",{title:"最新提案",icon:"proposal",type:"article",readingTime:{minutes:16.52,words:4955},excerpt:"<p>本章介绍一些尚未进入标准、但很有希望的最新提案。</p>\n",author:"阮一峰",date:"2019-10-25T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/es6/proposals","/code/language/js/es6/proposals.md"]],["v-6f7a082a","/code/language/js/es6/proxy.html",{title:"Proxy",icon:"proxy",type:"article",readingTime:{minutes:20.45,words:6134},excerpt:"<p>Proxy 用于修改某些操作的默认行为，等同于在语言层面做出修改，所以属于一种“元编程”(meta programming)，即对编程语言进行编程。</p>\n<p>Proxy 可以理解成，在目标对象之前架设一层“拦截”，外界对该对象的访问，都必须先通过这层拦截，因此提供了一种机制，可以对外界的访问进行过滤和改写。Proxy 这个词的原意是代理，用在这里表示由它来“代理”某些操作，可以译为“代理器”。</p>\n",author:"阮一峰",date:"2019-10-23T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/es6/proxy","/code/language/js/es6/proxy.md"]],["v-1b9d0426","/code/language/js/es6/reference.html",{title:"参考链接",icon:"quote",type:"article",readingTime:{minutes:13.34,words:4003},excerpt:"参考链接 官方文件 ECMAScript® 2015 Language Specification: ECMAScript 2015 规格; ECMAScript® 2016 Language Specification: ECMAScript 2016 规格; ECMAScript® 2017 Language Specification: ECMAScr",author:"阮一峰",date:"2019-10-25T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/es6/reference","/code/language/js/es6/reference.md"]],["v-55c5117b","/code/language/js/es6/reflect.html",{title:"Reflect",icon:"operate",type:"article",readingTime:{minutes:8.55,words:2566},excerpt:"概述 Reflect 对象与 Proxy 对象一样，也是 ES6 为了操作对象而提供的新 API。Reflect 对象的设计目的有这样几个。 (1) 将 Object 对象的一些明显属于语言内部的方法(比如 Object.defineProperty)，放到 Reflect 对象上。现阶段，某些方法同时在 Object 和 Reflect 对象上部署，未来的",author:"阮一峰",date:"2019-10-23T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/es6/reflect","/code/language/js/es6/reflect.md"]],["v-ba82bc1e","/code/language/js/es6/regex.html",{title:"正则的扩展",icon:"regexp",type:"article",readingTime:{minutes:16.02,words:4805},excerpt:"正则的扩展 RegExp 构造函数 在 ES5 中，RegExp 构造函数的参数有两种情况。 第一种情况是，参数是字符串，这时第二个参数表示正则表达式的修饰符(flag)。 第二种情况是，参数是一个正则表示式，这时会返回一个原有正则表达式的拷贝。 但是，ES5 不允许此时使用第二个参数添加修饰符，否则会报错。 ES6 改变了这种行为。如果 RegExp 构造",author:"阮一峰",date:"2019-10-21T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/es6/regex","/code/language/js/es6/regex.md"]],["v-0b0d2347","/code/language/js/es6/set-map.html",{title:"Set 和 Map 数据结构",icon:"set",type:"article",readingTime:{minutes:23.29,words:6986},excerpt:"Set 和 Map 数据结构 Set 基本用法 ES6 提供了新的数据结构 Set。它类似于数组，但是成员的值都是唯一的，没有重复的值。 Set 本身是一个构造函数，用来生成 Set 数据结构。 上面代码通过 add 方法向 Set 结构加入成员，结果表明 Set 结构不会添加重复的值。 Set 函数可以接受一个数组(或者具有 iterable 接口的其他数",author:"阮一峰",date:"2019-10-23T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/es6/set-map","/code/language/js/es6/set-map.md"]],["v-7953f4a6","/code/language/js/es6/simd.html",{title:"SIMD",icon:"process",type:"article",readingTime:{minutes:17.47,words:5241},excerpt:"SIMD 概述 SIMD(发音/sim-dee/)是“Single Instruction/Multiple Data”的缩写，意为“单指令，多数据”。它是 JavaScript 操作 CPU 对应指令的接口，您可以看做这是一种不同的运算执行模式。与它相对的是 SISD(“Single Instruction/Single Data”)，即“单指令，单数据”",author:"阮一峰",date:"2022-04-19T07:13:07.000Z",category:["JavaScript"]},["/code/language/js/es6/simd","/code/language/js/es6/simd.md"]],["v-1cd0e5c2","/code/language/js/es6/spec.html",{title:"读懂 ECMAScript 规格",icon:"creative",type:"article",readingTime:{minutes:12.28,words:3685},excerpt:"读懂 ECMAScript 规格 概述 规格文件是计算机语言的官方标准，详细描述语法规则和实现方法。 一般来说，没有必要阅读规格，除非您要写编译器。因为规格写得非常抽象和精炼，又缺乏实例，不容易理解，而且对于解决实际的应用问题，帮助不大。但是，如果您遇到疑难的语法问题，实在找不到答案，这时可以去查看规格文件，了解语言标准是怎么说的。规格是解决问题的“最后一招",author:"阮一峰",date:"2019-10-25T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/es6/spec","/code/language/js/es6/spec.md"]],["v-3466b36e","/code/language/js/es6/string.html",{title:"字符串的扩展",icon:"string",type:"article",readingTime:{minutes:18.9,words:5671},excerpt:"<p>ES6 加强了对 Unicode 的支持，并且扩展了字符串对象。</p>\n",author:"阮一峰",date:"2019-10-21T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/es6/string","/code/language/js/es6/string.md"]],["v-32817272","/code/language/js/es6/style.html",{title:"编程风格",icon:"style",type:"article",readingTime:{minutes:7.92,words:2375},excerpt:"编程风格 本章探讨如何将 ES6 的新语法，运用到编码实践之中，与传统的 JavaScript 语法结合在一起，写出合理的、易于阅读和维护的代码。 多家公司和组织已经公开了它们的风格规范，下面的内容主要参考了 Airbnb 公司的 JavaScript 风格规范。 块级作用域 1. let 取代 var ES6 提出了两个新的声明变量的命令: let 和 c",author:"阮一峰",date:"2019-10-23T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/es6/style","/code/language/js/es6/style.md"]],["v-2c2bed22","/code/language/js/es6/symbol.html",{title:"Symbol",icon:"symbol",type:"article",readingTime:{minutes:16.49,words:4946},excerpt:"Symbol 概述 ES5 的对象属性名都是字符串，这容易造成属性名的冲突。比如，您使用了一个他人提供的对象，但又想为这个对象添加新的方法(mixin 模式)，新方法的名字就有可能与现有方法产生冲突。如果有一种机制，保证每个属性的名字都是独一无二的就好了，这样就从根本上防止属性名的冲突。这就是 ES6 引入 Symbol 的原因。 ES6 引入了一种新的原始",author:"阮一峰",date:"2019-10-21T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/es6/symbol","/code/language/js/es6/symbol.md"]],["v-4613a302","/code/language/js/function/",{title:"函数",icon:"function",type:"article",readingTime:{minutes:.21,words:62},excerpt:"基础部分 函数介绍; 函数声明; 函数调用; 函数作用域; 解构赋值; this 的指向; 箭头函数; 进阶 高阶函数; map reduce 与 sort; 闭包; generator;",date:"2019-10-01T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/function/index.html","/code/language/js/function/README.md"]],["v-7ba4ff44","/code/language/js/function/arrow-function.html",{title:"箭头函数",icon:"arrow",type:"article",readingTime:{minutes:1.85,words:554},excerpt:'<p>ES6 标准新增了一种新的函数: Arrow Function (箭头函数)。</p>\n<p>为什么叫 Arrow Function ? 因为它的定义用的就是一个箭头:</p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=></span> x <span class="token operator">*</span> x<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>',date:"2019-10-03T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/function/arrow-function","/code/language/js/function/arrow-function.md"]],["v-797b419c","/code/language/js/function/call.html",{title:"函数的调用",icon:"call",type:"article",readingTime:{minutes:.92,words:276},excerpt:"调用函数时，要使用圆括号运算符。圆括号之中，可以加入函数的参数。 由于 JavaScript 允许传入任意个参数而不影响调用，因此传入的参数比定义的参数多也没有问题，虽然函数内部并不需要这些参数: 传入的参数比定义的少也没有问题: 此时 abs(x) 函数的参数 x 将收到 undefined，计算结果为 NaN。 要避免收到 undefined，可以对参数",date:"2019-10-02T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/function/call","/code/language/js/function/call.md"]],["v-02684b7d","/code/language/js/function/closure.html",{title:"闭包",icon:"lock",type:"article",readingTime:{minutes:5.59,words:1676},excerpt:"函数作为返回值 高阶函数除了可以接受函数作为参数外，还可以把函数作为结果值返回。 我们来实现一个对 Array 的求和。通常情况下，求和的函数是这样定义的: 变量 sum 等同于: 但是，如果不需要立刻求和，而是在后面的代码中，根据需要再计算怎么办? 可以不返回求和的结果，而是返回求和的函数! 上面的 lazy_sum() 等同于: 当我们调用 lazy_s",date:"2019-10-07T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/function/closure","/code/language/js/function/closure.md"]],["v-58f135ae","/code/language/js/function/declare.html",{title:"函数的声明",icon:"notice",type:"article",readingTime:{minutes:11.7,words:3509},excerpt:"<p>JavaScript 有三种声明函数的方法。</p>\n",date:"2019-10-01T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/function/declare","/code/language/js/function/declare.md"]],["v-556bf6ae","/code/language/js/function/destructuring.html",{title:"解构赋值",icon:"structure",type:"article",readingTime:{minutes:3.74,words:1122},excerpt:"<p>从 ES6 开始，JavaScript 引入了解构赋值，可以同时对一组变量进行赋值。</p>\n",date:"2019-10-03T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/function/destructuring","/code/language/js/function/destructuring.md"]],["v-88b653b6","/code/language/js/function/generator.html",{title:"generator",icon:"cycle",type:"article",readingTime:{minutes:3.52,words:1055},excerpt:"<p><code v-pre>generator</code> (生成器)是 ES6 标准引入的新的数据类型。一个 <code v-pre>generator</code> 看上去像一个函数，但可以返回多次。</p>\n<p>ES6 定义 <code v-pre>generator</code> 标准的哥们借鉴了 Python 的 generator 的概念和语法，如果您对 Python 的 generator 很熟悉，那么 ES6 的 generator 就是小菜一碟了。</p>\n",date:"2019-10-07T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/function/generator","/code/language/js/function/generator.md"]],["v-43034483","/code/language/js/function/higher-order-function.html",{title:"高阶函数",icon:"advance",type:"article",readingTime:{minutes:.74,words:222},excerpt:"<p>高阶函数英文叫 Higher-order function。</p>\n<p>JavaScript 的函数其实都指向某个变量。既然变量可以指向函数，函数的参数能接收变量，那么一个函数就可以接收另一个函数作为参数，这种函数就称之为高阶函数。</p>\n",date:"2019-10-05T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/function/higher-order-function","/code/language/js/function/higher-order-function.md"]],["v-417b4ca8","/code/language/js/function/intro.html",{title:"函数介绍",icon:"info",type:"article",readingTime:{minutes:1.66,words:498},excerpt:"<p>函数是一段可以反复调用的代码块。函数还能接受输入的参数，不同的参数会返回不同的值。</p>\n",date:"2019-10-01T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/function/intro","/code/language/js/function/intro.md"]],["v-754a14ed","/code/language/js/function/map-and-reduce.html",{title:"map & reduce",icon:"map",type:"article",readingTime:{minutes:5.93,words:1778},excerpt:'<p>如果您读过 Google 的那篇大名鼎鼎的论文 <a href="https://research.google.com/archive/mapreduce.html" target="_blank" rel="noopener noreferrer">“MapReduce: Simplified Data Processing on Large Clusters”<ExternalLinkIcon/></a>(要翻墙)，您就能大概明白 map/reduce 的概念。</p>\n',date:"2019-10-05T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/function/map-and-reduce","/code/language/js/function/map-and-reduce.md"]],["v-1029f0b9","/code/language/js/function/method.html",{title:"函数的属性和方法",icon:"list",type:"article",readingTime:{minutes:1.74,words:522},excerpt:"name 属性 函数的 name 属性返回函数的名字。 如果是通过变量赋值定义的函数，那么 name 属性返回变量名。 但是，上面这种情况，只有在变量的值是一个匿名函数时才是如此。如果变量的值是一个具名函数，那么 name 属性返回 function 关键字之后的那个函数名。 上面代码中，f3.name 返回函数表达式的名字。注意，真正的函数名还是 f3，而",date:"2022-04-19T07:13:07.000Z",category:["JavaScript"]},["/code/language/js/function/method","/code/language/js/function/method.md"]],["v-ee259a78","/code/language/js/function/scope.html",{title:"函数作用域",icon:"locate",type:"article",readingTime:{minutes:3.6,words:1080},excerpt:"变量作用域 请看 let 命令 函数作用域 定义 作用域(scope)指的是变量存在的范围。在 ES5 的规范中，JavaScript 只有两种作用域: 一种是全局作用域，变量在整个程序中一直存在，所有地方都可以读取；另一种是函数作用域，变量只在函数内部存在。ES6 又新增了块级作用域，本教程不涉及。 对于顶层函数来说，函数外部声明的变量就是全局变量(glo",date:"2019-10-02T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/function/scope","/code/language/js/function/scope.md"]],["v-d323d548","/code/language/js/function/this.html",{title:"this 的指向",icon:"context",type:"article",readingTime:{minutes:3.85,words:1155},excerpt:"在一个对象中绑定函数，称为这个对象的方法。 在 JavaScript 中，对象的定义是这样的: 但是，如果我们给 xiaoming 绑定一个函数，就可以做更多的事情。比如，写个 age() 方法，返回 xiaoming 的年龄: 是 的简写方式。 绑定到对象上的函数称为方法，和普通函数也没啥区别，但是它在内部使用了一个 this 关键字，这个东东是什么? 在",date:"2019-10-03T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/function/this","/code/language/js/function/this.md"]],["v-c928e2ea","/code/language/js/guide/",{title:"快速上手",icon:"creative",type:"article",readingTime:{minutes:.36,words:107},excerpt:'<div class="custom-container tip"><p class="custom-container-title">提示</p>\n<p>本部分将带您尽快进入 JavaScript 的世界。</p>\n</div>\n',date:"2019-09-14T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/guide/index.html","/code/language/js/guide/README.md"]],["v-0bfb0a2a","/code/language/js/guide/array.html",{title:"数组",icon:"array",type:"article",readingTime:{minutes:5.25,words:1576},excerpt:"<p>本文对 JavaScript 中数组的创建、访问、操作进行了简要的介绍。</p>\n",date:"2019-09-16T00:00:00.000Z",category:["JavaScript"],tag:["快速上手"]},["/code/language/js/guide/array","/code/language/js/guide/array.md"]],["v-7de37888","/code/language/js/guide/boolean.html",{title:"布尔值",icon:"boolean",type:"article",readingTime:{minutes:3.14,words:943},excerpt:"<p>布尔值代表“真”和“假”两个状态。“真”用关键字 <code v-pre>true</code> 表示，“假”用关键字 <code v-pre>false</code> 表示。布尔值只有这两个值。</p>\n",date:"2019-09-15T00:00:00.000Z",category:["JavaScript"],tag:["快速上手"]},["/code/language/js/guide/boolean","/code/language/js/guide/boolean.md"]],["v-293c8be9","/code/language/js/guide/condition.html",{title:"条件判断",icon:"condition",type:"article",readingTime:{minutes:5.98,words:1793},excerpt:"<p>JavaScript 提供 <code v-pre>if</code> 结构和 <code v-pre>switch</code> 结构，完成条件判断，即只有满足预设的条件，才会执行相应的语句。</p>\n",date:"2019-09-16T00:00:00.000Z",category:["JavaScript"],tag:["快速上手"]},["/code/language/js/guide/condition","/code/language/js/guide/condition.md"]],["v-a4a26144","/code/language/js/guide/data-structure.html",{title:"数据类型",icon:"type",type:"article",readingTime:{minutes:2.74,words:822},excerpt:"<p>JavaScript 语言的每一个值，都属于某一种数据类型。JavaScript 的数据类型，共有六种。</p>\n<ul>\n<li>数值 (number): 整数和小数(比如 <code v-pre>1</code> 和 <code v-pre>3.14</code>)</li>\n<li>字符串 (string): 文本(比如 <code v-pre>Hello World</code>)。</li>\n<li>布尔值 (boolean): 表示真伪的两个特殊值，即 <code v-pre>true</code> (真) 和 <code v-pre>false</code> (假)</li>\n<li><code v-pre>undefined</code>: 表示“未定义”或不存在，即由于目前没有定义，所以此处暂时没有任何值</li>\n<li><code v-pre>null</code>: 表示空值，即此处的值为空。</li>\n<li>对象 (object): 各种值组成的集合。</li>\n</ul>\n",date:"2019-09-15T00:00:00.000Z",category:["JavaScript"],tag:["快速上手"]},["/code/language/js/guide/data-structure","/code/language/js/guide/data-structure.md"]],["v-58215d54","/code/language/js/guide/exercise.html",{title:"实战",icon:"exercise",type:"article",readingTime:{minutes:9.02,words:2706},excerpt:"<p>在初步进入 JavaScript 的世界后，实战是十分重要的。本章是一些经典的案例，可以进行总结与测试。</p>\n",date:"2019-09-18T00:00:00.000Z",category:["JavaScript"],tag:["快速上手"]},["/code/language/js/guide/exercise","/code/language/js/guide/exercise.md"]],["v-a92fc154","/code/language/js/guide/function.html",{title:"函数",icon:"info",type:"article",readingTime:{minutes:3.19,words:958},excerpt:"<p>函数是一段可以反复调用的代码块。函数还能接受输入的参数，不同的参数会返回不同的值。</p>\n<p>基本上所有的高级语言都支持函数，JavaScript 也不例外。JavaScript 的函数不但是“头等公民”，而且可以像变量一样使用，具有非常强大的抽象能力。</p>\n",date:"2019-09-17T00:00:00.000Z",category:["JavaScript"],tag:["快速上手"]},["/code/language/js/guide/function","/code/language/js/guide/function.md"]],["v-068af29a","/code/language/js/guide/get-started.html",{title:"快速上手",icon:"creative",type:"article",readingTime:{minutes:4.19,words:1257},excerpt:'<div class="custom-container tip"><p class="custom-container-title">提示</p>\n<p>因为 JavaScript 是一门编程语言，不再是 HTML 和 CSS 这种看得见摸得着的东西，所以我们从如何引入、运行并调试开始讲起。</p>\n</div>\n',date:"2019-09-14T00:00:00.000Z",category:["JavaScript"],tag:["快速上手"]},["/code/language/js/guide/get-started","/code/language/js/guide/get-started.md"]],["v-24519f9d","/code/language/js/guide/grammar.html",{title:"基本语法",icon:"quote",type:"article",readingTime:{minutes:4.13,words:1240},excerpt:"<p>本章简单介绍 JavaScript 中语句，区块和注释的概念。</p>\n",date:"2019-09-14T00:00:00.000Z",category:["JavaScript"],tag:["快速上手"]},["/code/language/js/guide/grammar","/code/language/js/guide/grammar.md"]],["v-058fc208","/code/language/js/guide/iterable.html",{title:"遍历",icon:"refresh",type:"article",readingTime:{minutes:2.24,words:672},excerpt:"<p>本章对 JavaScript 的可遍历数据结构及如何遍历做一些介绍。</p>\n",date:"2019-09-19T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/guide/iterable","/code/language/js/guide/iterable.md"]],["v-927cc2ec","/code/language/js/guide/loop.html",{title:"循环",icon:"loop",type:"article",readingTime:{minutes:6.53,words:1958},excerpt:"<p>循环语句用于重复执行某个操作，它有多种形式，JavaScript 的循环有两种: <code v-pre>while</code> 循环和 <code v-pre>for</code> 循环。</p>\n",date:"2019-09-16T00:00:00.000Z",category:["JavaScript"],tag:["快速上手"]},["/code/language/js/guide/loop","/code/language/js/guide/loop.md"]],["v-19e36b6e","/code/language/js/guide/map-and-set.html",{title:"Map 和 Set",icon:"map",type:"article",readingTime:{minutes:2.25,words:674},excerpt:"<p>ES6 新引入的 Map 与 Set 是对数组和对象欠缺功能的一种补充。</p>\n",date:"2019-09-19T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/guide/map-and-set","/code/language/js/guide/map-and-set.md"]],["v-0c0c498f","/code/language/js/guide/object.html",{title:"对象",icon:"object",type:"article",readingTime:{minutes:2.54,words:763},excerpt:"<p>JavaScript 的对象是一种无序的集合数据类型，它由若干键值对组成。</p>\n<p>JavaScript 用一个 <code v-pre>{...}</code> 表示一个对象，键值对以 <code v-pre>xxx: xxx</code> 形式申明，用 <code v-pre>,</code> 隔开。</p>\n",date:"2019-09-17T00:00:00.000Z",category:["JavaScript"],tag:["快速上手"]},["/code/language/js/guide/object","/code/language/js/guide/object.md"]],["v-03b28006","/code/language/js/guide/string.html",{title:"字符串",icon:"string",type:"article",readingTime:{minutes:2.67,words:801},excerpt:"<p>JavaScript 的字符串就是用 <code v-pre>''</code> 或 <code v-pre>&quot;&quot;</code> 括起来的字符表示。</p>\n",date:"2019-09-16T00:00:00.000Z",category:["JavaScript"],tag:["快速上手"]},["/code/language/js/guide/string","/code/language/js/guide/string.md"]],["v-fe8f719c","/code/language/js/guide/variable.html",{title:"变量",icon:"variable",type:"article",readingTime:{minutes:5.88,words:1764},excerpt:"<p>变量的概念基本上和初中代数的方程变量是一致的，只是在计算机程序中，变量不仅可以是数字，还可以是任意数据类型。</p>\n",date:"2019-09-15T00:00:00.000Z",category:["JavaScript"],tag:["快速上手"]},["/code/language/js/guide/variable","/code/language/js/guide/variable.md"]],["v-c3105dca","/code/language/js/intro/",{title:"JavaScript 简介",icon:"info",type:"article",readingTime:{minutes:9.3,words:2789},excerpt:'<div class="custom-container info"><p class="custom-container-title">JavaScript 语言是什么</p>\n<p>JavaScript 是一种轻量级的脚本语言。所谓“脚本语言” (script language)，指的是它不具备开发操作系统的能力，而是只用来编写控制其他大型应用程序(比如浏览器)的“脚本”。</p>\n<p>JavaScript 也是一种嵌入式 (embedded) 语言。它本身提供的核心语法不算很多，只能用来做一些数学和逻辑运算。JavaScript 本身不提供任何与 I/O (输入/输出)相关的 API，都要靠宿主环境(host)提供，所以 JavaScript 只合适嵌入更大型的应用程序环境，去调用宿主环境提供的底层 API。</p>\n</div>\n',date:"2019-09-13T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/intro/index.html","/code/language/js/intro/README.md"]],["v-4c6d1960","/code/language/js/intro/history.html",{title:"JavaScript 历史",icon:"time",type:"article",readingTime:{minutes:19.05,words:5715},excerpt:"<p>本文介绍 JavaScript 的产生原因和发展历史、</p>\n",date:"2019-09-13T00:00:00.000Z",category:["JavaScript"],tag:["介绍"]},["/code/language/js/intro/history","/code/language/js/intro/history.md"]],["v-71e8640e","/code/language/js/object/JSON.html",{title:"JSON",icon:"json",type:"article",readingTime:{minutes:3.34,words:1002},excerpt:"<p><code v-pre>JSON</code> 是 <code v-pre>JavaScript Object Notation</code> 的缩写，它是一种数据交换格式。</p>\n",date:"2019-10-14T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/object/JSON","/code/language/js/object/JSON.md"]],["v-58da95f8","/code/language/js/object/",{title:"对象",icon:"object",type:"article",readingTime:{minutes:.21,words:63},excerpt:"<p>在 JavaScript 的世界里，一切都是对象。</p>\n",date:"2019-10-08T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/object/index.html","/code/language/js/object/README.md"]],["v-54277b4e","/code/language/js/object/class.html",{title:"class 继承",icon:"class",type:"article",readingTime:{minutes:1.92,words:575},excerpt:"<p>在上面的章节中我们看到了 JavaScript 的对象模型是基于原型实现的，特点是简单，缺点是理解起来比传统的类－实例模型要困难，最大的缺点是继承的实现需要编写大量代码，并且需要正确实现原型链。</p>\n<p>有没有更简单的写法? 有!</p>\n<p>新的关键字 <code v-pre>class</code> 从 ES6 开始正式被引入到 JavaScript 中。<code v-pre>class</code> 的目的就是让定义类更简单。</p>\n",date:"2019-10-10T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/object/class","/code/language/js/object/class.md"]],["v-341b5c65","/code/language/js/object/create.html",{title:"创建对象",icon:"add",type:"article",readingTime:{minutes:4.43,words:1329},excerpt:"<p>JavaScript 对每个创建的对象都会设置一个原型，指向它的原型对象。</p>\n",date:"2019-10-08T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/object/create","/code/language/js/object/create.md"]],["v-50d58ef3","/code/language/js/object/date.html",{title:"Date",icon:"date",type:"article",readingTime:{minutes:2.61,words:782},excerpt:"<p>在 JavaScript 中，<code v-pre>Date</code> 对象用来表示日期和时间。</p>\n",date:"2019-10-11T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/object/date","/code/language/js/object/date.md"]],["v-280a6107","/code/language/js/object/extend.html",{title:"原型继承",icon:"extend",type:"article",readingTime:{minutes:2.61,words:784},excerpt:"<p>在传统的基于 Class 的语言如 Java、C++ 中，继承的本质是扩展一个已有的 Class，并生成新的 Subclass。</p>\n<p>由于这类语言严格区分类和实例，继承实际上是类型的扩展。但是，JavaScript 由于采用原型继承，我们无法直接扩展一个 Class，因为根本不存在 Class 这种类型。</p>\n",date:"2019-10-10T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/object/extend","/code/language/js/object/extend.md"]],["v-322a7de5","/code/language/js/object/intro.html",{title:"对象及原型简介",icon:"object",type:"article",readingTime:{minutes:3.1,words:930},excerpt:"<p>在 JavaScript 的世界里，一切都是对象。</p>\n",date:"2019-10-08T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/object/intro","/code/language/js/object/intro.md"]],["v-380d4898","/code/language/js/object/regExp.html",{title:"RegExp",icon:"regexp",type:"article",readingTime:{minutes:7.19,words:2158},excerpt:"<p>字符串是编程时涉及到的最多的一种数据结构，对字符串进行操作的需求几乎无处不在。比如判断一个字符串是否是合法的 Email 地址，虽然可以编程提取 <code v-pre>@</code> 前后的子串，再分别判断是否是单词和域名，但这样做不但麻烦，而且代码难以复用。</p>\n",date:"2019-10-13T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/object/regExp","/code/language/js/object/regExp.md"]],["v-5d8cafd7","/code/language/js/object/wrap.html",{title:"包装对象",icon:"wrap",type:"article",readingTime:{minutes:1.81,words:543},excerpt:'<p>除了类型外，JavaScript 还提供了包装对象，熟悉 Java 就会了解 <code v-pre>int</code> 和 <code v-pre>Integer</code> 的关系。</p>\n<p><code v-pre>number</code>、<code v-pre>boolean</code> 和 <code v-pre>string</code> 都有包装对象。没错，在 JavaScript 中，字符串也区分 <code v-pre>string</code> 类型和它的包装类型。包装对象用 <code v-pre>new</code> 创建:</p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">const</span> n <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Number</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 123,生成了新的包装类型</span>\n<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Boolean</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true,生成了新的包装类型</span>\n<span class="token keyword">const</span> s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">"str"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \'str\',生成了新的包装类型</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',date:"2019-10-11T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/object/wrap","/code/language/js/object/wrap.md"]],["v-745f48d0","/code/language/js/operators/",{title:"运算符",icon:"symbol",type:"article",readingTime:{minutes:.21,words:63},excerpt:"二进制位运算符章节使用较少，无需阅读。 目录 算术运算符; 比较运算符; 布尔运算符; 二进制位运算符 ; 其他运算符，运算顺序;",date:"2019-09-26T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/operators/index.html","/code/language/js/operators/README.md"]],["v-091ae3d7","/code/language/js/operators/arithmetic.html",{title:"算术运算符",icon:"calculate",type:"article",readingTime:{minutes:7.22,words:2165},excerpt:"<p>运算符是处理数据的基本方法，用来从现有的值得到新的值。JavaScript 提供了多种运算符，覆盖了所有主要的运算。</p>\n",date:"2019-09-26T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/operators/arithmetic","/code/language/js/operators/arithmetic.md"]],["v-dd97b0f8","/code/language/js/operators/bit.html",{title:"二进制位运算符",icon:"bit",type:"article",readingTime:{minutes:9.31,words:2792},excerpt:"<p>二进制位运算符用于直接对二进制位进行计算，一共有 7 个。</p>\n<ul>\n<li><strong>二进制或运算符</strong>(or): 符号为 <code v-pre>|</code>，表示若两个二进制位都为 <code v-pre>0</code>，则结果为 <code v-pre>0</code>，否则为 <code v-pre>1</code>。</li>\n<li><strong>二进制与运算符</strong>(and): 符号为 <code v-pre>&amp;</code>，表示若两个二进制位都为 1，则结果为 1，否则为 0。</li>\n<li><strong>二进制否运算符</strong>(not): 符号为 <code v-pre>~</code>，表示对一个二进制位取反。</li>\n<li><strong>异或运算符</strong>(xor): 符号为 <code v-pre>^</code>，表示若两个二进制位不相同，则结果为 1，否则为 0。</li>\n<li><strong>左移运算符</strong>(left shift): 符号为 <code v-pre>&lt;&lt;</code>，详见下文解释。</li>\n<li><strong>右移运算符</strong>(right shift): 符号为 <code v-pre>&gt;&gt;</code>，详见下文解释。</li>\n<li><strong>头部补零的右移运算符</strong>(zero filled right shift): 符号为 <code v-pre>&gt;&gt;&gt;</code>，详见下文解释。</li>\n</ul>\n",date:"2019-09-28T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/operators/bit","/code/language/js/operators/bit.md"]],["v-7e4ee549","/code/language/js/operators/boolean.html",{title:"布尔运算符",icon:"boolean",type:"article",readingTime:{minutes:4.6,words:1381},excerpt:"<p>布尔运算符用于将表达式转为布尔值，一共包含四个运算符。</p>\n<ul>\n<li>取反运算符: <code v-pre>!</code></li>\n<li>且运算符: <code v-pre>&amp;&amp;</code></li>\n<li>或运算符: <code v-pre>||</code></li>\n<li>三元运算符: <code v-pre>?:</code></li>\n</ul>\n",date:"2019-09-28T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/operators/boolean","/code/language/js/operators/boolean.md"]],["v-c1f11850","/code/language/js/operators/comparison.html",{title:"比较运算符",icon:"compare",type:"article",readingTime:{minutes:7.27,words:2182},excerpt:"<p>JavaScript 一共提供了 8 个比较运算符。</p>\n<ul>\n<li><code v-pre>&gt;</code> 大于运算符</li>\n<li><code v-pre>&lt;</code> 小于运算符</li>\n<li><code v-pre>&lt;=</code> 小于或等于运算符</li>\n<li><code v-pre>&gt;=</code> 大于或等于运算符</li>\n<li><code v-pre>==</code> 相等运算符</li>\n<li><code v-pre>===</code> 严格相等运算符</li>\n<li><code v-pre>!=</code> 不相等运算符</li>\n<li><code v-pre>!==</code> 严格不相等运算符</li>\n</ul>\n<p>这八个比较运算符分成两类: 相等比较和非相等比较。两者的规则是不一样的，对于非相等的比较，算法是先看两个运算子是否都是字符串，如果是的，就按照字典顺序比较(实际上是比较 Unicode 码点)；否则，将两个运算子都转成数值，再比较数值的大小。</p>\n",date:"2019-09-26T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/operators/comparison","/code/language/js/operators/comparison.md"]],["v-4dfa691d","/code/language/js/operators/priority.html",{title:"其他运算符与运算顺序",icon:"more",type:"article",readingTime:{minutes:4.64,words:1392},excerpt:"void 运算符 void 运算符的作用是执行一个表达式，然后不返回任何值，或者说返回 undefined。 上面是 void 运算符的两种写法，都正确。建议采用后一种形式，即总是使用圆括号。因为 void 运算符的优先性很高，如果不使用括号，容易造成错误的结果。比如，void 4 + 7 实际上等同于 (void 4) + 7。 下面是 void 运算符的",date:"2019-09-30T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/operators/priority","/code/language/js/operators/priority.md"]],["v-9c53bea4","/code/language/js/types/",{title:"数据类型",icon:"type",type:"article",readingTime:{minutes:.25,words:74},excerpt:'<p>本章节是对数据类型的系统介绍。由于此章节的部分内容已经在 <RouterLink to="/code/language/js/guide/">快速上手</RouterLink> 涉及，部分内容有重复。</p>\n',date:"2019-09-20T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/types/index.html","/code/language/js/types/README.md"]],["v-5d22fd4e","/code/language/js/types/array.html",{title:"数组",icon:"array",type:"article",readingTime:{minutes:10.29,words:3088},excerpt:'<p>数组(array)是按次序排列的一组值。每个值的位置都有编号(从 0 开始)，整个数组用方括号表示。</p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"a"</span><span class="token punctuation">,</span> <span class="token string">"b"</span><span class="token punctuation">,</span> <span class="token string">"c"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>',date:"2019-09-25T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/types/array","/code/language/js/types/array.md"]],["v-43d08d42","/code/language/js/types/boolean.html",{title:"布尔值",icon:"boolean",type:"article",readingTime:{minutes:3.22,words:965},excerpt:'<div class="custom-container tip"><p class="custom-container-title">提示</p>\n<p>此教程与快速上手章节中的 <RouterLink to="/code/language/js/guide/boolean.html">布尔值介绍</RouterLink> 完全相同。</p>\n</div>\n',date:"2019-09-21T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/types/boolean","/code/language/js/types/boolean.md"]],["v-2f8d5e13","/code/language/js/types/function.html",{title:"函数",icon:"function",type:"article",readingTime:{minutes:8.62,words:2587},excerpt:"闭包 闭包(closure)是 JavaScript 语言的一个难点，也是它的特色，很多高级应用都要依靠闭包实现。 理解闭包，首先必须理解变量作用域。前面提到，JavaScript 有两种作用域: 全局作用域和函数作用域。函数内部可以直接读取全局变量。 上面代码中，函数 f1 可以读取全局变量 n。 但是，函数外部无法读取函数内部声明的变量。 上面代码中，函",date:"2019-09-23T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/types/function","/code/language/js/types/function.md"]],["v-747e149f","/code/language/js/types/general.html",{title:"数据类型概述",icon:"info",type:"article",readingTime:{minutes:2.84,words:851},excerpt:"<p>JavaScript 语言的每一个值，都属于某一种数据类型。</p>\n",date:"2019-09-20T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/types/general","/code/language/js/types/general.md"]],["v-eb21e1be","/code/language/js/types/null-undefined.html",{title:"null 和 undefined",icon:"null",type:"article",readingTime:{minutes:2.14,words:643},excerpt:"概述 null 与 undefined 都可以表示“没有”，含义非常相似。将一个变量赋值为 undefined 或 null，老实说，语法效果几乎没区别。 上面代码中，变量 a 分别被赋值为 undefined 和 null，这两种写法的效果几乎等价。 在 if 语句中，它们都会被自动转为 false，相等运算符(==)甚至直接报告两者相等。 从上面代码可见",date:"2019-09-21T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/types/null-undefined","/code/language/js/types/null-undefined.md"]],["v-f5d15c7c","/code/language/js/types/number.html",{title:"Number",icon:"number",type:"article",readingTime:{minutes:14.15,words:4245},excerpt:"整数和浮点数 JavaScript 内部，所有数字都是以 64 位浮点数形式储存，即使整数也是如此。所以，1 与 1.0 是相同的，是同一个数。 这就是说，JavaScript 语言的底层根本没有整数，所有数字都是小数(64 位浮点数)。容易造成混淆的是，某些运算只有整数才能完成，此时 JavaScript 会自动把 64 位浮点数，转成 32 位整数，然后",date:"2019-09-21T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/types/number","/code/language/js/types/number.md"]],["v-0cfc138c","/code/language/js/types/object.html",{title:"对象",icon:"object",type:"article",readingTime:{minutes:10.78,words:3234},excerpt:"概述 生成方法 对象(object)是 JavaScript 语言的核心概念，也是最重要的数据类型。 什么是对象? 简单说，对象就是一组“键值对”(key-value)的集合，是一种无序的复合数据集合。 上面代码中，大括号就定义了一个对象，它被赋值给变量 obj，所以变量 obj 就指向一个对象。该对象内部包含两个键值对(又称为两个“成员”)，第一个键值对是",date:"2019-09-23T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/types/object","/code/language/js/types/object.md"]],["v-01d2ec0c","/code/language/js/types/string.html",{title:"string",icon:"string",type:"article",readingTime:{minutes:8.61,words:2583},excerpt:"定义 字符串就是零个或多个排在一起的字符，放在单引号或双引号之中。 单引号字符串的内部，可以使用双引号。双引号字符串的内部，可以使用单引号。 上面两个都是合法的字符串。 如果要在单引号字符串的内部，使用单引号，就必须在内部的单引号前面加上反斜杠，用来转义。双引号字符串内部使用双引号，也是如此。 由于 HTML 语言的属性值使用双引号，所以很多项目约定 Jav",date:"2019-09-21T00:00:00.000Z",category:["JavaScript"]},["/code/language/js/types/string","/code/language/js/types/string.md"]],["v-752bb69b","/code/language/markdown/emoji/",{title:"Emoji 列表",icon:"emoji",type:"article",readingTime:{minutes:.12,words:35},excerpt:"人物 点击前往; 自然 点击前往; 对象 点击前往; 地点 点击前往; 符号 点击前往;",date:"2022-04-19T07:13:07.000Z",category:["Markdown"],tag:["Markdown","Emoji"]},["/code/language/markdown/emoji/index.html","/code/language/markdown/emoji/README.md"]],["v-d29981d2","/code/language/markdown/emoji/nature.html",{title:"自然",icon:"emoji",type:"article",readingTime:{minutes:.75,words:226},excerpt:":sunny: :sunny:; :umbrella: :umbrella:; :cloud: :cloud:; :snowflake: :snowflake:; :snowman: :snowman:; :zap: :zap:; :cyclone: :cyclone:; :foggy: :foggy:; :ocean: :ocean:; :cat: :ca",date:"2022-04-19T07:13:07.000Z",category:["Markdown"],tag:["Markdown","Emoji"]},["/code/language/markdown/emoji/nature","/code/language/markdown/emoji/nature.md"]],["v-51851102","/code/language/markdown/emoji/object.html",{title:"对象",icon:"emoji",type:"article",readingTime:{minutes:1.74,words:522},excerpt:":bamboo: :bamboo:; :giftheart: :giftheart:; :dolls: :dolls:; :schoolsatchel: :schoolsatchel:; :mortarboard: :mortarboard:; :flags: :flags:; :fireworks: :fireworks:; :sparkler: :spa",date:"2022-04-19T07:13:07.000Z",category:["Markdown"],tag:["Markdown","Emoji"]},["/code/language/markdown/emoji/object","/code/language/markdown/emoji/object.md"]],["v-6780fa2f","/code/language/markdown/emoji/people.html",{title:"人物",icon:"emoji",type:"article",readingTime:{minutes:1.19,words:356},excerpt:":smile: :smile:; :laughing: :laughing:; :blush: :blush:; :smiley: :smiley:; :smirk: :smirk:; :hearteyes: :hearteyes:; :kissingheart: :kissingheart:; :kissingclosedeyes: :kissingclo",date:"2022-04-19T07:13:07.000Z",category:["Markdown"],tag:["Markdown","Emoji"]},["/code/language/markdown/emoji/people","/code/language/markdown/emoji/people.md"]],["v-333335e6","/code/language/markdown/emoji/place.html",{title:"地点",icon:"emoji",type:"article",readingTime:{minutes:.63,words:190},excerpt:":house: :house:; :housewithgarden: :housewithgarden:; :school: :school:; :office: :office:; :postoffice: :postoffice:; :hospital: :hospital:; :bank: :bank:; :conveniencestore: :con",date:"2022-04-19T07:13:07.000Z",category:["Markdown"],tag:["Markdown","Emoji"]},["/code/language/markdown/emoji/place","/code/language/markdown/emoji/place.md"]],["v-0fb734c6","/code/language/markdown/emoji/symbol.html",{title:"符号",icon:"emoji",type:"article",readingTime:{minutes:1.27,words:382},excerpt:":one: :one:; :two: :two:; :three: :three:; :four: :four:; :five: :five:; :six: :six:; :seven: :seven:; :eight: :eight:; :nine: :nine:; :keycapten: :keycapten:; :1234: :1234:; :zero",date:"2022-04-19T07:13:07.000Z",category:["Markdown"],tag:["Markdown","Emoji"]},["/code/language/markdown/emoji/symbol","/code/language/markdown/emoji/symbol.md"]],["v-054e96dc","/code/language/python/advance/",{title:"Python 高级语法",icon:"advance",type:"article",readingTime:{minutes:.08,words:23},excerpt:"目录 切片; 迭代; 列表生成式; 生成器; 迭代器;",author:"廖雪峰",date:"2020-05-28T00:00:00.000Z",category:["Python"]},["/code/language/python/advance/index.html","/code/language/python/advance/README.md"]],["v-0d6dbef8","/code/language/python/advance/generator.html",{title:"生成器",icon:"cycle",type:"article",readingTime:{minutes:5.46,words:1638},excerpt:"<p>通过列表生成式，我们可以直接创建一个列表。但是，受到内存限制，列表容量肯定是有限的。而且，创建一个包含 100 万个元素的列表，不仅占用很大的存储空间，如果我们仅仅需要访问前面几个元素，那后面绝大多数元素占用的空间都白白浪费了。</p>\n<p>所以，如果列表元素可以按照某种算法推算出来，那我们是否可以在循环的过程中不断推算出后续的元素呢? 这样就不必创建完整的 list，从而节省大量的空间。在 Python 中，这种一边循环一边计算的机制，称为生成器: generator。</p>\n",author:"廖雪峰",date:"2020-05-29T00:00:00.000Z",category:["Python"]},["/code/language/python/advance/generator","/code/language/python/advance/generator.md"]],["v-5fe8612e","/code/language/python/advance/iteration.html",{title:"迭代",icon:"refresh",type:"article",readingTime:{minutes:2.14,words:642},excerpt:"<p>如果给定一个 list 或 tuple，我们可以通过 for 循环来遍历这个 list 或 tuple，这种遍历我们称为迭代(Iteration)。</p>\n",author:"廖雪峰",date:"2020-05-28T00:00:00.000Z",category:["Python"]},["/code/language/python/advance/iteration","/code/language/python/advance/iteration.md"]],["v-002015d9","/code/language/python/advance/iterator.html",{title:"迭代器",icon:"refresh",type:"article",readingTime:{minutes:2.19,words:658},excerpt:"我们已经知道，可以直接作用于 for 循环的数据类型有以下几种: 一类是集合数据类型，如 list、tuple、dict、set、str 等； 一类是 generator，包括生成器和带 yield 的 generator function。 这些可以直接作用于 for 循环的对象统称为可迭代对象: Iterable。 可以使用 isinstance()判断",author:"廖雪峰",date:"2020-05-29T00:00:00.000Z",category:["Python"]},["/code/language/python/advance/iterator","/code/language/python/advance/iterator.md"]],["v-578855ad","/code/language/python/advance/list-comprehensions.html",{title:"列表生成式",icon:"list",type:"article",readingTime:{minutes:3.19,words:958},excerpt:"<p>列表生成式即 List Comprehensions，是 Python 内置的非常简单却强大的可以用来创建 list 的生成式。</p>\n",date:"2020-05-29T00:00:00.000Z",category:["Python"]},["/code/language/python/advance/list-comprehensions","/code/language/python/advance/list-comprehensions.md"]],["v-1e6d56ce","/code/language/python/advance/slice.html",{title:"切片",icon:"stack",type:"article",readingTime:{minutes:2.49,words:747},excerpt:"取一个 list 或 tuple 的部分元素是非常常见的操作。比如，一个 list 如下: 取前 3 个元素，应该怎么做? 笨办法: 之所以是笨办法是因为扩展一下，取前 N 个元素就没辙了。 取前 N 个元素，也就是索引为 0-(N-1)的元素，可以用循环: 对这种经常取指定索引范围的操作，用循环十分繁琐，因此，Python 提供了切片(Slice)操作符，",author:"廖雪峰",date:"2020-05-28T00:00:00.000Z",category:["Python"]},["/code/language/python/advance/slice","/code/language/python/advance/slice.md"]],["v-54d1615c","/code/language/python/function/",{title:"函数",icon:"function",type:"article",readingTime:{minutes:.09,words:27},excerpt:"目录 函数介绍; 函数定义; 函数调用; 函数参数; 递归调用;",author:"廖雪峰",date:"2020-05-25T00:00:00.000Z",category:["Python"]},["/code/language/python/function/index.html","/code/language/python/function/README.md"]],["v-061793ac","/code/language/python/function/argument.html",{title:"函数的参数",icon:"variable",type:"article",readingTime:{minutes:13.31,words:3993},excerpt:"<p>定义函数的时候，我们把参数的名字和位置确定下来，函数的接口定义就完成了。对于函数的调用者来说，只需要知道如何传递正确的参数，以及函数将返回什么样的值就够了，函数内部的复杂逻辑被封装起来，调用者无需了解。</p>\n<p>Python 的函数定义非常简单，但灵活度却非常大。除了正常定义的必选参数外，还可以使用默认参数、可变参数和关键字参数，使得函数定义出来的接口，不但能处理复杂的参数，还可以简化调用者的代码。</p>\n",author:"廖雪峰",date:"2020-05-27T00:00:00.000Z",category:["Python"]},["/code/language/python/function/argument","/code/language/python/function/argument.md"]],["v-2ca65e29","/code/language/python/function/call.html",{title:"调用函数",icon:"call",type:"article",readingTime:{minutes:1.6,words:479},excerpt:'<p>Python 内置了很多有用的函数，我们可以直接调用。</p>\n<p>要调用一个函数，需要知道函数的名称和参数，比如求绝对值的函数 <code v-pre>abs</code>，只有一个参数。可以直接从 Python 的官方网站 <a href="http://docs.python.org/3/library/functions.html#abs" target="_blank" rel="noopener noreferrer">查看文档<ExternalLinkIcon/></a>:</p>\n',author:"廖雪峰",date:"2020-05-26T00:00:00.000Z",category:["Python"]},["/code/language/python/function/call","/code/language/python/function/call.md"]],["v-fc30e528","/code/language/python/function/define.html",{title:"定义函数",icon:"define",type:"article",readingTime:{minutes:3.94,words:1181},excerpt:"<p>在 Python 中，定义一个函数要使用 <code v-pre>def</code> 语句，依次写出函数名、括号、括号中的参数和冒号 <code v-pre>:</code>，然后，在缩进块中编写函数体，函数的返回值用 <code v-pre>return</code> 语句返回。</p>\n",author:"廖雪峰",date:"2020-05-26T00:00:00.000Z",category:["Python"]},["/code/language/python/function/define","/code/language/python/function/define.md"]],["v-dd0a6282","/code/language/python/function/intro.html",{title:"函数介绍",icon:"info",type:"article",readingTime:{minutes:1.67,words:502},excerpt:"我们知道圆的面积计算公式为: $S = \\pi r^2$ 当我们知道半径 $r$ 的值时，就可以根据公式计算出面积。假设我们需要计算 3 个不同大小的圆的面积: 当代码出现有规律的重复的时候，您就需要当心了，每次写 3.14 x x 不仅很麻烦，而且，如果要把 3.14 改成 3.14159265359 的时候，得全部替换。 函数是什么 函数是一段可以反复调",author:"廖雪峰",date:"2020-05-25T00:00:00.000Z",category:["Python"]},["/code/language/python/function/intro","/code/language/python/function/intro.md"]],["v-0416c3b9","/code/language/python/function/recursive.html",{title:"递归函数",icon:"refresh",type:"article",readingTime:{minutes:3.11,words:934},excerpt:"<p>在函数内部，可以调用其他函数。如果一个函数在内部调用自身本身，这个函数就是递归函数。</p>\n",author:"廖雪峰",date:"2020-05-27T00:00:00.000Z",category:["Python"]},["/code/language/python/function/recursive","/code/language/python/function/recursive.md"]],["v-4f81c6bb","/code/language/python/functional-programming/",{title:"函数式编程",icon:"function",type:"article",readingTime:{minutes:1.83,words:550},excerpt:"函数是 Python 内建支持的一种封装，我们通过把大段代码拆成函数，通过一层一层的函数调用，就可以把复杂任务分解成简单的任务，这种分解可以称之为面向过程的程序设计。函数就是面向过程的程序设计的基本单元。 而函数式编程(请注意多了一个“式”字)——Functional Programming，虽然也可以归结到面向过程的程序设计，但其思想更接近数学计算。 我们",author:"廖雪峰",date:"2020-05-31T00:00:00.000Z",category:["Python"]},["/code/language/python/functional-programming/index.html","/code/language/python/functional-programming/README.md"]],["v-f95524f4","/code/language/python/functional-programming/anonymous-function.html",{title:"匿名函数",icon:"anonymous",type:"article",readingTime:{minutes:1.12,words:337},excerpt:"当我们在传入函数时，有些时候，不需要显式地定义函数，直接传入匿名函数更方便。 在 Python 中，对匿名函数提供了有限支持。还是以 map() 函数为例，计算 $f(x)=x^2$ 时，除了定义一个 $f(x)$ 的函数外，还可以直接传入匿名函数: 通过对比可以看出，匿名函数 lambda x: x* x 实际上就是: 关键字 lambda 表示匿名函数，",author:"廖雪峰",date:"2021-03-15T00:00:00.000Z",category:["Python"]},["/code/language/python/functional-programming/anonymous-function","/code/language/python/functional-programming/anonymous-function.md"]],["v-e7b24e0e","/code/language/python/functional-programming/decorator.html",{title:"装饰器",icon:"decorate",type:"article",readingTime:{minutes:3.44,words:1032},excerpt:"由于函数也是一个对象，而且函数对象可以被赋值给变量，所以，通过变量也能调用该函数。 函数对象有一个 name 属性，可以拿到函数的名字: 现在，假设我们要增强 now() 函数的功能，比如，在函数调用前后自动打印日志，但又不希望修改 now() 函数的定义，这种在代码运行期间动态增加功能的方式，称之为“装饰器” (Decorator) 。 本质上，decor",author:"廖雪峰",date:"2021-03-15T00:00:00.000Z",category:["Python"]},["/code/language/python/functional-programming/decorator","/code/language/python/functional-programming/decorator.md"]],["v-63939790","/code/language/python/functional-programming/parital-function.html",{title:"偏函数",icon:"plugin",type:"article",readingTime:{minutes:2.01,words:603},excerpt:"Python 的 functools 模块提供了很多有用的功能，其中一个就是偏函数 (Partial function) 。 要注意，这里的偏函数和数学意义上的偏函数不一样。 在介绍函数参数的时候，我们讲到，通过设定参数的默认值，可以降低函数调用的难度。而偏函数也可以做到这一点。举例如下: int() 函数可以把字符串转换为整数，当仅传入字符串时，int()",author:"廖雪峰",date:"2021-03-15T00:00:00.000Z",category:["Python"]},["/code/language/python/functional-programming/parital-function","/code/language/python/functional-programming/parital-function.md"]],["v-7b8e695f","/code/language/python/functional-programming/return-function.html",{title:"返回函数",icon:"return",type:"article",readingTime:{minutes:2.88,words:864},excerpt:"函数作为返回值 高阶函数除了可以接受函数作为参数外，还可以把函数作为结果值返回。 我们来实现一个可变参数的求和。通常情况下，求和的函数是这样定义的: 但是，如果不需要立刻求和，而是在后面的代码中，根据需要再计算怎么办? 可以不返回求和的结果，而是返回求和的函数: 当我们调用 lazy_sum() 时，返回的并不是求和结果，而是求和函数: 调用函数 f 时，才",author:"廖雪峰",date:"2020-06-02T00:00:00.000Z",category:["Python"]},["/code/language/python/functional-programming/return-function","/code/language/python/functional-programming/return-function.md"]],["v-435b5698","/code/language/python/guide/",{title:"快速上手",icon:"creative",type:"article",readingTime:{minutes:.23,words:69},excerpt:"<p>本章节介绍 Python 的基础语法，帮助您尽快了解 Python 的基础内容</p>\n",author:"廖雪峰",date:"2020-05-19T00:00:00.000Z",category:["Python"]},["/code/language/python/guide/index.html","/code/language/python/guide/README.md"]],["v-03bbd203","/code/language/python/guide/basic.html",{title:"Python 基础",icon:"module",type:"article",readingTime:{minutes:9.86,words:2959},excerpt:"<p>Python 是一种计算机编程语言。计算机编程语言和我们日常使用的自然语言有所不同，最大的区别就是，自然语言在不同的语境下有不同的理解，而计算机要根据编程语言执行任务，就必须保证编程语言写出的程序决不能有歧义，所以，任何一种编程语言都有自己的一套语法，编译器或者解释器就是负责把符合语法的程序代码转换成 CPU 能够执行的机器码，然后执行。Python 也不例外。</p>\n",author:"廖雪峰",date:"2020-05-21T00:00:00.000Z",category:["Python"]},["/code/language/python/guide/basic","/code/language/python/guide/basic.md"]],["v-83da8d94","/code/language/python/guide/condition.html",{title:"条件判断",icon:"condition",type:"article",readingTime:{minutes:2.43,words:730},excerpt:"<p>计算机之所以能做很多自动化的任务，因为它可以自己做条件判断。</p>\n<p>比如，输入用户年龄，根据年龄打印不同的内容，在 Python 程序中，用 <code v-pre>if</code> 语句实现:</p>\n",author:"廖雪峰",date:"2020-05-24T00:00:00.000Z",category:["Python"]},["/code/language/python/guide/condition","/code/language/python/guide/condition.md"]],["v-13c3cbe8","/code/language/python/guide/dict-and-set.html",{title:"dict 和 set",icon:"map",type:"article",readingTime:{minutes:9.71,words:2913},excerpt:"<p><code v-pre>dict</code> 和 <code v-pre>set</code> 是 Python 中常用的数据结构。</p>\n",author:"廖雪峰",date:"2020-05-25T00:00:00.000Z",category:["Python"]},["/code/language/python/guide/dict-and-set","/code/language/python/guide/dict-and-set.md"]],["v-f3b0732e","/code/language/python/guide/exercise.html",{title:"练习",icon:"exercise",type:"article",readingTime:{minutes:.26,words:79},excerpt:"BMI 小明的成绩从去年的 72 分提升到了今年的 85 分，请计算小明成绩提升的百分点，并用字符串格式化显示出 'xx.x%'，只保留小数点后 1 位: 答案[^exercise1] [^exercise1]:",author:"廖雪峰",date:"2020-06-02T00:00:00.000Z",category:["Python"]},["/code/language/python/guide/exercise","/code/language/python/guide/exercise.md"]],["v-159c09db","/code/language/python/guide/io.html",{title:"输入和输出",icon:"IO",type:"article",readingTime:{minutes:3.52,words:1056},excerpt:"<p>一个脚本语言少不了与用户进行交互，就一定涉及到输入输出。</p>\n",author:"廖雪峰",date:"2020-05-20T00:00:00.000Z",category:["Python"]},["/code/language/python/guide/io","/code/language/python/guide/io.md"]],["v-8278a984","/code/language/python/guide/list-and-tuple.html",{title:"list 和 tuple",icon:"list",type:"article",readingTime:{minutes:4.44,words:1333},excerpt:"<p><code v-pre>list</code> 和 <code v-pre>tuple</code> 是 Python 中常用的数据结构。</p>\n",author:"廖雪峰",date:"2020-05-23T00:00:00.000Z",category:["Python"]},["/code/language/python/guide/list-and-tuple","/code/language/python/guide/list-and-tuple.md"]],["v-53cd951d","/code/language/python/guide/loop.html",{title:"循环",icon:"loop",type:"article",readingTime:{minutes:3.38,words:1014},excerpt:"要计算 $1+2+3$ ，我们可以直接写表达式: 要计算 $1+2+3+...+10$ ，勉强也能写出来。 但是，要计算 $1+2+3+...+10000$ ，直接写表达式就不可能了。 为了让计算机能计算成千上万次的重复运算，我们就需要循环语句。 Python 的循环有两种，一种是 for...in 循环，依次把 list 或 tuple 中的每个元素迭代出",author:"廖雪峰",date:"2020-05-24T00:00:00.000Z",category:["Python"]},["/code/language/python/guide/loop","/code/language/python/guide/loop.md"]],["v-efe14460","/code/language/python/guide/string.html",{title:"字符串",icon:"string",type:"article",readingTime:{minutes:5.37,words:1612},excerpt:"在最新的 Python 3 版本中，字符串是以 Unicode 编码的，也就是说，Python 的字符串支持多语言，例如: 对于单个字符的编码，Python 提供了 ord() 函数获取字符的整数表示，chr() 函数把编码转换为对应的字符: 如果知道字符的整数编码，还可以用十六进制这么写 str: 两种写法完全是等价的。 由于 Python 的字符串类型是",author:"廖雪峰",date:"2020-05-22T00:00:00.000Z",category:["Python"]},["/code/language/python/guide/string","/code/language/python/guide/string.md"]],["v-20cff4f2","/code/language/python/guide/write.html",{title:"第一个 Python 程序",icon:"info",type:"article",readingTime:{minutes:3.33,words:998},excerpt:"<p>在正式编写第一个 Python 程序前，我们先复习一下什么是命令行模式和 Python 交互模式。</p>\n",author:"廖雪峰",date:"2020-05-20T00:00:00.000Z",category:["Python"]},["/code/language/python/guide/write","/code/language/python/guide/write.md"]],["v-46679928","/code/language/python/intro/",{title:"介绍",icon:"info",type:"article",readingTime:{minutes:.05,words:14},excerpt:"目录 Python 介绍; Python 安装; 解释器;",author:"廖雪峰",date:"2020-05-25T00:00:00.000Z",category:["Python"]},["/code/language/python/intro/index.html","/code/language/python/intro/README.md"]],["v-2446fd74","/code/language/python/intro/install.html",{title:"安装 Python",icon:"install",type:"article",readingTime:{minutes:1.92,words:575},excerpt:"要开始学习 Python 编程，首先就得把 Python 安装到您的电脑里。安装后，您会得到 Python 解释器(就是负责运行 Python 程序的)，一个命令行交互环境，还有一个简单的集成开发环境。本节将指导您如何安装 Python。 在 Mac 上安装 Python 如果您正在使用 Mac，系统是 OS X>=10.9，那么系统自带的 Python 版",author:"廖雪峰",date:"2020-05-18T00:00:00.000Z",category:["Python"],tag:["安装"]},["/code/language/python/intro/install","/code/language/python/intro/install.md"]],["v-4a2b6072","/code/language/python/intro/interpreter.html",{title:"Python 解释器",icon:"back-stage",type:"article",readingTime:{minutes:2.14,words:642},excerpt:"<p>当我们编写 Python 代码时，我们得到的是一个包含 Python 代码的以 <code v-pre>.py</code> 为扩展名的文本文件。要运行代码，就需要 Python 解释器去执行 <code v-pre>.py</code> 文件。</p>\n",author:"廖雪峰",date:"2020-05-19T00:00:00.000Z",category:["Python"]},["/code/language/python/intro/interpreter","/code/language/python/intro/interpreter.md"]],["v-271d75d6","/code/language/python/intro/intro.html",{title:"Python 简介",icon:"info",type:"article",readingTime:{minutes:4.25,words:1274},excerpt:"<p>本节将简单介绍 Python 的历史。</p>\n",author:"廖雪峰",date:"2020-05-18T00:00:00.000Z",category:["Python"],tag:["介绍"]},["/code/language/python/intro/intro","/code/language/python/intro/intro.md"]],["v-5af931fe","/code/language/python/module/",{title:"模块",icon:"module",type:"article",readingTime:{minutes:.06,words:18},excerpt:"目录 介绍; 使用模块; 安装第三方模块;",author:"廖雪峰",date:"2021-03-27T00:00:00.000Z",category:["Python"]},["/code/language/python/module/index.html","/code/language/python/module/README.md"]],["v-435cedc8","/code/language/python/module/install.html",{title:"安装第三方模块",icon:"install",type:"article",readingTime:{minutes:3.05,words:914},excerpt:"在 Python 中，安装第三方模块，是通过包管理工具 pip 完成的。 如果您正在使用 Mac 或 Linux，安装 pip 本身这个步骤就可以跳过了。 如果您正在使用 Windows，请参考 安装 Python 一节的内容，确保安装时勾选了 pip 和 Add python.exe to Path。 在命令提示符窗口下尝试运行 pip，如果 Window",author:"廖雪峰",date:"2021-03-27T00:00:00.000Z",category:["Python"]},["/code/language/python/module/install","/code/language/python/module/install.md"]],["v-fddb6b2a","/code/language/python/module/intro.html",{title:"模块",icon:"info",type:"article",readingTime:{minutes:2.75,words:826},excerpt:"<p>在计算机程序的开发过程中，随着程序代码越写越多，在一个文件里代码就会越来越长，越来越不容易维护。为了编写可维护的代码，我们把很多函数分组，分别放到不同的文件里，这样，每个文件包含的代码就相对较少，很多编程语言都采用这种组织代码的方式。在 Python 中，一个 <code v-pre>.py</code> 文件就称之为一个模块 (Module) 。</p>\n",author:"廖雪峰",date:"2021-03-27T00:00:00.000Z",category:["Python"]},["/code/language/python/module/intro","/code/language/python/module/intro.md"]],["v-65a32754","/code/language/python/module/usage.html",{title:"使用模块",icon:"config",type:"article",readingTime:{minutes:3.57,words:1072},excerpt:"<p>Python 本身就内置了很多非常有用的模块，只要安装完毕，这些模块就可以立刻使用。</p>\n",author:"廖雪峰",date:"2021-03-27T00:00:00.000Z",category:["Python"]},["/code/language/python/module/usage","/code/language/python/module/usage.md"]],["v-6730ea78","/code/language/python/oop/",{title:"面向对象编程",type:"article",readingTime:{minutes:.12,words:35},excerpt:"目录 介绍; 类和实例; 继承和多态; 属性; 获取对象信息; 定制类; 特殊的 class;",author:"廖雪峰",date:"2021-03-28T00:00:00.000Z",category:["Python"]},["/code/language/python/oop/index.html","/code/language/python/oop/README.md"]],["v-73a24a3a","/code/language/python/oop/customize.html",{title:"定制类",icon:"customize",type:"article",readingTime:{minutes:7.37,words:2212},excerpt:"看到类似 slots 这种形如 xxx 的变量或者函数名就要注意，这些在 Python 中是有特殊用途的。 slots 我们已经知道怎么用了，len() 方法我们也知道是为了能让 class 作用于 len() 函数。 除此之外，Python 的 class 中还有许多这样有特殊用途的函数，可以帮助我们定制类。 str 我们先定义一个 Student 类，打",author:"廖雪峰",date:"2021-03-28T00:00:00.000Z",category:["Python"]},["/code/language/python/oop/customize","/code/language/python/oop/customize.md"]],["v-8fa6968a","/code/language/python/oop/extend.html",{title:"继承和多态",icon:"extend",type:"article",readingTime:{minutes:8.7,words:2611},excerpt:"在 OOP 程序设计中，当我们定义一个 class 的时候，可以从某个现有的 class 继承，新的 class 称为子类 (Subclass) ，而被继承的 class 称为基类、父类或超类 (Base class、Super class) 。 比如，我们已经编写了一个名为 Animal 的 class，有一个 run() 方法可以直接打印: 当我们需要编",author:"廖雪峰",date:"2021-03-28T00:00:00.000Z",category:["Python"]},["/code/language/python/oop/extend","/code/language/python/oop/extend.md"]],["v-1d5feaa7","/code/language/python/oop/info.html",{title:"获取对象信息",icon:"info",type:"article",readingTime:{minutes:4.72,words:1417},excerpt:"当我们拿到一个对象的引用时，如何知道这个对象是什么类型、有哪些方法呢？ 使用 type() 首先，我们来判断对象类型，使用 type() 函数: 基本类型都可以用 type() 判断: 如果一个变量指向函数或者类，也可以用 type() 判断: 但是 type() 函数返回的是什么类型呢？它返回对应的 Class 类型。如果我们要在 if 语句中判断，就需要",author:"廖雪峰",date:"2021-03-28T00:00:00.000Z",category:["Python"]},["/code/language/python/oop/info","/code/language/python/oop/info.md"]],["v-0b4f55c0","/code/language/python/oop/instance.html",{title:"类和实例",icon:"class",type:"article",readingTime:{minutes:5.94,words:1783},excerpt:"<p>面向对象最重要的概念就是类 (Class) 和实例 (Instance) ，必须牢记类是抽象的模板，比如 <code v-pre>Student</code> 类，而实例是根据类创建出来的一个个具体的“对象”，每个对象都拥有相同的方法，但各自的数据可能不同。</p>\n",author:"廖雪峰",date:"2021-03-28T00:00:00.000Z",category:["Python"]},["/code/language/python/oop/instance","/code/language/python/oop/instance.md"]],["v-4754e3b1","/code/language/python/oop/intro.html",{title:"面向对象编程",icon:"info",type:"article",readingTime:{minutes:2.41,words:724},excerpt:"面向对象编程——Object Oriented Programming，简称 OOP，是一种程序设计思想。OOP 把对象作为程序的基本单元，一个对象包含了数据和操作数据的函数。 面向过程的程序设计把计算机程序视为一系列的命令集合，即一组函数的顺序执行。为了简化程序设计，面向过程把函数继续切分为子函数，即把大块函数通过切割成小块函数来降低系统的复杂度。 而面向",date:"2021-03-28T00:00:00.000Z",category:["Python"]},["/code/language/python/oop/intro","/code/language/python/oop/intro.md"]],["v-0ffcd3e0","/code/language/python/oop/property.html",{title:"属性",icon:"state",type:"article",readingTime:{minutes:7.28,words:2185},excerpt:"私有属性 在 Class 内部，可以有属性和方法，而外部代码可以通过直接调用实例变量的方法来操作数据，这样，就隐藏了内部的复杂逻辑。 但是，从前面 Student 类的定义来看，外部代码还是可以自由地修改一个实例的 name、score 属性: 如果要让内部属性不被外部访问，可以把属性的名称前加上两个下划线 ，在 Python 中，实例的变量名如果以 开头，",author:"廖雪峰",date:"2021-03-28T00:00:00.000Z",category:["Python"]},["/code/language/python/oop/property","/code/language/python/oop/property.md"]],["v-59a21084","/code/language/python/oop/special.html",{title:"特殊的 class",icon:"any",type:"article",readingTime:{minutes:9.05,words:2714},excerpt:"type() 动态语言和静态语言最大的不同，就是函数和类的定义，不是编译时定义的，而是运行时动态创建的。 比方说我们要定义一个 Hello 的 class，就写一个 hello.py 模块: 当 Python 解释器载入 hello 模块时，就会依次执行该模块的所有语句，执行结果就是动态创建出一个 Hello 的 class 对象，测试如下: type() ",author:"廖雪峰",date:"2021-03-28T00:00:00.000Z",category:["Python"]},["/code/language/python/oop/special","/code/language/python/oop/special.md"]],["v-6863cc9e","/code/language/typescript/advanced/",{title:"进阶",icon:"advance",type:"article",readingTime:{minutes:.22,words:65},excerpt:"<p>本部分介绍一些高级的类型与技术。</p>\n",date:"2022-04-19T07:13:07.000Z",category:["TypeScript"]},["/code/language/typescript/advanced/index.html","/code/language/typescript/advanced/README.md"]],["v-f0d4733a","/code/language/typescript/advanced/class-and-interfaces.html",{title:"类与接口",icon:"api",type:"article",readingTime:{minutes:1.83,words:549},excerpt:'<p><RouterLink to="/code/language/typescript/basics/type-of-object-interfaces.html">之前学习过</RouterLink>，接口(Interfaces)可以用于对「对象的形状(Shape)」进行描述。</p>\n<p>这一章主要介绍接口的另一个用途，对类的一部分行为进行抽象。</p>\n',date:"2022-04-19T07:13:07.000Z",category:["TypeScript"]},["/code/language/typescript/advanced/class-and-interfaces","/code/language/typescript/advanced/class-and-interfaces.md"]],["v-15dd32d2","/code/language/typescript/advanced/class.html",{title:"类",icon:"class",type:"article",readingTime:{minutes:6.27,words:1882},excerpt:"<p>传统方法中，JavaScript 通过构造函数实现类的概念，通过原型链实现继承。而在 ES6 中，我们终于迎来了 <code v-pre>class</code>。</p>\n<p>TypeScript 除了实现了所有 ES6 中的类的功能以外，还添加了一些新的用法。</p>\n<p>这一节主要介绍类的用法，下一节再介绍如何定义类的类型。</p>\n",date:"2022-04-19T07:13:07.000Z",category:["TypeScript"]},["/code/language/typescript/advanced/class","/code/language/typescript/advanced/class.md"]],["v-40c17b28","/code/language/typescript/advanced/declaration-merging.html",{title:"声明合并",icon:"merge",type:"article",readingTime:{minutes:1.11,words:332},excerpt:"<p>如果定义了两个相同名字的函数、接口或类，那么它们会合并成一个类型:</p>\n",date:"2022-04-19T07:13:07.000Z",category:["TypeScript"]},["/code/language/typescript/advanced/declaration-merging","/code/language/typescript/advanced/declaration-merging.md"]],["v-8b0e3c32","/code/language/typescript/advanced/enum.html",{title:"枚举",icon:"enum",type:"article",readingTime:{minutes:4.95,words:1485},excerpt:"<p>枚举(Enum)类型用于取值被限定在一定范围内的场景，比如一周只能有七天，颜色限定为红绿蓝等。</p>\n",date:"2022-04-19T07:13:07.000Z",category:["TypeScript"]},["/code/language/typescript/advanced/enum","/code/language/typescript/advanced/enum.md"]],["v-251c5e07","/code/language/typescript/advanced/further-reading.html",{title:"扩展阅读",icon:"quote",type:"article",readingTime:{minutes:2.63,words:788},excerpt:'<p>此处记录了<a href="http://www.typescriptlang.org/docs/handbook/basic-types.html" target="_blank" rel="noopener noreferrer">官方手册<ExternalLinkIcon/></a>(<a href="https://zhongsp.gitbooks.io/typescript-handbook/content/" target="_blank" rel="noopener noreferrer">中文版<ExternalLinkIcon/></a>)中包含，但是本书未涉及的概念。</p>\n',date:"2022-04-19T07:13:07.000Z",category:["TypeScript"]},["/code/language/typescript/advanced/further-reading","/code/language/typescript/advanced/further-reading.md"]],["v-5edb8acc","/code/language/typescript/advanced/generics.html",{title:"泛型",icon:"generic",type:"article",readingTime:{minutes:4.1,words:1229},excerpt:"<p>泛型(Generics)是指在定义函数、接口或类的时候，不预先指定具体的类型，而在使用的时候再指定类型的一种特性。</p>\n",date:"2022-04-19T07:13:07.000Z",category:["TypeScript"]},["/code/language/typescript/advanced/generics","/code/language/typescript/advanced/generics.md"]],["v-6ed22e89","/code/language/typescript/advanced/string-literal-types.html",{title:"字符串字面量类型",icon:"string",type:"article",readingTime:{minutes:.59,words:177},excerpt:"<p>字符串字面量类型用来约束取值只能是某几个字符串中的一个。</p>\n",date:"2022-04-19T07:13:07.000Z",category:["TypeScript"]},["/code/language/typescript/advanced/string-literal-types","/code/language/typescript/advanced/string-literal-types.md"]],["v-1127c682","/code/language/typescript/advanced/tuple.html",{title:"元组",icon:"list",type:"article",readingTime:{minutes:1,words:299},excerpt:"<p>数组合并了相同类型的对象，而元组(Tuple)合并了不同类型的对象。</p>\n<p>元组起源于函数编程语言(如 F#)，这些语言中会频繁使用元组。</p>\n",date:"2022-04-19T07:13:07.000Z",category:["TypeScript"]},["/code/language/typescript/advanced/tuple","/code/language/typescript/advanced/tuple.md"]],["v-bdbcba86","/code/language/typescript/advanced/type-aliases.html",{title:"类型别名",icon:"alias",type:"article",readingTime:{minutes:.34,words:102},excerpt:"<p>类型别名用来给一个类型起个新名字。</p>\n",date:"2022-04-19T07:13:07.000Z",category:["TypeScript"]},["/code/language/typescript/advanced/type-aliases","/code/language/typescript/advanced/type-aliases.md"]],["v-2a3f152e","/code/language/typescript/basics/",{title:"基础",icon:"module",type:"article",readingTime:{minutes:.36,words:108},excerpt:"<p>本部分介绍了 TypeScript 中的常用类型和一些基本概念，旨在让大家对 TypeScript 有个初步的理解。</p>\n",date:"2022-04-19T07:13:07.000Z",category:["TypeScript"]},["/code/language/typescript/basics/index.html","/code/language/typescript/basics/README.md"]],["v-b5cdbcca","/code/language/typescript/basics/any.html",{title:"任意值",icon:"any",type:"article",readingTime:{minutes:.91,words:273},excerpt:"<p>任意值(Any)用来表示允许赋值为任意类型。</p>\n",date:"2022-04-19T07:13:07.000Z",category:["TypeScript"]},["/code/language/typescript/basics/any","/code/language/typescript/basics/any.md"]],["v-0eb38230","/code/language/typescript/basics/built-in-objects.html",{title:"内置对象",icon:"object",type:"article",readingTime:{minutes:2.02,words:607},excerpt:"<p>JavaScript 中有很多[内置对象][]，它们可以直接在 TypeScript 中当做定义好了的类型。</p>\n<p>内置对象是指根据标准在全局作用域(Global)上存在的对象。这里的标准是指 ECMAScript 和其他环境(比如 DOM)的标准。</p>\n",date:"2022-04-19T07:13:07.000Z",category:["TypeScript"]},["/code/language/typescript/basics/built-in-objects","/code/language/typescript/basics/built-in-objects.md"]],["v-6193fda3","/code/language/typescript/basics/declaration-files.html",{title:"声明文件",icon:"notice",type:"article",readingTime:{minutes:27.49,words:8247},excerpt:"当使用第三方库时，我们需要引用它的声明文件，才能获得对应的代码补全、接口提示等功能。 什么是声明语句 假如我们想使用第三方库 jQuery，一种常见的方式是在 HTML 中通过 标签引入 jQuery，然后就可以使用全局变量 $ 或 jQuery` 了。 我们通常这样获取一个 id 是 foo 的元素: 但是在 ts 中，编译器并不知道 $ 或 jQuery",date:"2022-04-19T07:13:07.000Z",category:["TypeScript"]},["/code/language/typescript/basics/declaration-files","/code/language/typescript/basics/declaration-files.md"]],["v-85f3d8a2","/code/language/typescript/basics/primitive-data-types.html",{title:"原始数据类型",icon:"type",type:"article",readingTime:{minutes:2.74,words:821},excerpt:"<p>JavaScript 的类型分为两种: 原始数据类型([Primitive data types][])和对象类型(Object types)。</p>\n<p>原始数据类型包括: 布尔值、数值、字符串、<code v-pre>null</code>、<code v-pre>undefined</code> 以及 [ES6 中的新类型 <code v-pre>Symbol</code>][]。</p>\n<p>本节主要介绍<strong>前五种</strong>原始数据类型在 TypeScript 中的应用。</p>\n",date:"2022-04-19T07:13:07.000Z",category:["TypeScript"]},["/code/language/typescript/basics/primitive-data-types","/code/language/typescript/basics/primitive-data-types.md"]],["v-cc37e3c8","/code/language/typescript/basics/type-assertion.html",{title:"类型断言",icon:"boolean",type:"article",readingTime:{minutes:1.56,words:467},excerpt:"<p>类型断言(Type Assertion)可以用来手动指定一个值的类型。</p>\n",date:"2022-04-19T07:13:07.000Z",category:["TypeScript"]},["/code/language/typescript/basics/type-assertion","/code/language/typescript/basics/type-assertion.md"]],["v-697acf65","/code/language/typescript/basics/type-inference.html",{title:"类型推论",icon:"extend",type:"article",readingTime:{minutes:.69,words:206},excerpt:"<p>如果没有明确的指定类型，那么 TypeScript 会依照类型推论(Type Inference)的规则推断出一个类型。</p>\n",date:"2022-04-19T07:13:07.000Z",category:["TypeScript"]},["/code/language/typescript/basics/type-inference","/code/language/typescript/basics/type-inference.md"]],["v-0db2b831","/code/language/typescript/basics/type-of-array.html",{title:"数组的类型",icon:"array",type:"article",readingTime:{minutes:2.26,words:679},excerpt:"<p>在 TypeScript 中，数组类型有多种定义方式，比较灵活。</p>\n",date:"2022-04-19T07:13:07.000Z",category:["TypeScript"]},["/code/language/typescript/basics/type-of-array","/code/language/typescript/basics/type-of-array.md"]],["v-54dad760","/code/language/typescript/basics/type-of-function.html",{title:"函数的类型",icon:"function",type:"article",readingTime:{minutes:4.57,words:1372},excerpt:'<blockquote>\n<p><a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch2.html" target="_blank" rel="noopener noreferrer">函数是 JavaScript 中的一等公民<ExternalLinkIcon/></a></p>\n</blockquote>\n',date:"2022-04-19T07:13:07.000Z",category:["TypeScript"]},["/code/language/typescript/basics/type-of-function","/code/language/typescript/basics/type-of-function.md"]],["v-76bd067c","/code/language/typescript/basics/type-of-object-interfaces.html",{title:"对象的类型——接口",icon:"api",type:"article",readingTime:{minutes:3.64,words:1093},excerpt:"<p>在 TypeScript 中，我们使用接口(Interfaces)来定义对象的类型。</p>\n",date:"2022-04-19T07:13:07.000Z",category:["TypeScript"]},["/code/language/typescript/basics/type-of-object-interfaces","/code/language/typescript/basics/type-of-object-interfaces.md"]],["v-552c52ec","/code/language/typescript/basics/union-types.html",{title:"联合类型",icon:"structure",type:"article",readingTime:{minutes:1.29,words:387},excerpt:"<p>联合类型(Union Types)表示取值可以为多种类型中的一种。</p>\n",date:"2022-04-19T07:13:07.000Z",category:["TypeScript"]},["/code/language/typescript/basics/union-types","/code/language/typescript/basics/union-types.md"]],["v-9d4e28d0","/code/language/typescript/engineering/",{title:"工程",icon:"engine",type:"article",readingTime:{minutes:.34,words:103},excerpt:"掌握了 TypeScript 的语法就像学会了砌墙的工艺。 我们学习 TypeScript 的目的不是为了造一间小茅屋，而是为了造高楼大厦，这也正是 TypeScript 的类型系统带来的优势。 那么一项大工程应该如何开展呢? 本部分的内容就会介绍 TypeScript 工程化的最佳实践，具体内容包括: 代码检查;",date:"2022-04-19T07:13:07.000Z",category:["TypeScript"]},["/code/language/typescript/engineering/index.html","/code/language/typescript/engineering/README.md"]],["v-73edba1e","/code/language/typescript/engineering/lint.html",{title:"代码检查",icon:"style",type:"article",readingTime:{minutes:8.61,words:2582},excerpt:"TypeScript 的代码检查应当使用 ESLint + typescript-eslint-parser。 什么是代码检查 代码检查主要是用来发现代码错误、统一代码风格。 在 JavaScript 项目中，我们一般使用 ESLint 来进行代码检查。它通过插件化的特性极大的丰富了适用范围，搭配 typescript-eslint-parser 之后，甚至",date:"2022-04-19T07:13:07.000Z",category:["TypeScript"]},["/code/language/typescript/engineering/lint","/code/language/typescript/engineering/lint.md"]],["v-05c4845f","/code/language/typescript/intro/",{title:"简介",icon:"info",type:"article",readingTime:{minutes:.15,words:44},excerpt:"<p>本部分介绍了在学习 TypeScript 之前需要了解的知识，具体内容包括:</p>\n",date:"2022-04-19T07:13:07.000Z",category:["TypeScript"]},["/code/language/typescript/intro/index.html","/code/language/typescript/intro/README.md"]],["v-abdb2784","/code/language/typescript/intro/get-typescript.html",{title:"安装 TypeScript",icon:"install",type:"article",readingTime:{minutes:.93,words:279},excerpt:'<p>TypeScript 的命令行工具安装方法如下:</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> -g typescript\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>以上命令会在全局环境下安装 <code v-pre>tsc</code> 命令，安装完成之后，我们就可以在任何地方执行 <code v-pre>tsc</code> 命令了。</p>\n',date:"2022-04-19T07:13:07.000Z",category:["TypeScript"],tag:["安装"]},["/code/language/typescript/intro/get-typescript","/code/language/typescript/intro/get-typescript.md"]],["v-7552317a","/code/language/typescript/intro/hello-typescript.html",{title:"Hello TypeScript",icon:"creative",type:"article",readingTime:{minutes:1.25,words:374},excerpt:"我们从一个简单的例子开始。 将以下代码复制到 hello.ts 中: 然后执行 这时候会生成一个编译好的文件 hello.js: TypeScript 中，使用 : 指定变量的类型，: 的前后有没有空格都可以。 上述例子中，我们用 : 指定 person 参数类型为 string。但是编译为 js 之后，并没有什么检查的代码被插入进来。 TypeScript",date:"2022-04-19T07:13:07.000Z",category:["TypeScript"],tag:["快速上手"]},["/code/language/typescript/intro/hello-typescript","/code/language/typescript/intro/hello-typescript.md"]],["v-5e699f3b","/code/language/typescript/intro/what-is-typescript.html",{title:"什么是 TypeScript",icon:"info",type:"article",readingTime:{minutes:2.09,words:628},excerpt:'<p>首先，我对 TypeScript 的理解如下:</p>\n<p>[TypeScript][] 是 JavaScript 的一个超集，主要提供了<strong>类型系统</strong>和<strong>对 ES6 的支持</strong>，它由 Microsoft 开发，代码<a href="https://github.com/Microsoft/TypeScript" target="_blank" rel="noopener noreferrer">开源于 GitHub<ExternalLinkIcon/></a> 上。</p>\n<p>其次引用[官网][typescript]的定义:</p>\n<blockquote>\n<p>TypeScript is a typed superset of JavaScript that compiles to plain JavaScript. Any browser. Any host. Any OS. Open source.</p>\n</blockquote>\n<p>翻译成中文即是:</p>\n<blockquote>\n<p>TypeScript 是 JavaScript 的类型的超集，它可以编译成纯 JavaScript。编译出来的 JavaScript 可以运行在任何浏览器上。TypeScript 编译工具可以运行在任何服务器和任何系统上。TypeScript 是开源的。</p>\n</blockquote>\n',date:"2022-04-19T07:13:07.000Z",category:["TypeScript"],tag:["介绍"]},["/code/language/typescript/intro/what-is-typescript","/code/language/typescript/intro/what-is-typescript.md"]],["v-d9322f3e","/code/linux/bash/archives/archiving.html",{title:"归档和备份",type:"article",readingTime:{minutes:5.25,words:1574},excerpt:"归档和备份 gzip gzip 程序用来压缩文件，原文件的压缩版(添加 gz 后缀名)会替代原文件。gunzip 程序用来还原压缩版本。 gzip 的参数如下。 -c 把输出写入到标准输出，并且保留原始文件。也有可能用--stdout 和--to-stdout 选项来指定。; -d 解压缩。正如 gunzip 命令一样。也可以用--decompress 或者",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/archiving","/code/linux/bash/archives/archiving.md"]],["v-3f4e4c84","/code/linux/bash/archives/async.html",{title:"异步任务",type:"article",readingTime:{minutes:1.75,words:526},excerpt:"异步任务 Bash 脚本有时候需要同时执行多个任务。通常这涉及到启动一个脚本，依次，启动一个或多个子脚本来执行额外的任务，而父脚本继续运行。然而，当一系列脚本 以这种方式运行时，要保持父子脚本之间协调工作，会有一些问题。也就是说，若父脚本或子脚本依赖于另一方，并且 一个脚本必须等待另一个脚本结束任务之后，才能完成它自己的任务，这应该怎么办? bash 有一个",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/async","/code/linux/bash/archives/async.md"]],["v-8fb6e956","/code/linux/bash/archives/command.html",{title:"Shell 的命令",type:"article",readingTime:{minutes:5.29,words:1588},excerpt:"Shell 的命令 命令的类别 Bash 可以使用的命令分成四类。 可执行程序; Shell 提供的命令; Shell 函数; 前三类命令的别名; type, whatis type 命令可以显示命令类型。 下面是几个例子。 whatis 命令显示指定命令的描述。 apropos apropos 命令返回符合搜索条件的命令列表。 alias, unalias",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/command","/code/linux/bash/archives/command.md"]],["v-736c2f7c","/code/linux/bash/archives/file-operation.html",{title:"文件操作",type:"article",readingTime:{minutes:1.31,words:394},excerpt:"文件操作 cp cp 命令用于将文件(或目录)拷贝到目的地。 其他参数 -a 拷贝时保留所有属性，包括所有者与权限; -v 显示拷贝的详细信息; mkdir mkdir 命令用于新建目录。 mv mv 命令用于将源文件移动到目的地。 参数 -i 覆盖已经存在的文件时，会提示确认; -u 只移动目的地不存在的文件，或比目的地更新的文件; rm rm 命令用于删",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/file-operation","/code/linux/bash/archives/file-operation.md"]],["v-ca4d7154","/code/linux/bash/archives/file.html",{title:"文件系统",type:"article",readingTime:{minutes:12.22,words:3665},excerpt:"文件系统 pwd pwd 命令显示列出当前所在的目录。 cd cd 命令用来改变用户所在的目录。 ls ls 目录可以显示指定目录的内容。不加参数时，显示当前目录的内容。 上面命令显示当前目录的内容。 ls 命令也可以显示指定文件是否存在。 -l 参数可以显示文件的详细信息。 上面命令输出结果的第一栏，是文件的类型和权限。 文件类型分为以下几种。 - 普通文",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/file","/code/linux/bash/archives/file.md"]],["v-dc56542c","/code/linux/bash/archives/hardware.html",{title:"硬件操作",type:"article",readingTime:{minutes:4.11,words:1234},excerpt:"硬件操作 df df 命令查看硬盘信息。 free free 命令查看内存占用情况。 硬盘 文件/etc/fstab 配置系统启动时要挂载的设备。 输出结果一共有 6 个字段，含义依次如下。 设备名: 与物理设备相关联的设备文件(或设备标签)的名字，比如说/dev/hda1(第一个 IDE 通道上第一个主设备分区)。; 挂载点: 设备所连接到的文件系统树的目",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/hardware","/code/linux/bash/archives/hardware.md"]],["v-82e4faac","/code/linux/bash/archives/host.html",{title:"主机管理",type:"article",readingTime:{minutes:.08,words:23},excerpt:"主机管理 hostname 命令 hostname 命令返回当前服务器的主机名。",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/host","/code/linux/bash/archives/host.md"]],["v-4fb5d210","/code/linux/bash/archives/named-pipe.html",{title:"命名管道",type:"article",readingTime:{minutes:1.7,words:509},excerpt:"命名管道 在大多数类似 Unix 的操作系统中，有可能创建一种特殊类型的文件，叫做命名管道。命名管道用来在 两个进程之间建立连接，也可以像其它类型的文件一样使用。 命令管道的行为类似于文件，但实际上形成了先入先出(FIFO)的缓冲。和普通(未命令的)管道一样， 数据从一端进入，然后从另一端出现。通过命令管道，有可能像这样设置一些东西: 和 表现出来就像这样:",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/named-pipe","/code/linux/bash/archives/named-pipe.md"]],["v-8b49ba9e","/code/linux/bash/archives/process.html",{title:"进程管理",type:"article",readingTime:{minutes:5.28,words:1583},excerpt:"进程管理 ps ps 命令用来列出进程信息。 不带任何参数时，ps 只列出与当前 Session 相关的进程。输出结果中，PID 是进程 ID、TTY 是进程的终端号(如果显示?，则表示进程没有终端)，TIME 是消耗的 CPU 时间，CMD 是触发进程的命令。 x 参数列出所有进程的详细信息，包括不在当前 Session 的信息。 这时的输出结果，会多出 ",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/process","/code/linux/bash/archives/process.md"]],["v-12795dd8","/code/linux/bash/archives/redirection.html",{title:"重定向",type:"article",readingTime:{minutes:3.05,words:915},excerpt:"重定向 重定向指的是将命令行输出写入指定位置。 cmd1 | cmd2: Pipe; take standard output of cmd1 as standard input to cmd2.; > file: Direct standard output to file.; < file: Take standard input from file.;",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/redirection","/code/linux/bash/archives/redirection.md"]],["v-56594599","/code/linux/bash/archives/regex.html",{title:"正则表达式",type:"article",readingTime:{minutes:4.52,words:1355},excerpt:"正则表达式 正则表达式是表达文本模式的方法。 .: 匹配任何单个字符。; ?: 上一项是可选的，最多匹配一次。; *: 前一项将被匹配零次或多次。; +: 前一项将被匹配一次或多次。; {N}: 上一项完全匹配 N 次。; {N，}: 前一项匹配 N 次或多次。; {N，M}: 前一项至少匹配 N 次，但不超过 M 次。; --: 表示范围，如果它不是列表中",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/regex","/code/linux/bash/archives/regex.md"]],["v-b7e7ef7a","/code/linux/bash/archives/system.html",{title:"系统信息",type:"article",readingTime:{minutes:.39,words:117},excerpt:"系统信息 uname uname 命令返回当前机器的信息。 如果要了解操作系统的版本，可以查看/etc/issue 文件。 service service 命令可以查看当前正在运行的服务。 上面代码中，+ 表示正在运行，- 表示已经停止，?表示 service 命令不了解相关信息。",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/system","/code/linux/bash/archives/system.md"]],["v-a913c376","/code/linux/bash/archives/text.html",{title:"文本处理",type:"article",readingTime:{minutes:5.9,words:1769},excerpt:"文本处理 cat cat 可以文件的内容，显示在标准输出。 它也可以同时输出多个文件内容。 它与重定向结合，就可以合并多个文件。 如果调用 cat 命令时没有任何参数，它将读取标准输入，然后显示到标准输出。按下 Ctrl + d，将会结束 cat 读取标准输入。利用这一点，可以将键盘输入写入指定文件，按下 Ctrl + d 结束输入。 它的参数如下。 -n ",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/text","/code/linux/bash/archives/text.md"]],["v-2904d6b6","/code/linux/bash/archives/time.html",{title:"时间管理",type:"article",readingTime:{minutes:1.61,words:482},excerpt:"时间管理 date 命令 date 命令用于输出当前时间 date 命令后面用加号(+)指定显示的格式。 完整的格式参数如下。 %a 星期名的缩写(Sun); %A 星期名的全称(Sunday); %b 月份的缩写(Jan); %B 月份的全称(January); %c 日期和时间(Thu Mar 3 23:05:25 2005); %C 世纪，就是年份数省",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/time","/code/linux/bash/archives/time.md"]],["v-04ea2b32","/code/linux/bash/archives/user.html",{title:"用户管理",type:"article",readingTime:{minutes:2.83,words:848},excerpt:"用户管理 id id 命令用于查看指定用户的用户名和组名。 id 输出结果分为三个部分，分别是 UID(用户编号和用户名)、GID(组编号和组名)，groups(用户所在的所有组)。 用户帐户的信息，存放在/etc/passwd 文件里面；用户组的信息，存放在/etc/group 文件里面。 上面的命令，如果省略用户名，则返回当前用户的信息。 su su 命",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/user","/code/linux/bash/archives/user.md"]],["v-6ed03c7c","/code/website/css/guide/",{title:"快速上手",icon:"creative",type:"article",readingTime:{minutes:2.79,words:837},excerpt:"<p>CSS 指层叠样式表 (<strong>C</strong>ascading <strong>S</strong>tyle <strong>S</strong>heets)。</p>\n",date:"2019-09-05T00:00:00.000Z",category:["CSS"],tag:["快速上手"]},["/code/website/css/guide/index.html","/code/website/css/guide/README.md"]],["v-0500ab2c","/code/website/css/guide/box.html",{title:"盒模型简介",icon:"box",type:"article",readingTime:{minutes:1.86,words:559},excerpt:"<p>CSS 盒模型本质上是一个盒子，封装周围的 HTML 元素，它包括: 边距，边框，填充，和实际内容。</p>\n",date:"2019-09-06T00:00:00.000Z",category:["CSS"],tag:["快速上手"]},["/code/website/css/guide/box","/code/website/css/guide/box.md"]],["v-20f0ad21","/code/website/css/guide/cascade.html",{title:"优先级和继承",icon:"sort",type:"article",readingTime:{minutes:6.4,words:1921},excerpt:"<p>本文介绍 CSS 的一些最基本的概念: 层叠、优先级和继承。</p>\n",date:"2019-09-06T00:00:00.000Z",category:["CSS"],tag:["快速上手"]},["/code/website/css/guide/cascade","/code/website/css/guide/cascade.md"]],["v-168cefd2","/code/website/css/guide/common.html",{title:"常见属性说明",icon:"info",type:"article",readingTime:{minutes:3.72,words:1117},excerpt:"<p>本章节介绍 CSS 的最常见，也是最基础属性。</p>\n",date:"2019-09-06T00:00:00.000Z",category:["CSS"],tag:["快速上手"]},["/code/website/css/guide/common","/code/website/css/guide/common.md"]],["v-7a51ec1b","/code/website/css/guide/declaration.html",{title:"CSS 声明",icon:"object",type:"article",readingTime:{minutes:1.18,words:354},excerpt:"值的专一性 CSS 每个属性都会有且仅有一个值。 如果您设置了多个值，最终优先级最高的值会被应用、; 如果您没有设置值，则会应用默认值。默认值可以是 unset(未设置), inherit (继承父属性值), initial (初始值)。; 如果属性未知或某个值对给定属性无效，则声明被视为无效，并被浏览器的 CSS 引擎完全忽略。 函数 虽然大多数值是相对简",date:"2019-09-05T00:00:00.000Z",category:["CSS"],tag:["快速上手"]},["/code/website/css/guide/declaration","/code/website/css/guide/declaration.md"]],["v-3e54ab50","/code/website/css/guide/import.html",{title:"引入 CSS",icon:"link",type:"article",readingTime:{minutes:1.09,words:326},excerpt:"有三种方式引入并应用 CSS。 外部样式表 外部样式表将样式写入 CSS 文件中，在 HTML 中使用 引用，可以根据实际需要放在 标签里或 `` 标签的末尾。比如: 浏览器会从文件 mystyle.css 中读到样式声明，并根据它来格式文档。 外部样式表可以在任何文本编辑器中进行编辑。文件不能包含任何的 HTML 标签。样式表应该以 .css 扩展名进行保",date:"2019-09-05T00:00:00.000Z",category:["CSS"],tag:["快速上手"]},["/code/website/css/guide/import","/code/website/css/guide/import.md"]],["v-02dacd5e","/code/website/css/guide/selector.html",{title:"选择器简介",icon:"select",type:"article",readingTime:{minutes:2.29,words:687},excerpt:"<p>CSS 选择器是 CSS 规则的第一部分。它是元素和其他部分组合起来告诉浏览器哪个 HTML 元素应当是被选为应用规则中的 CSS 属性值的方式。</p>\n<p>选择器所选择的元素，叫做“选择器的对象”。</p>\n",date:"2019-09-05T00:00:00.000Z",category:["CSS"],tag:["快速上手"]},["/code/website/css/guide/selector","/code/website/css/guide/selector.md"]],["v-71dc7f0c","/code/website/css/intro/",{title:"CSS 介绍",icon:"info",type:"article",readingTime:{minutes:.4,words:120},excerpt:"目录 CSS 选择器; CSS 盒模型; 背景与边框; CSS 字体; 文本方向; 溢出; CSS 值; 可替换元素; 媒体查询; 样式化详解 这三个章节是非常好的样式化实战练习，您可以在 MDN 上查看它。 样式化列表; 样式化链接; 样式化表单;",date:"2019-09-06T00:00:00.000Z",category:["CSS"]},["/code/website/css/intro/index.html","/code/website/css/intro/README.md"]],["v-5333caa4","/code/website/css/intro/background-and-border.html",{title:"背景与边框",icon:"frame",type:"article",readingTime:{minutes:7.37,words:2211},excerpt:"背景样式 背景颜色 background-color 属性定义了 CSS 中任何元素的背景颜色。属性接受任何有效的颜色值。背景色扩展到元素的内容和内边距的下面。 为元素盒子添加背景颜色 背景图片 background-image 属性允许在元素的背景中显示图像。 默认情况下，大图不会缩小以适应方框，因此我们只能看到它的一个小角，而小图则是平铺以填充方框。 两",date:"2019-09-06T00:00:00.000Z",category:["CSS"]},["/code/website/css/intro/background-and-border","/code/website/css/intro/background-and-border.md"]],["v-3fa85cfa","/code/website/css/intro/box.html",{title:"盒模型",icon:"box",type:"article",readingTime:{minutes:9.57,words:2872},excerpt:"<p>在 CSS 中，所有的元素都被一个个的“盒子(box)”包围着。</p>\n",date:"2019-09-06T00:00:00.000Z",category:["CSS"]},["/code/website/css/intro/box","/code/website/css/intro/box.md"]],["v-69b33c5e","/code/website/css/intro/font.html",{title:"文字样式",icon:"format",type:"article",readingTime:{minutes:12.81,words:3844},excerpt:"文本 元素中的文本是布置在元素的内容框中。以内容区域的左上角作为起点 (或者是右上角，是在 RTL 语言的情况下)，一直延续到行的结束部分。一旦达到行的尽头，它就会进到下一行，然后继续，再接着下一行，直到所有内容都放入了盒子中。文本内容表现地像一些内联元素，被布置到相邻的行上，除非到达了行的尽头，否则不会换行，或者您想强制地手动造成换行的话，您可以使用 ``",date:"2019-09-05T00:00:00.000Z",category:["CSS"]},["/code/website/css/intro/font","/code/website/css/intro/font.md"]],["v-a1ab80fe","/code/website/css/intro/media.html",{title:"媒体查询",icon:"search",type:"article",readingTime:{minutes:10.6,words:3181},excerpt:"<p><strong>媒体查询</strong> (Media queries) 非常实用，尤其是当您想要根据设备的大致类型 (如打印设备与带屏幕的设备) 或者特定的特征和设备参数 (例如屏幕分辨率和浏览器视窗宽度) 来修改网站或应用程序时。</p>\n",date:"2019-09-05T00:00:00.000Z",category:["CSS"],tag:["CSS"]},["/code/website/css/intro/media","/code/website/css/intro/media.md"]],["v-3291128b","/code/website/css/intro/overflow.html",{title:"溢出",icon:"overflow",type:"article",readingTime:{minutes:4.09,words:1227},excerpt:"溢出是在盒子无法容纳下太多的内容的时候发生的。 概念 我们知道，CSS 中万物皆盒，因此我们可以通过给 width 和 height(或者 inline-size 和 block-size) 赋值的方式来约束盒子的尺寸。溢出是在您往盒子里面塞太多东西的时候发生的，所以盒子里面的东西也不会老老实实待着。CSS 给了您好几种工具来控制溢出。 CSS 尽可能不丢弃",date:"2019-09-06T00:00:00.000Z",category:["CSS"]},["/code/website/css/intro/overflow","/code/website/css/intro/overflow.md"]],["v-69be0f1d","/code/website/css/intro/replaced.html",{title:"可替换元素",icon:"change",type:"article",readingTime:{minutes:3.14,words:943},excerpt:"替换元素 图像和视频被描述为替换元素。 这意味着 CSS 不能影响这些元素的内部布局，仅影响它们在页面上于其他元素中的位置。 可替换元素 在 CSS 中，可替换元素(replaced element)的展现效果不是由 CSS 来控制的。这些元素是一种外部对象，它们外观的渲染，是独立于 CSS 的。 简单来说，它们的内容不受当前文档的样式的影响。CSS 可以影",date:"2019-09-06T00:00:00.000Z",category:["CSS"]},["/code/website/css/intro/replaced","/code/website/css/intro/replaced.md"]],["v-e3e99664","/code/website/css/intro/selector.html",{title:"选择器",icon:"select",type:"article",readingTime:{minutes:3.9,words:1169},excerpt:"<p>CSS 选择器是 CSS 规则的第一部分。它是元素和其他部分组合起来告诉浏览器哪个 HTML 元素应当是被选为应用规则中的 CSS 属性值的方式。</p>\n<p>选择器所选择的元素，叫做“选择器的对象”。</p>\n",date:"2019-09-05T00:00:00.000Z",category:["CSS"],tag:["CSS"]},["/code/website/css/intro/selector","/code/website/css/intro/selector.md"]],["v-503fc08f","/code/website/css/intro/sizing.html",{title:"调整大小",icon:"resize",type:"article",readingTime:{minutes:4.24,words:1273},excerpt:"原始尺寸与固有尺寸 在受 CSS 设置影响之前，HTML 元素有其原始的尺寸。一个直观的例子就是图像。一副图像的长和宽由这个图像文件自身确定。这个尺寸就是固有尺寸。 一个空的 是没有尺寸的。如果您在您的 HTML 文件中添加一个空 并给予其边框，您会在页面上看到一条线。 案例 设置具体的尺寸 当给元素指定尺寸时，我们将其称为外部尺寸。 我们可以给它一个具体的",date:"2019-09-06T00:00:00.000Z",category:["CSS"]},["/code/website/css/intro/sizing","/code/website/css/intro/sizing.md"]],["v-085d06ce","/code/website/css/intro/text-direction.html",{title:"文本方向",icon:"direction",type:"article",readingTime:{minutes:4.03,words:1209},excerpt:"书写模式 CSS 中的书写模式是指文本的排列方向是横向还是纵向的。writing-mode 属性使我们从一种模式切换到另一种模式。为此，您不必使用一种竖向的语言——您还可以更改部分文字的方向以实现创新性的布局。 可以使用 writing-mode: vertical-rl 对一个标题的显示进行设置，将标题文本变为竖向。 竖向文本在平面设计中很常见，也可以为您",date:"2019-09-06T00:00:00.000Z",category:["CSS"]},["/code/website/css/intro/text-direction","/code/website/css/intro/text-direction.md"]],["v-9555e3d8","/code/website/css/intro/value.html",{title:"值与单位",icon:"number",type:"article",readingTime:{minutes:8.19,words:2457},excerpt:"CSS 的值 在 CSS 规范上，您将能够发现值的存在，CSS 有多种值类型，它们被尖括号包围，如 或 。 当您看到值 `` 对特定属性有效时，这意味着您可以使用任何有效的颜色作为该属性的值。 数字，长度和百分比 数值类型 描述 -------------- --------------------------------------------------",date:"2019-09-06T00:00:00.000Z",category:["CSS"]},["/code/website/css/intro/value","/code/website/css/intro/value.md"]],["v-527c4b9c","/code/website/css/layout/",{title:"CSS 布局",icon:"layout",type:"article",readingTime:{minutes:.09,words:28},excerpt:"目录 布局介绍; 正常流布局; 弹性布局; 实战练习; 网格布局;",date:"2019-09-06T00:00:00.000Z",category:["CSS"]},["/code/website/css/layout/index.html","/code/website/css/layout/README.md"]],["v-5717d036","/code/website/css/layout/exercise.html",{title:"布局实战",icon:"exercise",type:"article",readingTime:{minutes:9.02,words:2707},excerpt:"<p>本章包括了一些经典的布局实战案例。</p>\n",author:"阮一峰",date:"2020-10-20T00:00:00.000Z",category:["CSS"]},["/code/website/css/layout/exercise","/code/website/css/layout/exercise.md"]],["v-a2ff4f38","/code/website/css/layout/flex.html",{title:"弹性模型",icon:"flex",type:"article",readingTime:{minutes:8.58,words:2573},excerpt:"<p>Flex 是 Flexible Box 的缩写，意为&quot;弹性布局&quot;，用来为盒状模型提供最大的灵活性。</p>\n",author:"阮一峰",date:"2019-09-06T00:00:00.000Z",category:["CSS"]},["/code/website/css/layout/flex","/code/website/css/layout/flex.md"]],["v-38389ece","/code/website/css/layout/float.html",{title:"浮动",icon:"float",type:"article",readingTime:{minutes:7.56,words:2268},excerpt:"在网站布局中，应当以 normal flow, flex 和 grid 布局为主。只有在需要特殊样式无法满足时，再考虑 float 布局。 简介 把一个元素“浮动”(float)起来，会改变该元素本身和在正常布局流(normal flow)中跟随它的其他元素的行为。这一元素会浮动到左侧或右侧，并且从正常布局流(normal flow)中移除，这时候其他的周围",date:"2019-09-06T00:00:00.000Z",category:["CSS"]},["/code/website/css/layout/float","/code/website/css/layout/float.md"]],["v-846c5f62","/code/website/css/layout/flow.html",{title:"正常布局流",icon:"flow",type:"article",readingTime:{minutes:1.86,words:558},excerpt:"元素特性 一个块级元素的内容宽度是其父元素的 100%，其高度与其内容高度一致。; 内联元素的 width height 与内容一致。您无法设置内联元素的 width height。; 如果您想控制内联元素的尺寸，您需要为元素设置 display: block; 或 display: inline-block。inline-block 混合了 inline ",date:"2019-09-06T00:00:00.000Z",category:["CSS"]},["/code/website/css/layout/flow","/code/website/css/layout/flow.md"]],["v-6383d537","/code/website/css/layout/grid.html",{title:"网格布局",icon:"grid",type:"article",readingTime:{minutes:31.31,words:9392},excerpt:"概述 网格布局 (Grid) 是最强大的 CSS 布局方案。它将网页划分成一个个网格，可以任意组合不同的网格，做出各种各样的布局。 网格布局案例 上图这样的布局，就是 Grid 布局的拿手好戏。 与 flex 的区别 Grid 布局与 Flex 布局有一定的相似性，都可以指定容器内部多个项目的位置。但是，它们也存在重大区别。 Flex 布局是轴线布局，只能指",author:"阮一峰",date:"2020-10-20T00:00:00.000Z",category:["CSS"]},["/code/website/css/layout/grid","/code/website/css/layout/grid.md"]],["v-6b707689","/code/website/css/layout/intro.html",{title:"排版介绍",icon:"info",type:"article",readingTime:{minutes:12.81,words:3843},excerpt:"正常布局流 正常布局流(normal flow)是指在不对页面进行任何布局控制时，浏览器默认的 HTML 布局方式。HTML 元素完全按照源码中出现的先后次序显示。 正常布局流 出现在另一个元素下面的元素被描述为块元素，与出现在另一个元素旁边的内联元素不同，内联元素就像段落中的单个单词一样。 关于内联元素和块元素，请见 CSS 介绍 → 盒模型 块元素内容的",date:"2019-09-06T00:00:00.000Z",category:["CSS"]},["/code/website/css/layout/intro","/code/website/css/layout/intro.md"]],["v-1737c155","/code/website/html/definition/",{title:"定义",icon:"info",type:"article",readingTime:{minutes:.12,words:37},excerpt:"定义列表 URI 统一资源标识符; URL 统一资源定位符; SEO 搜索引擎优化; MIME Type 媒体类型;",date:"2019-09-02T00:00:00.000Z",category:["HTML"]},["/code/website/html/definition/index.html","/code/website/html/definition/README.md"]],["v-fa26e920","/code/website/html/definition/mime.html",{title:"MIME type",icon:"info",type:"article",readingTime:{minutes:.27,words:80},excerpt:"MIME type，即媒体类型(media type) (有时是“内容类型(content type)”) 是指示文件类型的字符串，与文件一起发送。 例如，一个声音文件可能被标记为 audio/ogg ，一个图像文件可能是 image/png。 它与传统 Windows 上的文件扩展名有相同目的。",date:"2019-09-02T00:00:00.000Z",category:["HTML"]},["/code/website/html/definition/mime","/code/website/html/definition/mime.md"]],["v-0bbf52f1","/code/website/html/definition/seo.html",{title:"SEO",icon:"info",type:"article",readingTime:{minutes:1.35,words:404},excerpt:"简介 搜索引擎优化 (Search Engine Optimization)，是一种透过了解搜索引擎的运作规则来调整网站，以及提高目的网站在有关搜索引擎内排名的方式。由于不少研究发现，搜索引擎的用户往往只会留意搜索结果最前面的几个条目，所以不少网站都希望透过各种形式来影响搜索引擎的排序，让自己的网站可以有优秀的搜索排名。 所谓“针对搜索引擎作最优化的处理”，",date:"2019-09-02T00:00:00.000Z",category:["HTML"]},["/code/website/html/definition/seo","/code/website/html/definition/seo.md"]],["v-fe14c97c","/code/website/html/definition/uri.html",{title:"URI",icon:"info",type:"article",readingTime:{minutes:3.43,words:1029},excerpt:"简介 统一资源标识符(英语: Uniform Resource Identifier，缩写: URI)在电脑术语中是一个用于标识某一互联网资源名称的字符串。 该种标识允许用户对网络中(一般指万维网)的资源通过特定的协议进行交互操作。URI 的最常见的形式是统一资源定位符(URL)，经常指定为非正式的网址。更罕见的用法是统一资源名称(URN)，其目的是通过提供",date:"2019-09-02T00:00:00.000Z",category:["HTML"]},["/code/website/html/definition/uri","/code/website/html/definition/uri.md"]],["v-f3d7b5c2","/code/website/html/definition/url.html",{title:"URL",icon:"info",type:"article",readingTime:{minutes:2.22,words:665},excerpt:"简介 统一资源定位符(英语: Uniform Resource Locator，缩写: URL；或称统一资源定位器、定位地址、URL 地址，俗称网页地址或简称网址)是因特网上标准的资源的地址(Address)，如同在网络上的门牌。 统一资源定位符的标准格式如下: 统一资源定位符的完整格式如下: 更多详情请见 维基百科 绝对 URL 和相对 URL 您可能会在",date:"2019-09-02T00:00:00.000Z",category:["HTML"]},["/code/website/html/definition/url","/code/website/html/definition/url.md"]],["v-3520260c","/code/website/html/guide/",{title:"快速上手",icon:"creative",type:"article",readingTime:{minutes:7.7,words:2311},excerpt:"<p>本章能让您快速了解 HTML 并学会编写它。</p>\n",date:"2019-09-01T00:00:00.000Z",category:["HTML"],tag:["快速上手"]},["/code/website/html/guide/index.html","/code/website/html/guide/README.md"]],["v-914cf70e","/code/website/html/guide/tag.html",{title:"常见标签",icon:"code",type:"article",readingTime:{minutes:2.34,words:701},excerpt:"HTML 标题 HTML 标题 (Heading) 是通过 - 标签来定义的。 HTML 标题 HTML 段落 HTML 段落是通过标签 `` 来定义的。 HTML 段落 HTML 列表 文档许多内容都是列表，HTML 有一些特别的列表元素。标记列表通常包括至少两个元素。最常用的列表类型为: 无序列表 (Unordered List) 中项目的顺序不重要，比",date:"2019-09-01T00:00:00.000Z",category:["HTML"],tag:["快速上手"]},["/code/website/html/guide/tag","/code/website/html/guide/tag.md"]],["v-2f07a0ec","/code/website/html/intro/",{title:"HTML 介绍",icon:"info",type:"article",readingTime:{minutes:.16,words:49},excerpt:"HTML 介绍 历史; Head 标签; 基本标签; 链接; 图片; 矢量图形; 视频与音频; 表格; 嵌入; 格式化文档; 网站布局;",date:"2019-09-02T00:00:00.000Z",category:["HTML"]},["/code/website/html/intro/index.html","/code/website/html/intro/README.md"]],["v-77dfa475","/code/website/html/intro/basic.html",{title:"基础内容",icon:"module",type:"article",readingTime:{minutes:9.93,words:2979},excerpt:"<p>本章是最常见的的 HTML 标签介绍。</p>\n",date:"2019-09-02T00:00:00.000Z",category:["HTML"],tag:["HTML"]},["/code/website/html/intro/basic","/code/website/html/intro/basic.md"]],["v-dfcdc6ac","/code/website/html/intro/embed.html",{title:"嵌入",icon:"frame",type:"article",readingTime:{minutes:5.39,words:1616},excerpt:"Iframe `` 元素旨在允许您将其他 Web 文档嵌入到当前文档中。这很适合将第三方内容嵌入您的网站，您可能无法直接控制，也不希望实现自己的版本 - 例如来自在线视频提供商的视频，Disqus 等评论系统，在线地图提供商，广告横幅等。 案例 allowfullscreen; 如果设置，`` 则可以通过全屏 API 设置为全屏模式(稍微超出本文的范围)。 ",date:"2019-09-02T00:00:00.000Z",category:["HTML"]},["/code/website/html/intro/embed","/code/website/html/intro/embed.md"]],["v-495c4178","/code/website/html/intro/format.html",{title:"格式化",icon:"format",type:"article",readingTime:{minutes:5.73,words:1719},excerpt:"<p>HTML 中有许多其他元素可以用于格式化文本。本文介绍标记引文、描述列表、计算机代码和其他相关文本、下标和上标、联系信息等。</p>\n",date:"2019-09-02T00:00:00.000Z",category:["HTML"]},["/code/website/html/intro/format","/code/website/html/intro/format.md"]],["v-02c46aa2","/code/website/html/intro/head.html",{title:"head 标签",icon:"heading",type:"article",readingTime:{minutes:4.03,words:1209},excerpt:"<p>在页面加载完成的时候，标签 <code v-pre>&lt;head&gt;</code> 里的内容，是不会在页面中显示出来的。</p>\n<p><code v-pre>&lt;head&gt;</code> 包含了像页面的 <code v-pre>&lt;title&gt;</code>(标题) ,CSS (如果您选择用 CSS 来为 HTML 内容添加样式)，指向自定义图标的链接和其他的元数据 (描述 HTML 的数据，比如，作者，和描述文档的重要关键词)。</p>\n",date:"2019-09-02T00:00:00.000Z",category:["HTML"]},["/code/website/html/intro/head","/code/website/html/intro/head.md"]],["v-37a4494f","/code/website/html/intro/history.html",{title:"HTML 历史",icon:"time",type:"article",readingTime:{minutes:.76,words:227},excerpt:"1990 年，由于对 Web 未来发展的远见，Tim Berners-Lee 提出了 超文本 的概念，并在第二年在 SGML 的基础上将其正式定义为一个标记语言。IETF 于 1993 年正式开始制定 HTML 规范，并在经历了几个版本的草案后于 1995 年发布了 HTML 2.0 版本。1994 年，Berners-Lee 为了 Web 发展而成立了 W",date:"2019-09-02T00:00:00.000Z",category:["HTML"],tag:["介绍"]},["/code/website/html/intro/history","/code/website/html/intro/history.md"]],["v-64df0368","/code/website/html/intro/image.html",{title:"图片",icon:"pic",type:"article",readingTime:{minutes:9.98,words:2993},excerpt:"插入图片 我们可以用 元素来把图片放到网页上。它是一个空元素(也就是无法包含内容，可以省略闭合标签)，最少只需要一个 src (一般读作其全称 source)来使其生效。src 属性包含了指向我们想要引入的图片的路径，可以是相对路径或绝对 URL，就像 元素的 href 属性一样。 如果您有一幅文件名为 dinosaur.jpg 的图片，且它与您的 HTML",date:"2019-09-02T00:00:00.000Z",category:["HTML"]},["/code/website/html/intro/image","/code/website/html/intro/image.md"]],["v-6a524625","/code/website/html/intro/layout.html",{title:"网站布局",icon:"layout",type:"article",readingTime:{minutes:7.86,words:2357},excerpt:"<p>HTML 不仅能够定义网页的单独部分 (例如“段落”或“图片”)，还可以使用块级元素 (例如“标题栏”、“导航菜单”、“主内容列”) 来定义网站中的复合区域。本文将探讨如何规划基本的网站结构，并根据规划的结构来编写 HTML。</p>\n",date:"2019-09-02T00:00:00.000Z",category:["HTML"]},["/code/website/html/intro/layout","/code/website/html/intro/layout.md"]],["v-aa51ae56","/code/website/html/intro/link.html",{title:"超链接",icon:"link",type:"article",readingTime:{minutes:9.31,words:2794},excerpt:"<p>超链接是互联网提供的最令人兴奋的创新之一，它们从一开始就一直是互联网的一个特性，使互联网成为互联的网络。超链接使我们能够将我们的文档链接到任何其他文档(或其他资源)，也可以链接到文档的指定部分，我们可以在一个简单的网址上提供应用程序(与必须先安装的本地应用程序或其他东西相比)。几乎任何网络内容都可以转换为链接，点击(或激活)超链接将使网络浏览器转到另一个网址(URL)。</p>\n",date:"2019-09-02T00:00:00.000Z",category:["HTML"]},["/code/website/html/intro/link","/code/website/html/intro/link.md"]],["v-2e7dea7f","/code/website/html/intro/media.html",{title:"视频和音频",icon:"play",type:"article",readingTime:{minutes:8.35,words:2504},excerpt:"简介 HTML5 标准推出了 和 标签，以及一些 JavaScript 和 APIs 用于对其进行控制。 `` 元素 `` 允许您轻松地嵌入一段视频。 案例 案例属性解释: src; 同 标签使用方式相同，src` 属性指向您想要嵌入网页当中的视频资源，他们的使用方式完全相同。 controls; 用户必须能够控制视频和音频的回放功能。您可以使用 contr",date:"2019-09-02T00:00:00.000Z",category:["HTML"]},["/code/website/html/intro/media","/code/website/html/intro/media.md"]],["v-2ef83302","/code/website/html/intro/svg.html",{title:"SVG",icon:"svg",type:"article",readingTime:{minutes:4.84,words:1451},excerpt:"矢量图形 在网上，您会和两种类型的图片打交道 — 位图和矢量图: 位图使用像素网格来定义。; 一个位图文件精确得包含了每个像素的位置和它的色彩信息。流行的位图格式包括 Bitmap (.bmp), PNG (.png), JPEG (.jpg), and GIF (.gif.) 矢量图使用算法来定义。; 一个矢量图文件包含了图形和路径的定义，电脑可以根据这些",date:"2019-09-02T00:00:00.000Z",category:["HTML"]},["/code/website/html/intro/svg","/code/website/html/intro/svg.md"]],["v-613200d5","/code/website/html/intro/table.html",{title:"表格",icon:"table",type:"article",readingTime:{minutes:8.16,words:2449},excerpt:"表格是由行和列组成的结构化数据集(表格数据)，它能够使您简捷迅速地查找某个表示不同类型数据之间的某种关系的值。 表格的一个特点就是严格. 通过在行和列的标题之间进行视觉关联的方法，就可以让信息能够很简单地被解读出来。 常见误区 HTML 表格应该用于表格数据 ，这正是 HTML 表格设计出来的用途。请不要用它来进行布局。 使用表格而不是 CSS 布局的缺点:",date:"2019-09-02T00:00:00.000Z",category:["HTML"]},["/code/website/html/intro/table","/code/website/html/intro/table.md"]],["v-39354ab9","/code/language/python/functional-programming/high-order-function/filter.html",{title:"filter",icon:"filter",type:"article",readingTime:{minutes:2.68,words:804},excerpt:"Python 内建的 filter() 函数用于过滤序列。 和 map() 类似，filter() 也接收一个函数和一个序列。和 map() 不同的是，filter() 把传入的函数依次作用于每个元素，然后根据返回值是 True 还是 False 决定保留还是丢弃该元素。 例如，在一个 list 中，删掉偶数，只保留奇数，可以这么写: 把一个序列中的空字符串",author:"廖雪峰",date:"2020-05-31T00:00:00.000Z",category:["Python"]},["/code/language/python/functional-programming/high-order-function/filter","/code/language/python/functional-programming/high-order-function/filter.md"]],["v-4bdde895","/code/language/python/functional-programming/high-order-function/intro.html",{title:"介绍",icon:"info",type:"article",readingTime:{minutes:2.37,words:711},excerpt:"<p>高阶函数英文叫 Higher-order function。什么是高阶函数? 把函数作为参数传入，这样的函数称为高阶函数。</p>\n",author:"廖雪峰",date:"2020-05-31T00:00:00.000Z",category:["Python"]},["/code/language/python/functional-programming/high-order-function/intro","/code/language/python/functional-programming/high-order-function/intro.md"]],["v-1aa63c24","/code/language/python/functional-programming/high-order-function/map-and-reduce.html",{title:"map / reduce",icon:"map",type:"article",readingTime:{minutes:3.14,words:943},excerpt:'<p>Python 内建了 <code v-pre>map()</code> 和 <code v-pre>reduce()</code> 函数。</p>\n<p>如果您读过 Google 的那篇大名鼎鼎的论文 <a href="http://research.google.com/archive/mapreduce.html" target="_blank" rel="noopener noreferrer">“MapReduce: Simplified Data Processing on Large Clusters”<ExternalLinkIcon/></a>，您就能大概明白 map / reduce 的概念。</p>\n<blockquote>\n<p>访问需要科学上网。</p>\n</blockquote>\n',author:"廖雪峰",date:"2020-05-31T00:00:00.000Z",category:["Python"]},["/code/language/python/functional-programming/high-order-function/map-and-reduce","/code/language/python/functional-programming/high-order-function/map-and-reduce.md"]],["v-19bac6b0","/code/language/python/functional-programming/high-order-function/",{title:"高阶函数",icon:"function",type:"article",readingTime:{minutes:.06,words:18},excerpt:"目录 高阶函数介绍; map / reduce; filter; sorted;",author:"廖雪峰",date:"2020-05-31T00:00:00.000Z",category:["Python"]},["/code/language/python/functional-programming/high-order-function/index.html","/code/language/python/functional-programming/high-order-function/readme.md"]],["v-377c72d8","/code/language/python/functional-programming/high-order-function/sorted.html",{title:"sorted",icon:"sort",type:"article",readingTime:{minutes:2.12,words:635},excerpt:"排序算法 排序也是在程序中经常用到的算法。无论使用冒泡排序还是快速排序，排序的核心是比较两个元素的大小。如果是数字，我们可以直接比较，但如果是字符串或者两个 dict 呢? 直接比较数学上的大小是没有意义的，因此，比较的过程必须通过函数抽象出来。 Python 内置的 sorted() 函数就可以对 list 进行排序: 此外，sorted() 函数也是一个",author:"廖雪峰",date:"2020-05-31T00:00:00.000Z",category:["Python"]},["/code/language/python/functional-programming/high-order-function/sorted","/code/language/python/functional-programming/high-order-function/sorted.md"]],["v-294a69a9","/code/linux/bash/archives/commands/alias.html",{title:"alias",type:"article",readingTime:{minutes:.11,words:33},excerpt:"alias alias 命令用于设置别名。通常用于在 Bash 设置文件中，设置别名。",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/commands/alias","/code/linux/bash/archives/commands/alias.md"]],["v-9c3d27b8","/code/linux/bash/archives/commands/awk.html",{title:"awk",type:"article",readingTime:{minutes:4.05,words:1216},excerpt:"awk awk是处理文本文件的一个应用程序，几乎所有 Linux 系统都自带这个程序。 它依次处理文件的每一行，并读取里面的每一个字段。对于日志、CSV 那样的每行格式相同的文本文件，awk 可能是最方便的工具。 awk 其实不仅仅是工具软件，还是一种编程语言。不过，这里只介绍它的命令行用法，对于大多数场合，应该足够用了。 基本用法 awk 的基本用法就是下",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/commands/awk","/code/linux/bash/archives/commands/awk.md"]],["v-10e0f22a","/code/linux/bash/archives/commands/cal.html",{title:"cal",type:"article",readingTime:{minutes:.04,words:13},excerpt:"cal cal 命令显示本月的日历。",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/commands/cal","/code/linux/bash/archives/commands/cal.md"]],["v-05364be3","/code/linux/bash/archives/commands/cat.html",{title:"cat",type:"article",readingTime:{minutes:.12,words:35},excerpt:"cat cat 命令用于显示一个文本文件的内容。 cat - >> filename 用于向一个现有文件的尾部追加内容。",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/commands/cat","/code/linux/bash/archives/commands/cat.md"]],["v-70a3bfcc","/code/linux/bash/archives/commands/clear.html",{title:"clear",type:"article",readingTime:{minutes:.1,words:29},excerpt:"clear clear 命令用来清除当前屏幕的显示，运行后会只留下一个提示符。",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/commands/clear","/code/linux/bash/archives/commands/clear.md"]],["v-057fb76c","/code/linux/bash/archives/commands/cp.html",{title:"cp 命令",type:"article",readingTime:{minutes:.2,words:59},excerpt:"cp 命令 cp 命令用于复制文件。 参数 -u 参数只复制那些目标目录里面还不存在的文件，以及那些虽然存在、但是比源目录对应文件更陈旧的文件。",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/commands/cp","/code/linux/bash/archives/commands/cp.md"]],["v-2732ecf7","/code/linux/bash/archives/commands/cut.html",{title:"cut",type:"article",readingTime:{minutes:.76,words:229},excerpt:"cut cut 命令用于在命令行输出文本文件的指定位置的内容。 它的使用格式如下。 如果没有指定文件名，将读取标准输入。 -b 参数用来指定读取的字节。 -c 参数用来指定读取的字符，用法与 -b 一样。有的字符是多字节字符，这时候就应该用 -c 代替 -b。 -d 参数用来指定分隔符，默认分隔符为制表符。 -f 参数用来指定字段。",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/commands/cut","/code/linux/bash/archives/commands/cut.md"]],["v-df09066a","/code/linux/bash/archives/commands/date.html",{title:"date",type:"article",readingTime:{minutes:.05,words:16},excerpt:"date date 命令显示当前的日期和时间。",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/commands/date","/code/linux/bash/archives/commands/date.md"]],["v-25ebcb39","/code/linux/bash/archives/commands/dd.html",{title:"dd",type:"article",readingTime:{minutes:1.05,words:315},excerpt:"dd dd 命令用于复制磁盘或文件系统。 复制磁盘 上面命令表示将/dev/sda 磁盘复制到/dev/sdb 设备。参数 if 表示来源地，of 表示目的地。 除了复制，dd 还允许将磁盘做成一个镜像文件。 dd 还可以复制单个分区。 上面命令中，参数 bs 表示单次拷贝的字节数(bytes)。 要将镜像文件复原，也很简单。 清除数据 dd 也可以用于清除",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/commands/dd","/code/linux/bash/archives/commands/dd.md"]],["v-29557c77","/code/linux/bash/archives/commands/df.html",{title:"df",type:"article",readingTime:{minutes:.03,words:10},excerpt:"df df 命令显示磁盘信息。",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/commands/df","/code/linux/bash/archives/commands/df.md"]],["v-42ee2dc8","/code/linux/bash/archives/commands/du.html",{title:"du",type:"article",readingTime:{minutes:.65,words:194},excerpt:"du du 命令显示某个文件或目录的磁盘使用量。 -h 参数将返回的大小显示为人类可读的格式，即显示单位为 K、M、G 等。 -s 参数表示总结(summarize)。 -x 参数表示不显示不在当前分区的目录，通常会忽略/dev、/proc、/sys 等目录。 -c 参数表示显示当前目录总共占用的空间大小。 --exclude 参数用于排除某些目录或文件。 ",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/commands/du","/code/linux/bash/archives/commands/du.md"]],["v-eb020bc4","/code/linux/bash/archives/commands/egrep.html",{title:"egrep",type:"article",readingTime:{minutes:.42,words:125},excerpt:"egrep egrep 命令用于显示匹配正则模式的行，与 grep -E 命令等价。 下面是 example.txt 文件的内容。 egrep 命令显示包括 Lorem 或 dolor 的行。",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/commands/egrep","/code/linux/bash/archives/commands/egrep.md"]],["v-7ae696f6","/code/linux/bash/archives/commands/export.html",{title:"export",type:"article",readingTime:{minutes:.37,words:110},excerpt:"export export 命令用于向子 Shell 输出变量。 然后执行下面的命令，新建一个子 Shell。 上面命令的执行结果会进入 hotellogs 变量指向的目录。 export 命令还可以显示所有环境变量。 如果想查看单个变量，使用 echo $VARIABLE_NAME。",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/commands/export","/code/linux/bash/archives/commands/export.md"]],["v-50dbe7bd","/code/linux/bash/archives/commands/file.html",{title:"file",type:"article",readingTime:{minutes:.42,words:127},excerpt:"file file 命令用来某个文件的类型。 file 工具可以对所给的文件一行简短的介绍，它用文件后缀、头部信息和一些其他的线索来判断文件。您在检查一堆您不熟悉的文件时使用 find 非常方便:",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/commands/file","/code/linux/bash/archives/commands/file.md"]],["v-8e18f4c0","/code/linux/bash/archives/commands/find.html",{title:"find",type:"article",readingTime:{minutes:1.82,words:545},excerpt:"find find 命令用于寻找文件，会包括当前目录的所有下级目录。 如果不带任何参数，find 文件会列出当前目录的所有文件，甚至还包括相对路径。如果把结果导入 sort 效果更好。 如果想要 ls -l 样式的列表，只要在 find 后面加上 -ls。 find 有它自己的一套复杂的过滤语句。下面列举的是一些最常用的您可以用以获取某些文件列表的过滤器: ",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/commands/find","/code/linux/bash/archives/commands/find.md"]],["v-90b6cce8","/code/linux/bash/archives/commands/fmt.html",{title:"fmt",type:"article",readingTime:{minutes:.49,words:148},excerpt:"fmt fmt 命令用于对文本指定样式。 下面是 example.txt 的内容，是非常长的一行。 fmt 可以将其输出为每行 80 个字符。",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/commands/fmt","/code/linux/bash/archives/commands/fmt.md"]],["v-2c849aa3","/code/linux/bash/archives/commands/grep.html",{title:"grep",type:"article",readingTime:{minutes:1.37,words:411},excerpt:"grep grep 命令用于文件内容的搜索，返回所有匹配的行。 下面是一个例子。 一般情况下，应该使用 grep -R，递归地找出当前目录下符合 someVar 的文件。 別忘了大小不敏感的参数，因为 grep 默认搜索是大小写敏感的。 也可以用 grep -l 光打印出符合条件的文件名而非文件内容选段。 如果您写的脚本或批处理任务需要上面的输出内容，可以使",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/commands/grep","/code/linux/bash/archives/commands/grep.md"]],["v-7ab25e78","/code/linux/bash/archives/commands/gunzip.html",{title:"gunzip",type:"article",readingTime:{minutes:.05,words:16},excerpt:"gunzip gunzip 命令用于解压 gzip 命令压缩的文件。",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/commands/gunzip","/code/linux/bash/archives/commands/gunzip.md"]],["v-dda22454","/code/linux/bash/archives/commands/gzcat.html",{title:"gzcat",type:"article",readingTime:{minutes:.08,words:24},excerpt:"gzcat gzcat 命令用于查看一个 gz 文件，但并不实际解压它。",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/commands/gzcat","/code/linux/bash/archives/commands/gzcat.md"]],["v-3f26ee9f","/code/linux/bash/archives/commands/gzip.html",{title:"gzip",type:"article",readingTime:{minutes:.03,words:10},excerpt:"gzip gzip 命令用于压缩文件。",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/commands/gzip","/code/linux/bash/archives/commands/gzip.md"]],["v-4223ff1b","/code/linux/bash/archives/commands/kill.html",{title:"kill",type:"article",readingTime:{minutes:.05,words:15},excerpt:"kill kill 命令用户终止指定进程。",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/commands/kill","/code/linux/bash/archives/commands/kill.md"]],["v-4f4a2656","/code/linux/bash/archives/commands/killall.html",{title:"killall",type:"article",readingTime:{minutes:.07,words:21},excerpt:"killall killall 命令终止给定名字的一系列相关进程。",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/commands/killall","/code/linux/bash/archives/commands/killall.md"]],["v-17516ae3","/code/linux/bash/archives/commands/last.html",{title:"last",type:"article",readingTime:{minutes:.14,words:43},excerpt:"last last 命令显示用户登录系统的记录。 last 命令后面加上用户名，会显示该用户上次登录的信息。",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/commands/last","/code/linux/bash/archives/commands/last.md"]],["v-7f0062a8","/code/linux/bash/archives/commands/lpq.html",{title:"lpq",type:"article",readingTime:{minutes:.11,words:32},excerpt:"lpq lpq 命令显示打印机队列。",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/commands/lpq","/code/linux/bash/archives/commands/lpq.md"]],["v-7b96b16a","/code/linux/bash/archives/commands/lpr.html",{title:"lpr",type:"article",readingTime:{minutes:.04,words:13},excerpt:"lpr lpr 命令用于打印文件。",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/commands/lpr","/code/linux/bash/archives/commands/lpr.md"]],["v-329352dc","/code/linux/bash/archives/commands/ls.html",{title:"ls",type:"article",readingTime:{minutes:.82,words:245},excerpt:"ls ls 命令用于列出当前目录里面的文件和子目录。 参数 a: 列出隐藏文件; l: 以长格式列出文件; t: 按最后编辑日期排序，最新的最先。这在某个大目录里找出最近修改的文件列表时很有用，比如将结果导入( pipe ) head 或者 sed 10q。或许加上 -l 会效果更好。当然如果您想获取最旧的文件列表，只要加 -r 反转列表即可。; X: 按文",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/commands/ls","/code/linux/bash/archives/commands/ls.md"]],["v-4490e0bb","/code/linux/bash/archives/commands/nl.html",{title:"nl",type:"article",readingTime:{minutes:.56,words:168},excerpt:"nl nl 命令用于显示行号。 下面是 example.txt 文件的内容。 nl 命令让上面这段文本显示行号。 -s 参数表示行号的后缀。",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/commands/nl","/code/linux/bash/archives/commands/nl.md"]],["v-8b6178d4","/code/linux/bash/archives/commands/ps.html",{title:"ps",type:"article",readingTime:{minutes:.26,words:77},excerpt:"ps ps 命令列出当前正在执行的进程信息。 由于进程很多，所以为了快速找到某个进程，一般与 grep 配合使用。 参数 -u 参数列出指定用户拥有的进程。",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/commands/ps","/code/linux/bash/archives/commands/ps.md"]],["v-337ba44e","/code/linux/bash/archives/commands/scp.html",{title:"scp",type:"article",readingTime:{minutes:2.76,words:829},excerpt:"scp 基本用法 scp 是 secure copy 的缩写，用来在两台主机之间加密传送文件。它的底层是 SSH 协议，默认端口是 22。 它主要用于以下三种复制操作。 从本地系统到远程系统。; 从远程系统到本地系统。; 在本地系统的两个远程系统之间。; 使用 scp 传输数据时，文件和密码都是加密的，不会泄漏敏感信息。 scp 的语法类似 cp 的语法。 ",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/commands/scp","/code/linux/bash/archives/commands/scp.md"]],["v-3b947ce7","/code/linux/bash/archives/commands/sed.html",{title:"sed",type:"article",readingTime:{minutes:.33,words:100},excerpt:"sed sed 命令用于对文本进行过滤和变形处理。 下面是 example.txt 文件的内容。 sed 命令将所有的空格换成连词线 -。 下面的命令将数字换成字母 d。",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/commands/sed","/code/linux/bash/archives/commands/sed.md"]],["v-c2caa64a","/code/linux/bash/archives/commands/sort.html",{title:"sort",type:"article",readingTime:{minutes:.24,words:73},excerpt:"sort sort 命令用于文本文件的排序。 下面是 example.txt 文件的内容。 执行 sort 命令对其进行排序。 参数 -R 参数表示随机排序。",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/commands/sort","/code/linux/bash/archives/commands/sort.md"]],["v-e799500a","/code/linux/bash/archives/commands/tr.html",{title:"tr",type:"article",readingTime:{minutes:.3,words:89},excerpt:"tr tr 命令用于按照给定模式转换文本。 下面是 example.txt 文件的内容。 tr 命令可以将所有小写字母转换为大写字母。 tr 命令还可以将所有空格转为换行符。",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/commands/tr","/code/linux/bash/archives/commands/tr.md"]],["v-e924b50e","/code/linux/bash/archives/commands/uname.html",{title:"uname",type:"article",readingTime:{minutes:.05,words:15},excerpt:"uname uname 命令用来显示内核信息。",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/commands/uname","/code/linux/bash/archives/commands/uname.md"]],["v-7e0bbed8","/code/linux/bash/archives/commands/uniq.html",{title:"uniq",type:"article",readingTime:{minutes:.33,words:98},excerpt:"uniq uniq 用于过滤掉重复的行，该命令只对排序后的文件有效。 下面是 example.txt 文件的内容。 对该文件进行排序后，再过滤掉重复的行。 参数 -c 参数会显示每行一共出现了多少次。",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/commands/uniq","/code/linux/bash/archives/commands/uniq.md"]],["v-2e3f2cd1","/code/linux/bash/archives/commands/uptime.html",{title:"uptime",type:"article",readingTime:{minutes:.05,words:15},excerpt:"uptime uptime 命令显示本次开机运行的时间。",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/commands/uptime","/code/linux/bash/archives/commands/uptime.md"]],["v-1ec6cfe2","/code/linux/bash/archives/commands/w.html",{title:"w",type:"article",readingTime:{minutes:.04,words:11},excerpt:"w w 命令显示当期谁在线。",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/commands/w","/code/linux/bash/archives/commands/w.md"]],["v-114d586d","/code/linux/bash/archives/commands/wc.html",{title:"wc",type:"article",readingTime:{minutes:.15,words:44},excerpt:"wc wc 命令返回某个文件的行数、词数和字符数。 上面代码中，7459 是行数，15915 是词数，398400 是字符数。",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/commands/wc","/code/linux/bash/archives/commands/wc.md"]],["v-21d4b770","/code/linux/bash/archives/commands/whereis.html",{title:"whereis",type:"article",readingTime:{minutes:.13,words:38},excerpt:"whereis whereis 用来显示某个命令的位置。如果有多个程序符合条件，会全部列出。",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/commands/whereis","/code/linux/bash/archives/commands/whereis.md"]],["v-2d8f8dfc","/code/linux/bash/archives/commands/which.html",{title:"which",type:"article",readingTime:{minutes:.18,words:54},excerpt:"which which 命令根据 PATH 环境变量指定的顺序，返回最早发现某个命令的位置。即不指定路径时，实际执行的命令的完整路径。",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/commands/which","/code/linux/bash/archives/commands/which.md"]],["v-e6dd9e0a","/code/linux/bash/archives/commands/who.html",{title:"who",type:"article",readingTime:{minutes:.13,words:40},excerpt:"who who 命令显示已经登录的用户。 参数 -b 参数显示上一次系统启动的时间。",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/commands/who","/code/linux/bash/archives/commands/who.md"]],["v-7cb1314d","/code/linux/bash/archives/deleted/stdio.html",{title:"标准 I/O",type:"article",readingTime:{minutes:4.93,words:1478},excerpt:"标准 I/O echo echo 命令用于将指定内容输出到显示屏(标准输出)。 它的参数如下。 -e 解释转义字符。; -n 不输出行尾的换行符; 上面代码中，如果不加 -e 参数，\\n 就会按字面形式输出；加了以后，就被解释成了换行符。 引号之中可以包括多个换行符，即可以输出多行文本。 read read 命令被用来从标准输入读取单行数据。这个命令可以用来",date:"2022-04-19T07:13:07.000Z"},["/code/linux/bash/archives/deleted/stdio","/code/linux/bash/archives/deleted/stdio.md"]],["v-3706649a","/404.html",{title:"",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/404"]],["v-5bc93818","/category/",{title:"分类",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/category/index.html"]],["v-744d024e","/tag/",{title:"标签",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/tag/index.html"]],["v-e52c881c","/article/",{title:"文章",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/article/index.html"]],["v-75ed4ea4","/encrypted/",{title:"加密",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/encrypted/index.html"]],["v-2897d318","/slides/",{title:"幻灯片",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/slides/index.html"]],["v-154dc4c4","/star/",{title:"收藏",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/star/index.html"]],["v-01560935","/timeline/",{title:"时间轴",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/timeline/index.html"]],["v-43d7543a","/category/vuepress/",{title:"vuepress 分类",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/category/vuepress/index.html"]],["v-84f914f4","/tag/hello-world/",{title:"hello world 标签",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/tag/hello-world/index.html"]],["v-5f7f7ebf","/category/%E6%9C%8D%E5%8A%A1%E5%99%A8/",{title:"服务器 分类",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/category/服务器/","/category/%E6%9C%8D%E5%8A%A1%E5%99%A8/index.html"]],["v-1daa6b4d","/tag/%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/",{title:"快速上手 标签",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/tag/快速上手/","/tag/%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/index.html"]],["v-4f7b1987","/category/%E6%95%99%E7%A8%8B/",{title:"教程 分类",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/category/教程/","/category/%E6%95%99%E7%A8%8B/index.html"]],["v-60379330","/tag/node.js/",{title:"Node.js 标签",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/tag/node.js/index.html"]],["v-9c48d85a","/category/linux/",{title:"Linux 分类",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/category/linux/index.html"]],["v-17343014","/tag/%E8%BD%AF%E4%BB%B6/",{title:"软件 标签",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/tag/软件/","/tag/%E8%BD%AF%E4%BB%B6/index.html"]],["v-2ae54282","/category/%E5%9F%BA%E7%A1%80/",{title:"基础 分类",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/category/基础/","/category/%E5%9F%BA%E7%A1%80/index.html"]],["v-755965f0","/tag/%E5%AE%89%E8%A3%85/",{title:"安装 标签",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/tag/安装/","/tag/%E5%AE%89%E8%A3%85/index.html"]],["v-b749fb9c","/category/node.js/",{title:"Node.js 分类",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/category/node.js/index.html"]],["v-a0ba2788","/tag/%E4%BB%8B%E7%BB%8D/",{title:"介绍 标签",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/tag/介绍/","/tag/%E4%BB%8B%E7%BB%8D/index.html"]],["v-65f6d381","/category/vue/",{title:"Vue 分类",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/category/vue/index.html"]],["v-b302da92","/tag/vue/",{title:"Vue 标签",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/tag/vue/index.html"]],["v-e9c7e408","/category/%E5%89%8D%E7%AB%AF/",{title:"前端 分类",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/category/前端/","/category/%E5%89%8D%E7%AB%AF/index.html"]],["v-551fb564","/tag/%E5%B0%8F%E7%A8%8B%E5%BA%8F/",{title:"小程序 标签",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/tag/小程序/","/tag/%E5%B0%8F%E7%A8%8B%E5%BA%8F/index.html"]],["v-e2bac56c","/category/javascript/",{title:"JavaScript 分类",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/category/javascript/index.html"]],["v-551de488","/tag/%E5%AF%B9%E6%AF%94/",{title:"对比 标签",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/tag/对比/","/tag/%E5%AF%B9%E6%AF%94/index.html"]],["v-65efd6b5","/category/git/",{title:"Git 分类",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/category/git/index.html"]],["v-7cfd563e","/tag/%E6%96%87%E6%A1%A3/",{title:"文档 标签",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/tag/文档/","/tag/%E6%96%87%E6%A1%A3/index.html"]],["v-fd3344d8","/category/github/",{title:"GitHub 分类",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/category/github/index.html"]],["v-14748cc9","/tag/%E5%9F%BA%E7%A1%80/",{title:"基础 标签",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/tag/基础/","/tag/%E5%9F%BA%E7%A1%80/index.html"]],["v-5839c72f","/category/json/",{title:"JSON 分类",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/category/json/index.html"]],["v-801db588","/tag/typescript/",{title:"TypeScript 标签",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/tag/typescript/index.html"]],["v-d37ff7f0","/category/markdown/",{title:"Markdown 分类",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/category/markdown/index.html"]],["v-56fbf552","/tag/%E7%BD%91%E9%A1%B5/",{title:"网页 标签",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/tag/网页/","/tag/%E7%BD%91%E9%A1%B5/index.html"]],["v-78cbe7bb","/category/python/",{title:"Python 分类",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/category/python/index.html"]],["v-b310d42a","/tag/git/",{title:"Git 标签",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/tag/git/index.html"]],["v-6c5e4d32","/category/typescript/",{title:"TypeScript 分类",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/category/typescript/index.html"]],["v-50ae161a","/tag/deploy/",{title:"deploy 标签",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/tag/deploy/index.html"]],["v-5904f150","/category/yaml/",{title:"YAML 分类",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/category/yaml/index.html"]],["v-484552dc","/tag/markdown/",{title:"Markdown 标签",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/tag/markdown/index.html"]],["v-65ee2aa4","/category/css/",{title:"CSS 分类",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/category/css/index.html"]],["v-2831124d","/tag/bash/",{title:"Bash 标签",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/tag/bash/index.html"]],["v-b3bd56da","/category/emmet/",{title:"Emmet 分类",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/category/emmet/index.html"]],["v-4b0ad344","/tag/vue-cli/",{title:"Vue Cli 标签",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/tag/vue-cli/index.html"]],["v-581e04cc","/category/html/",{title:"HTML 分类",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/category/html/index.html"]],["v-12cb3644","/tag/%E6%8C%87%E4%BB%A4/",{title:"指令 标签",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/tag/指令/","/tag/%E6%8C%87%E4%BB%A4/index.html"]],["v-2dcc8639","/category/jquery/",{title:"jQuery 分类",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/category/jquery/index.html"]],["v-3fb58c9e","/tag/vue-router/",{title:"Vue Router 标签",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/tag/vue-router/index.html"]],["v-284efd1e","/tag/demo/",{title:"Demo 标签",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/tag/demo/index.html"]],["v-2953cd2f","/tag/vuex/",{title:"Vuex 标签",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/tag/vuex/index.html"]],["v-c7bf80f0","/tag/%E5%BF%AB%E6%8D%B7%E9%94%AE/",{title:"快捷键 标签",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/tag/快捷键/","/tag/%E5%BF%AB%E6%8D%B7%E9%94%AE/index.html"]],["v-288e2c56","/tag/html/",{title:"HTML 标签",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/tag/html/index.html"]],["v-a26e9aaa","/tag/action/",{title:"action 标签",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/tag/action/index.html"]],["v-54f4d5c2","/tag/workflow/",{title:"workflow 标签",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/tag/workflow/index.html"]],["v-3891cf12","/tag/emoji/",{title:"Emoji 标签",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/tag/emoji/index.html"]],["v-b3142c4c","/tag/css/",{title:"CSS 标签",type:"page",readingTime:{minutes:0,words:0},excerpt:""},["/tag/css/index.html"]]].reduce(((e,[t,a,d,i])=>(e.push({name:t,path:a,component:n.Ye,meta:d},...i.map((e=>({path:e,redirect:a})))),e)),[{name:"404",path:"/:catchAll(.*)",component:n.Ye}])},35220:(e,t,a)=>{a.d(t,{H:()=>n});const n={base:"/",lang:"zh-CN",title:"Shimon's Blog",description:"Shimon的技术日志",head:[["link",{rel:"stylesheet",href:"//at.alicdn.com/t/font_2410206_mfj6e1vbwo.css"}],["script",{},'\n      var _hmt = _hmt || [];\n      (function() {\n        var hm = document.createElement("script");\n        hm.src = "https://hm.baidu.com/hm.js?1f2feb478267b47b1912f4c11c0d9215";\n        var s = document.getElementsByTagName("script")[0]; \n        s.parentNode.insertBefore(hm, s);\n      })();\n    '],["link",{rel:"icon",href:"/favicon.ico"}],["link",{rel:"icon",href:"/chrome-192x192.png",type:"image/png",sizes:"192x192"}],["link",{rel:"icon",href:"/chrome-512x512.png",type:"image/png",sizes:"512x512"}],["link",{rel:"manifest",href:"/manifest.webmanifest",crossorigin:"use-credentials"}],["meta",{name:"theme-color",content:"#5c92d1"}],["link",{rel:"apple-touch-icon",href:"/apple-touch-icon.png"}],["meta",{name:"apple-mobile-web-app-capable",content:"yes"}],["meta",{name:"apple-mobile-web-app-status-bar-style",content:"white"}],["meta",{name:"msapplication-TileImage",content:"/mstile-150x150.png"}],["meta",{name:"msapplication-TileColor",content:"#2d89ef"}],["meta",{name:"viewport",content:"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, viewport-fit=cover"}]],locales:{}}},72232:(e,t,a)=>{a.d(t,{f:()=>n});const n={blog:{avatar:"/avatar.jpg",roundAvatar:!0,description:"Stay hungry. Stay foolish.",medias:{Email:"mailto:zhanxinming1999@gmail.com",GitHub:"https://github.com/shimonzhan",QQ:"http://wpa.qq.com/msgrd?v=3&uin=942890268&site=qq&menu=yes"}},encrypt:{config:{}},pure:!1,iconPrefix:"iconfont icon-",darkmode:"switch",themeColor:{red:"#e74c3c",blue:"#3498db",green:"#3eaf7c",orange:"#f39c12",purple:"#8e44ad"},fullscreen:!0,locales:{"/":{lang:"zh-CN",navbarLocales:{langName:"简体中文",selectLangText:"选择语言",selectLangAriaLabel:"选择语言"},metaLocales:{author:"作者",date:"写作日期",origin:"原创",views:"访问量",category:"分类",tag:"标签",readingTime:"阅读时间",words:"字数",toc:"此页内容",prev:"上一页",next:"下一页",lastUpdated:"上次编辑于",contributors:"贡献者",editLink:"编辑此页"},blogLocales:{article:"文章",articleList:"文章列表",category:"分类",tag:"标签",timeline:"时间轴",timelineTitle:"昨日不在",all:"全部",intro:"个人介绍",star:"收藏",slides:"幻灯片",encrypt:"加密"},paginationLocales:{prev:"上一页",next:"下一页",navigate:"跳转到",action:"前往",errorText:"请输入 1 到 $page 之前的页码！"},outlookLocales:{themeColor:"主题色",darkmode:"外观",fullscreen:"全屏"},encryptLocales:{title:"文章已加密",placeholder:"输入密码",remember:"记住密码",errorHint:"请输入正确的密码"},routeLocales:{"404msg":["这里什么也没有","我们是怎么来到这儿的？","这 是 四 零 四 !","看起来你访问了一个失效的链接"],back:"返回上一页",home:"带我回家",openInNewWindow:"Open in new window"},blog:{},repoDisplay:!1,navbarIcon:!0,navbarAutoHide:"mobile",hideSiteNameonMobile:!0,sidebar:"structure",sidebarIcon:!0,headerDepth:2,author:{name:"Shimon Zhan",url:"https://shimonzhan.com"},logo:"/logo.svg",navbar:["/",{text:"杂谈",icon:"note",link:"/note/"},{text:"代码笔记",icon:"code",prefix:"/code/",children:[{text:"代码笔记",icon:"code",link:"",activeMatch:"^/code/$"},"linux/","node-js/","vue/","website/"]},{text:"软件教程",icon:"software",prefix:"/software/",children:[{text:"软件教程",icon:"software",link:"",activeMatch:"^/software/$"},"git/"]}],displayFooter:!0,copyright:"Copyright © 2021-present Shimon Zhan",pageInfo:["Author","Original","Date","Category","Tag","ReadingTime"]}}}},34677:(e,t,a)=>{a.d(t,{v:()=>d});var n=a(92153);const d=()=>[(0,n.ay)(),(0,n.xr)(),(0,n.fI)(),(0,n.B2)(),(0,n.YU)(),(0,n.Ov)(),(0,n.UA)()]},87275:(e,t,a)=>{a.d(t,{G:()=>n});const n={"/":["README.md",{text:"代码笔记",icon:"code",collapsable:!0,prefix:"code/",children:["README.md",{text:"Linux",icon:"linux",collapsable:!0,prefix:"linux/",children:["README.md",{text:"Bash 教程",icon:"shell",collapsable:!0,prefix:"bash/",children:["README.md","function.md","variable.md","startup.md","grammar.md","expansion.md","arithmetic.md","intro.md","script.md","readline.md","mktemp.md","read.md","set.md","prompt.md","string.md","quotation.md","loop.md","array.md","condition.md","stack.md","debug.md"]},"centos.md",{text:"Linux 命令格式",icon:"shell",collapsable:!0,prefix:"command/",children:["README.md","temp.md","other.md","excu.md","add.md","command.md","file.md","dir.md","path.md","ln.md"]},{text:"Linux 简介",icon:"info",collapsable:!0,prefix:"intro/",children:["README.md","history.md","advantage.md","intro.md","startup.md","desktop.md","language.md"]},"ssh.md",{text:"ubuntu",icon:"ubuntu",collapsable:!0,prefix:"ubuntu/",children:["README.md","debug.md","manage.md","webserver.md","lang.md"]},"WSL.md",{text:"文件",icon:"file",collapsable:!0,prefix:"file/",children:["README.md","mount.md","file.md","dir.md"]}]},{text:"Node.js",icon:"nodeJS",collapsable:!0,prefix:"node-js/",children:["README.md","intro.md","install.md",{text:"常见 Node 库",collapsable:!0,prefix:"package/",children:["README.md","axois.md"]},"environment.md","module.md","program.md"]},{text:"Vue.js",icon:"vue",collapsable:!0,prefix:"vue/",children:["README.md","ts-demo.md",{text:"Vue Router",icon:"router",collapsable:!0,prefix:"router/",children:["README.md","get-started.md","demo.md"]},"compare.md","vue.md",{text:"Vue-cli",icon:"vue",collapsable:!0,prefix:"cli/",children:["README.md","intro.md","quick-dev.md","file.md","create.md"]},{text:"Vuex",icon:"state",collapsable:!0,prefix:"vuex/",children:["README.md","get-started.md","demo.md"]},"ts-decorator.md","install.md","get-started.md","component.md"]},{text:"代码学习教程",icon:"read",collapsable:!0,prefix:"language/",children:["README.md",{text:"JavaScript 教程",icon:"javascript",collapsable:!0,prefix:"js/",children:["README.md",{text:"es6 入门",icon:"es6",collapsable:!0,prefix:"es6/",children:["README.md","arraybuffer.md","async.md","class.md","class-extends.md","intro.md","generator.md","generator-async.md","iterator.md","let.md","mixin.md","module-loader.md","module.md","promise.md","proxy.md","reflect.md","set-map.md","simd.md","symbol.md","decorator.md","proposals.md","fp.md","function.md","reference.md","destructuring.md","string.md","object.md","number.md","array.md","regex.md","style.md","spec.md"]},{text:"JavaScript 简介",icon:"info",collapsable:!0,prefix:"intro/",children:["README.md","history.md"]},{text:"函数",icon:"function",collapsable:!0,prefix:"function/",children:["README.md","generator.md","map-and-reduce.md","this.md","intro.md","scope.md","declare.md","method.md","call.md","arrow-function.md","destructuring.md","closure.md","higher-order-function.md"]},{text:"对象",icon:"object",collapsable:!0,prefix:"object/",children:["README.md","class.md","date.md","JSON.md","regExp.md","create.md","wrap.md","extend.md","intro.md"]},{text:"快速上手",icon:"creative",collapsable:!0,prefix:"guide/",children:["README.md","map-and-set.md","function.md","variable.md","grammar.md","string.md","exercise.md","object.md","boolean.md","loop.md","get-started.md","data-structure.md","array.md","condition.md","iterable.md"]},{text:"数据类型",icon:"type",collapsable:!0,prefix:"types/",children:["README.md","null-undefined.md","number.md","string.md","function.md","object.md","boolean.md","general.md","array.md"]},{text:"浏览器",icon:"chrome",collapsable:!0,prefix:"browser/",children:["README.md","ajax.md","canvas.md","promise.md","dom.md","file.md","form.md","intro.md","browser-object.md"]},{text:"运算符",icon:"symbol",collapsable:!0,prefix:"operators/",children:["README.md","bit.md","priority.md","boolean.md","comparison.md","arithmetic.md"]},"error.md"]},{text:"JSON 教程",icon:"json",collapsable:!0,prefix:"json/",children:["README.md"]},{text:"Markdown",icon:"markdown",collapsable:!0,prefix:"markdown/",children:["README.md",{text:"Emoji 列表",icon:"emoji",collapsable:!0,prefix:"emoji/",children:["README.md","people.md","place.md","object.md","symbol.md","nature.md"]},"intro.md","block.md","extend.md","inline.md","demo.md"]},{text:"Python 语言教程",icon:"python",collapsable:!0,prefix:"python/",children:["README.md",{text:"Python 高级语法",icon:"advance",collapsable:!0,prefix:"advance/",children:["README.md","slice.md","list-comprehensions.md","generator.md","iteration.md","iterator.md"]},{text:"介绍",icon:"info",collapsable:!0,prefix:"intro/",children:["README.md","intro.md","interpreter.md","install.md"]},{text:"函数",icon:"function",collapsable:!0,prefix:"function/",children:["README.md","intro.md","argument.md","define.md","call.md","recursive.md"]},{text:"函数式编程",icon:"function",collapsable:!0,prefix:"functional-programming/",children:["README.md","parital-function.md","anonymous-function.md","decorator.md","return-function.md"]},{text:"快速上手",icon:"creative",collapsable:!0,prefix:"guide/",children:["README.md","dict-and-set.md","list-and-tuple.md","basic.md","string.md","loop.md","condition.md","write.md","exercise.md","io.md"]},{text:"模块",icon:"module",collapsable:!0,prefix:"module/",children:["README.md","usage.md","install.md","intro.md"]},{text:"面向对象编程",collapsable:!0,prefix:"oop/",children:["README.md","customize.md","property.md","special.md","instance.md","extend.md","info.md","intro.md"]}]},{text:"TypeScript 教程",icon:"typescript",collapsable:!0,prefix:"typescript/",children:["README.md",{text:"基础",icon:"module",collapsable:!0,prefix:"basics/",children:["README.md","any.md","built-in-objects.md","type-of-function.md","primitive-data-types.md","declaration-files.md","type-of-object-interfaces.md","type-of-array.md","type-inference.md","type-assertion.md","union-types.md"]},{text:"工程",icon:"engine",collapsable:!0,prefix:"engineering/",children:["README.md","lint.md"]},{text:"简介",icon:"info",collapsable:!0,prefix:"intro/",children:["README.md","hello-typescript.md","what-is-typescript.md","get-typescript.md"]},{text:"进阶",icon:"advance",collapsable:!0,prefix:"advanced/",children:["README.md","tuple.md","declaration-merging.md","string-literal-types.md","further-reading.md","enum.md","generics.md","class.md","class-and-interfaces.md","type-aliases.md"]}]},{text:"YAML 教程",icon:"yaml",collapsable:!0,prefix:"yaml/",children:["README.md"]},"learning.md"]},{text:"网页入门",icon:"network",collapsable:!0,prefix:"website/",children:["README.md",{text:"CSS",icon:"css",collapsable:!0,prefix:"css/",children:["README.md",{text:"CSS 介绍",icon:"info",collapsable:!0,prefix:"intro/",children:["README.md","value.md","replaced.md","media.md","font.md","text-direction.md","overflow.md","box.md","background-and-border.md","sizing.md","selector.md"]},{text:"CSS 布局",icon:"layout",collapsable:!0,prefix:"layout/",children:["README.md","exercise.md","flex.md","intro.md","flow.md","float.md","grid.md"]},{text:"快速上手",icon:"creative",collapsable:!0,prefix:"guide/",children:["README.md","declaration.md","cascade.md","common.md","import.md","box.md","selector.md"]}]},{text:"Emmet 语法",icon:"emmet",collapsable:!0,prefix:"emmet/",children:["README.md","css.md","html.md"]},{text:"HTML",icon:"html",collapsable:!0,prefix:"html/",children:["README.md",{text:"HTML 介绍",icon:"info",collapsable:!0,prefix:"intro/",children:["README.md","head.md","history.md","svg.md","image.md","basic.md","embed.md","format.md","media.md","layout.md","table.md","link.md"]},{text:"定义",icon:"info",collapsable:!0,prefix:"definition/",children:["README.md","mime.md","seo.md","uri.md","url.md"]},{text:"快速上手",icon:"creative",collapsable:!0,prefix:"guide/",children:["README.md","tag.md"]}]},"https.md","js.md",{text:"jQuery",icon:"jQuery",collapsable:!0,prefix:"jQuery/",children:["README.md","ajax.md","intro.md","event.md","modify-dom.md","animation.md","extend.md","operate-dom.md","selector.md"]}]}]},{text:"杂谈",icon:"edit",collapsable:!0,prefix:"note/",children:["README.md","helloworld.md"]},{text:"软件教程",icon:"software",collapsable:!0,prefix:"software/",children:["README.md",{text:"Git",icon:"git",collapsable:!0,prefix:"git/",children:["README.md","gitLFS.md","intro.md","create-repo.md","working.md","change.md","branch.md","install.md","working-directory.md","ignore.md","recall.md","server.md","tag.md","reset.md","status.md","custom.md","remote.md"]},{text:"GitHub",icon:"github",collapsable:!0,prefix:"github/",children:["README.md",{text:"GitHub Actions",icon:"actions",collapsable:!0,prefix:"actions/",children:["README.md","config.md","intro.md","cache.md","checkout.md","gh-pages-deploy.md"]},"pages.md","token.md","intro.md","pr.md","speedup.md","deploy.md","semantic.md"]},{text:"MySQL",icon:"mysql",collapsable:!0,prefix:"mysql/",children:["README.md","compare.md","intro.md"]},"nginx.md"]}]}},76334:(e,t,a)=>{a.d(t,{c:()=>n});const n={Email:'<svg xmlns="http://www.w3.org/2000/svg" class="icon email-icon" viewBox="0 0 1024 1024" ariaLabelledby="email"><circle cx="512" cy="512" r="512" fill="#1384FF" />,<path d="M299.372 313.572H722.93c28.945 0 52.61 21.845 52.975 48.787L511.333 500.35 246.76 362.481c.182-27.003 23.666-48.97 52.611-48.97zm-52.671 101.702l-.243 244.121c0 27.186 23.848 49.395 52.914 49.395H722.93c29.127 0 52.975-22.21 52.975-49.395V415.152L517.522 546.71a13.957 13.957 0 01-12.682 0L246.7 415.274z" fill="#fff" /></svg>',GitHub:'<svg xmlns="http://www.w3.org/2000/svg" class="icon github-icon" viewBox="0 0 1024 1024" ariaLabelledby="github"><circle cx="512" cy="512" r="512" fill="#171515" />,<path d="M509.423 146.442c-200.317 0-362.756 162.42-362.756 362.8 0 160.266 103.936 296.24 248.109 344.217 18.139 3.327 24.76-7.872 24.76-17.486 0-8.613-.313-31.427-.49-61.702-100.912 21.923-122.205-48.63-122.205-48.63-16.495-41.91-40.28-53.067-40.28-53.067-32.937-22.51 2.492-22.053 2.492-22.053 36.407 2.566 55.568 37.386 55.568 37.386 32.362 55.438 84.907 39.43 105.58 30.143 3.296-23.444 12.667-39.43 23.032-48.498-80.557-9.156-165.246-40.28-165.246-179.297 0-39.604 14.135-71.988 37.342-97.348-3.731-9.178-16.18-46.063 3.556-96.009 0 0 30.46-9.754 99.76 37.19 28.937-8.048 59.97-12.071 90.823-12.211 30.807.14 61.843 4.165 90.822 12.21 69.26-46.944 99.663-37.189 99.663-37.189 19.792 49.946 7.34 86.831 3.61 96.01 23.25 25.359 37.29 57.742 37.29 97.347 0 139.366-84.82 170.033-165.637 179.013 13.026 11.2 24.628 33.342 24.628 67.182 0 48.498-.445 87.627-.445 99.521 0 9.702 6.535 20.988 24.945 17.444 144.03-48.067 247.881-183.95 247.881-344.175 0-200.378-162.442-362.798-362.802-362.798z" fill="#fff" /></svg>',QQ:'<svg xmlns="http://www.w3.org/2000/svg" class="icon qq-icon" viewBox="0 0 1024 1024" ariaLabelledby="qq"><circle cx="512" cy="512" r="512" fill="#5EAADE" />,<path d="M729.46 627.3c-3.157-39.628-24.045-83.747-32.624-105.91l-22.084-57.047c-.702-23.73 6.312-78.322-30.511-146.61s-110.82-74.446-124.497-75.147c-13.677-.701-99.248-1.403-141.331 72.945-42.084 74.347-30.745 148.812-30.745 148.812l-23.523 57.478c-.001.002-10.962 26.223-20.43 58.135-9.469 31.914-18.938 82.064-9.469 92.234 9.47 10.17 43.837-46.643 46.993-51.903 0 0 2.456 27.18 8.943 41.383l.81 1.776.33.723.38.826.3.652.444.96.203.436a281.465 281.465 0 0 0 1.917 4.025l.189.386c.231.473.468.953.711 1.442l.146.292c6.886 13.807 18.61 33.823 37.443 50.42l.018.016-1.184.387c-10.667 3.516-31.694 11.21-40.625 19.82-1.717 1.655-2.987 3.344-3.65 5.045-5.376 13.794 4.208 15.43 20.575 16.366 16.366.934 94.923 3.04 132.564-2.221.407-.056.787-.114 1.17-.171 2.711.094 5.324.142 7.83.16l.151.002c.836.005 1.663.008 2.475.008.496 0 1.015-.002 1.542-.006l.21-.001a222.593 222.593 0 0 0 5.462-.107c.26.038.508.076.778.114 37.642 5.26 116.198 3.156 132.564 2.22 16.366-.934 25.951-2.571 20.574-16.365-4.302-11.037-34.175-21.62-45.956-25.413a141.388 141.388 0 0 0 7.958-7.645l.237-.245a142.494 142.494 0 0 0 2.53-2.702c42.435-46.643 38.928-76.101 40.682-92.935 0 0 35.775 51.553 43.488 53.306 7.713 1.754 10.169-6.31 7.012-45.94z" fill="#fff" /></svg>'}}},e=>{e.O(0,[25325,38815],(()=>(26669,e(e.s=26669)))),e.O()}]);