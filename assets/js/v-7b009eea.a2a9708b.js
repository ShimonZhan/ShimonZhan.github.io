"use strict";(self.webpackChunkshimon_blog=self.webpackChunkshimon_blog||[]).push([[54460],{65049:(e,t,a)=>{a.r(t),a.d(t,{data:()=>r});const r={key:"v-7b009eea",path:"/software/github/intro.html",title:"GitHub 简介",lang:"zh-CN",frontmatter:{title:"GitHub 简介",icon:"info",date:"2019-11-20T00:00:00.000Z",category:["GitHub"],tag:["介绍"],summary:"GitHub 是世界上最大的 代码托管网站 :yum:当然在上面交友也是极好的(这是重点，圈起来要考的:sunglasses:)。 基本概念 repository 仓库。一个仓库即是一个项目。仓库是 GitHub 上的主要内容。每当您新建一个项目并想要在 GitHub。 Star 收藏。在每一个仓库主页的上方可以看到 star 按钮。其上的数值为收藏该项目的",head:[["meta",{property:"og:url",content:"https://shimonzhan.com/software/github/intro.html"}],["meta",{property:"og:site_name",content:"Shimon's Blog"}],["meta",{property:"og:title",content:"GitHub 简介"}],["meta",{property:"og:type",content:"article"}],["meta",{property:"og:image",content:"https://shimonzhan.com/"}],["meta",{property:"og:updated_time",content:"2022-04-19T07:13:07.000Z"}],["meta",{property:"og:locale",content:"zh-CN"}],["meta",{name:"twitter:card",content:"summary_large_image"}],["meta",{name:"twitter:image:alt",content:"GitHub 简介"}],["meta",{property:"article:tag",content:"介绍"}],["meta",{property:"article:published_time",content:"2019-11-20T00:00:00.000Z"}],["meta",{property:"article:modified_time",content:"2022-04-19T07:13:07.000Z"}]]},excerpt:"",headers:[{level:2,title:"Gayhub GitHub 是世界上最大的 同性交友 代码托管网站",slug:"gayhub-github-是世界上最大的-同性交友-代码托管网站",children:[]},{level:2,title:"基本概念",slug:"基本概念",children:[{level:3,title:"repository",slug:"repository",children:[]},{level:3,title:"Star",slug:"star",children:[]},{level:3,title:"fork",slug:"fork",children:[]},{level:3,title:"issue",slug:"issue",children:[]},{level:3,title:"pull request",slug:"pull-request",children:[]},{level:3,title:"watch",slug:"watch",children:[]},{level:3,title:"review",slug:"review",children:[]}]},{level:2,title:"主页",slug:"主页",children:[]},{level:2,title:"个人主页",slug:"个人主页",children:[{level:3,title:"Overview",slug:"overview",children:[]},{level:3,title:"Repositories",slug:"repositories",children:[]},{level:3,title:"Projects",slug:"projects",children:[]},{level:3,title:"Packages",slug:"packages",children:[]},{level:3,title:"Stars",slug:"stars",children:[]},{level:3,title:"Followers / Following",slug:"followers-following",children:[]}]},{level:2,title:"仓库主页",slug:"仓库主页",children:[]}],git:{createdTime:1650352387e3,updatedTime:1650352387e3,contributors:[{name:"ShimonZhan",email:"942890268@qq.com",commits:1}]},readingTime:{minutes:4.86,words:1459},filePathRelative:"software/github/intro.md"}},38173:(e,t,a)=>{a.r(t),a.d(t,{default:()=>u});var r=a(66252);const i=a.p+"assets/img/mainPage.d0f288c1.png",s=a.p+"assets/img/profile.aa46a883.png",l=a.p+"assets/img/personalRepo.270fe68b.png",o=a.p+"assets/img/repo.495ecccf.png",h=(0,r.uE)('<h2 id="gayhub-github-是世界上最大的-同性交友-代码托管网站" tabindex="-1"><a class="header-anchor" href="#gayhub-github-是世界上最大的-同性交友-代码托管网站" aria-hidden="true">#</a> <s>Gayhub</s> GitHub 是世界上最大的 <s>同性交友</s> 代码托管网站</h2><p>😋当然在上面交友也是极好的(这是重点，圈起来要考的😎)。</p><h2 id="基本概念" tabindex="-1"><a class="header-anchor" href="#基本概念" aria-hidden="true">#</a> 基本概念</h2><h3 id="repository" tabindex="-1"><a class="header-anchor" href="#repository" aria-hidden="true">#</a> repository</h3><p>仓库。一个仓库即是一个项目。仓库是 GitHub 上的主要内容。每当您新建一个项目并想要在 GitHub。</p><h3 id="star" tabindex="-1"><a class="header-anchor" href="#star" aria-hidden="true">#</a> Star</h3><p>收藏。在每一个仓库主页的上方可以看到 star 按钮。其上的数值为收藏该项目的人数。点击星星即可将当前仓库收藏到您的账号上。您可以收藏一些您比较喜欢，或者项目对您来说有很大价值的项目。同时，点击数字可以看到哪些人收藏了这个项目。</p><h3 id="fork" tabindex="-1"><a class="header-anchor" href="#fork" aria-hidden="true">#</a> fork</h3><p>复刻。在每一个仓库主页的上方可以看到 Fork 按钮。点击该按钮的作用是将当前项目复刻一份到自己的仓库中，这样，您就可以在此仓库仓库上查看当前、历史的版本，切换分支、或者是随心所欲的进行修改。原项目的新的推送、对历史版本的修改、甚至原作者删除了他的 repo，都不会对您 fork 的项目产生任何影响。</p><h3 id="issue" tabindex="-1"><a class="header-anchor" href="#issue" aria-hidden="true">#</a> issue</h3><p>议题。这是一个类似讨论区的地方。如果您在使用该项目的过程中遇到了问题，可以在相应项目的 Issue 板块按照项目的要求提出 Issue。在 Issue 中可以汇报一个 bug，或者是提出一个 Feature Request (功能请求)。项目的拥有者会针对您汇报的情况对您做出回复。同时，项目拥有者还可以为此 issue 增加 label (标签)，以帮助项目成员或是项目的其他使用者更好的理解您提出 issue。也可以将您的 issue assign (分派) 给特定的项目成员解决。</p><div class="custom-container tip"><p class="custom-container-title">提示</p><p>为了 GitHub 的友好交流环境，请在汇报 bug 时永远带上 bug 的一个简易的复现流程，可以直接建立一个简单的 bug repository 并把链接放置在您提出的 issue 中。</p></div><h3 id="pull-request" tabindex="-1"><a class="header-anchor" href="#pull-request" aria-hidden="true">#</a> pull request</h3><p>发起推送请求，简称 <strong>PR</strong>。如果是您自己的项目，您可以从一个分支向另一个分支发起推送请求。如果您想对别人的(您无权进行推送)项目进行代码的推送请求的化，需要先 fork 这个仓库。在自己 fork 的项目上进行修改，然后提交到自己的项目上，之后，建立一个从自己仓库到对方仓库的 PR。如果对方觉得您的新改动很不错，在经过测试或者 review 后就会接受它，这样原有项目就可拥有这些新的代码了.</p><h3 id="watch" tabindex="-1"><a class="header-anchor" href="#watch" aria-hidden="true">#</a> watch</h3><p>关注，在每一个仓库主页的上方可以看到 Watch 按钮。如果您关注了某个项目,那么这个项目有了变化的时候,您就会得到通知.在您点击关注后，您还可以点击下拉列表进一步设置关注级别。您可以选择接受 Release (新发布) 通知，也可以选择 Watching 来监听所有的通知。当您选择 Ignore 的话，即使有人在这个仓库中 metion (提到) 了您，您也不会得到通知。</p><h3 id="review" tabindex="-1"><a class="header-anchor" href="#review" aria-hidden="true">#</a> review</h3><p>审查。当项目收到 PR 时，项目的拥有成员可以对这份 PR 的代码改动进行审查，在 Review 的过程中，可以对代码的特定行或特定几行通过 comment(评论) 的方式来提出自己对代码改动的意见。</p><h2 id="主页" tabindex="-1"><a class="header-anchor" href="#主页" aria-hidden="true">#</a> 主页</h2><p><img src="'+i+'" alt="个人主页" loading="lazy"></p>',20),n={href:"https://github.com",target:"_blank",rel:"noopener noreferrer"},d=(0,r.Uk)("https://github.com"),c=(0,r.uE)('<p>主页，在您登陆后，屏幕的左侧会展示您和您加入团队的项目，以及您的团队详情。中部会显示您关注的项目、人的动态，右侧会根据算法展示一些您可能会感兴趣的 repo。</p><h2 id="个人主页" tabindex="-1"><a class="header-anchor" href="#个人主页" aria-hidden="true">#</a> 个人主页</h2><p><img src="'+s+'" alt="个人主页" loading="lazy"></p><p><strong>地址:</strong> <code>https://github.com/&lt;您的用户名&gt;</code></p><p>个人主页会有几个主要面板:</p><h3 id="overview" tabindex="-1"><a class="header-anchor" href="#overview" aria-hidden="true">#</a> Overview</h3><p>个人概览，您可以在上方 pin(固定) 最多六个您想要展示给他人的仓库。</p><p>下方就是您过去一年里向 GitHub 的提交数量分布图，以及您在 GitHub 上的活动比例。</p><p>最下方是近几年您在 GitHub 上的活动记录。</p><h3 id="repositories" tabindex="-1"><a class="header-anchor" href="#repositories" aria-hidden="true">#</a> Repositories</h3><p><img src="'+l+'" alt="个人仓库" loading="lazy"></p><p>仓库列表，该面板会按照最后更新时间的倒序，展示该用户拥有的所有 reo，同时也会在面板上展示项目的 Descript(描述)、Star 数、Fork 数、语言、协议、标签，以及过去一年内项目的 commit 分布数量。这些都能够帮助浏览者在不进入具体仓库页面的情况下大致了解每一个仓库的内容、欢迎程度与维护情况。</p><h3 id="projects" tabindex="-1"><a class="header-anchor" href="#projects" aria-hidden="true">#</a> Projects</h3><p>个人拥有的项目，在管理自己与团队跨仓库的活动日程时很有用。可以设置涉及到的仓库，提出任务、代办、时间表等。</p><h3 id="packages" tabindex="-1"><a class="header-anchor" href="#packages" aria-hidden="true">#</a> Packages</h3><p>个人在 GitHub 上拥有的包。目前较少人在 GitHub 上发布相关的包。</p><h3 id="stars" tabindex="-1"><a class="header-anchor" href="#stars" aria-hidden="true">#</a> Stars</h3><p>和仓库列表完全相同，只不过展示该用户收藏的 repo。</p><h3 id="followers-following" tabindex="-1"><a class="header-anchor" href="#followers-following" aria-hidden="true">#</a> Followers / Following</h3><p>关注您的人 / 关注的人。在个人主页的左侧就有 follow 按钮，follow 一个人意味着这个人在 GitHub 的的活动会出现在 GitHub 主页的 Activity List 上。</p><h2 id="仓库主页" tabindex="-1"><a class="header-anchor" href="#仓库主页" aria-hidden="true">#</a> 仓库主页</h2><p><img src="'+o+'" alt="仓库主页" loading="lazy"></p><p>仓库主页主要显示项目的信息。从左到右的面板依次是: Code(代码)，Issues (问题)、Pull Requests (提交请求)、Actions (自动流程)、 Projects (项目)、 Wiki (项目介绍)、 Security (项目安全)、 Insights (项目数据统计) 与 Settings (项目设置)。</p><p>在下方会展示代码文件以及项目说明 README.md 文件。</p>',24),p={},u=(0,a(83744).Z)(p,[["render",function(e,t){const a=(0,r.up)("ExternalLinkIcon");return(0,r.wg)(),(0,r.iD)(r.HY,null,[h,(0,r._)("p",null,[(0,r._)("a",n,[d,(0,r.Wm)(a)])]),c],64)}]])},83744:(e,t)=>{t.Z=(e,t)=>{const a=e.__vccOpts||e;for(const[e,r]of t)a[e]=r;return a}}}]);